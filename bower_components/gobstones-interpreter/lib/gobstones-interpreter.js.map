{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap c64ec326d9dd8d224711","webpack:///./src/i18n.js","webpack:///./src/exceptions.js","webpack:///./src/ast.js","webpack:///./src/runtime.js","webpack:///./src/value.js","webpack:///./src/reader.js","webpack:///./src/token.js","webpack:///./src/i18n/es.js","webpack:///./src/symtable.js","webpack:///./src/instruction.js","webpack:///./src/index.js","webpack:///./src/i18n/en.js","webpack:///./src/i18n/pt.js","webpack:///./src/bigint.js","webpack:///./src/runner.js","webpack:///./src/parser.js","webpack:///./src/lexer.js","webpack:///./src/linter.js","webpack:///./src/compiler.js","webpack:///./src/vm.js","webpack:///./src/board_formats.js"],"names":["i18n","i18nWithLanguage","i18nPosition","CURRENT_LANGUAGE","dictionaries","LOCALE_ES","LOCALE_EN","LOCALE_PT","message","code","thunk","Error","oldLanguage","position","filename","line","column","GbsInterpreterException","startPos","endPos","errorType","reason","args","row","isGobstonesException","length","apply","GbsWarning","GbsSyntaxError","GbsRuntimeError","N_Main","Symbol","for","N_DefProgram","N_DefInteractiveProgram","N_DefProcedure","N_DefFunction","N_DefType","N_StmtBlock","N_StmtReturn","N_StmtIf","N_StmtRepeat","N_StmtForeach","N_StmtWhile","N_StmtSwitch","N_StmtAssignVariable","N_StmtAssignTuple","N_StmtProcedureCall","N_PatternWildcard","N_PatternVariable","N_PatternNumber","N_PatternStructure","N_PatternTuple","N_PatternTimeout","N_ExprVariable","N_ExprConstantNumber","N_ExprConstantString","N_ExprChoose","N_ExprList","N_ExprRange","N_ExprTuple","N_ExprStructure","N_ExprStructureUpdate","N_ExprFunctionCall","N_SwitchBranch","N_FieldBinding","N_ConstructorDeclaration","indent","string","lines","split","push","join","showASTs","showAST","node","Array","Token","toString","tag","keyFor","substring","children","nodes","res","ASTNode","_tag","_children","_startPos","UnknownPosition","_endPos","_attributes","replace","contents","map","toMulangLike","attributes","ASTMain","definitions","ASTDefProgram","body","ASTDefInteractiveProgram","branches","ASTDefProcedure","name","parameters","ASTDefFunction","ASTDefType","typeName","constructorDeclarations","ASTStmtBlock","statements","ASTStmtReturn","result","ASTStmtIf","condition","thenBlock","elseBlock","ASTStmtRepeat","times","ASTStmtForeach","pattern","range","ASTStmtWhile","ASTStmtSwitch","subject","ASTSwitchBranch","ASTStmtAssignVariable","variable","value","ASTStmtAssignTuple","variables","ASTStmtProcedureCall","procedureName","ASTPatternWildcard","ASTPatternVariable","variableName","ASTPatternNumber","number","ASTPatternStructure","constructorName","ASTPatternTuple","ASTPatternTimeout","timeout","parseInt","ASTExprVariable","ASTExprConstantNumber","ASTExprConstantString","ASTExprChoose","trueExpr","falseExpr","ASTExprList","elements","ASTExprRange","first","second","last","ASTExprTuple","ASTExprStructure","fieldBindings","names","fieldBinding","fieldName","ASTExprStructureUpdate","original","ASTExprFunctionCall","functionName","ASTFieldBinding","ASTConstructorDeclaration","fieldNames","boolFromValue","typesWithOpposite","typesWithOrder","fail","boolEnum","colorEnum","dirEnum","keyEventEnum","modifiers","charKeys","specialKeys","symbolKeys","arrowKeys","keys","concat","eventNames","modifier","key","KEY_EVENT_ENUM","eventEnum","toEnum","enumeration","indexOf","fromEnum","index","dirOpposite","dirName","dirNext","dirPrev","colorNext","colorName","colorPrev","RuntimeState","_width","_height","_board","x","y","_emptyCell","_head","newState","cell","jboard","width","height","head","board","asNumber","newCell","ValueInteger","n","add","le","sub","canMove","delta","_deltaForDirection","PrimitiveOperation","argumentTypes","argumentValidator","implementation","_argumentTypes","_argumentValidator","_implementation","globalState","typeAny","TypeAny","typeInteger","TypeInteger","typeString","TypeString","typeBool","TypeStructure","typeListAny","TypeList","valueFromBool","bool","ValueStructure","typeColor","valueFromColor","colorFromValue","typeDir","valueFromDir","dirFromValue","noValidation","isInteger","type","isBool","isColor","isDir","enumIndex","genericLE","a","b","indexA","indexB","genericGE","ge","genericLT","lt","genericGT","gt","genericNext","genericPrev","genericOpposite","negate","validateTypeAmong","types","validateCompatibleTypes","RuntimePrimitives","_primitiveTypes","_primitiveProcedures","_primitiveFunctions","boolName","eventName","v1","v2","errorMessage","color","putStone","numStones","removeStone","dir","move","goToEdge","emptyBoardContents","errMsg","current","ValueList","list","num","mul","eq","div","mod","pow","equal","msg","append","tail","init","typeNames","constructorNames","primitiveName","procedureNames","functionNames","joinTypes","Ty_Any","Ty_Integer","Ty_String","Ty_Tuple","Ty_List","Ty_Structure","Type","TypeTuple","componentTypes","_componentTypes","strings","t","contentType","_contentType","cases","_typeName","_cases","caseStrings","sortedKeys","fieldTypes","fieldStrings","qualifiedConstructor","joinTupleTypes","joinListTypes","joinStructureTypes","joinFields","type1","type2","joinedComponents","i","t1","t2","tj","joinedContent","joinedCases","joinCommon","typeA","typeB","joinedFields","fields1","fields2","checkIncluded","fieldsA","fieldsB","joinedTypes","dictionary","sort","V_Integer","V_String","V_Tuple","V_List","V_Structure","Value","isString","isTuple","isList","isStructure","isBoolean","_number","other","subtract","multiply","z","abs","divide","inc","q","leq","geq","ValueString","_string","chr","ValueTuple","components","_components","_type","_inferType","component","_elements","element","allElements","elem","fields","_constructorName","_fields","newFields","newStructure","_clone","SourceReader","_filename","_index","_line","_column","_regions","r","peek","_","consumeCharacter","consumeInvisibleCharacter","j","region","slice","MultifileReader","input","_filenames","Object","_input","T_EOF","T_NUM","T_STRING","T_UPPERID","T_LOWERID","T_PROGRAM","T_INTERACTIVE","T_PROCEDURE","T_FUNCTION","T_RETURN","T_IF","T_THEN","T_ELSEIF","T_ELSE","T_CHOOSE","T_WHEN","T_OTHERWISE","T_REPEAT","T_FOREACH","T_IN","T_WHILE","T_SWITCH","T_TO","T_LET","T_NOT","T_DIV","T_MOD","T_TYPE","T_IS","T_RECORD","T_VARIANT","T_CASE","T_FIELD","T_UNDERSCORE","T_TIMEOUT","T_LPAREN","T_RPAREN","T_LBRACE","T_RBRACE","T_LBRACK","T_RBRACK","T_COMMA","T_SEMICOLON","T_ELLIPSIS","T_RANGE","T_GETS","T_PIPE","T_ARROW","T_ASSIGN","T_EQ","T_NE","T_LE","T_GE","T_LT","T_GT","T_AND","T_OR","T_CONCAT","T_PLUS","T_MINUS","T_TIMES","T_POW","_value","keyword","palabra","pluralize","singular","plural","ordinalNumber","units","describeType","isDirection","isAny","description","describeTypeSingular","typeAsNoun","gender","typeAsQualifierSingular","typeAsQualifierPlural","listOfTypes","typeStrings","openingDelimiterName","delimiter","formatTypes","symbol","pragmaName","option","expected","found","op1","op2","pos1","pos2","posFunction","posField","oldCat","oldPos","newCat","newPos","received","arity","expectedType","patternType","routineName","valueTag","constructorNameExpected","constructorNameReceived","oldType","newType","receivedType","size","missingFieldName","parameterIndex","numArgs","expectedTypes","millisecs","s","FieldDescriptor","LocalVariable","LocalParameter","LocalIndex","LocalNameDescriptor","category","_category","_position","SymbolTable","_program","_isInteractiveProgram","_procedures","_procedureParameters","_functions","_functionParameters","_types","_typeConstructors","_constructors","_constructorType","_constructorFields","_localNames","isProcedure","isFunction","isType","isConstructor","isField","definition","defProgram","parameter","fieldPos","constructorDeclaration","_declareConstructor","constructorFields","_declareField","localName","setLocalName","globalName","I_PushInteger","I_PushString","I_PushVariable","I_SetVariable","I_UnsetVariable","I_Label","I_Jump","I_JumpIfFalse","I_JumpIfStructure","I_JumpIfTuple","I_Call","I_Return","I_MakeTuple","I_MakeList","I_MakeStructure","I_UpdateStructure","I_ReadTupleComponent","I_ReadStructureField","I_ReadStructureFieldPop","I_Add","I_Dup","I_Pop","I_PrimitiveCall","I_SaveState","I_RestoreState","I_TypeCheck","Code","instructions","_instructions","instruction","ip","labelTargets","opcode","label","argToString","arg","Instruction","_opcode","_args","sargs","IPushInteger","IPushString","IPushVariable","ISetVariable","IUnsetVariable","ILabel","IJump","targetLabel","IJumpIfFalse","IJumpIfStructure","IJumpIfTuple","ICall","nargs","IReturn","IMakeTuple","IMakeList","IMakeStructure","IUpdateStructure","IReadTupleComponent","IReadStructureField","IReadStructureFieldPop","IAdd","IDup","IPop","IPrimitiveCall","ISaveState","IRestoreState","ITypeCheck","DEFAULT_INFINITE_LOOP_TIMEOUT","DEFAULT_LANGUAGE","apiboardToState","apiboard","state","load","apiboardFromState","dump","apivalueFromValue","composedValue","componentKind","it","apiValue","GobstonesInterpreterError","exception","detail","on","start","end","ParseError","ExecutionError","snapshots","regionStack","isTimeout","NormalExecutionResult","finalBoard","returnValue","actualReturnValue","InteractiveExecutionResult","_collectKeyNames","_timeoutValue","onInit","_onInitFunction","onKey","_onKeyFunction","onTimeout","_onTimeoutFunction","runner","symbolTable","program","branch","p","_hasInit","self","language","_onEvent","_hasTimeout","keyCode","eventValue","executeEventWithTimeout","infiniteLoopTimeout","undefined","SnapshotTaker","_runner","_snapshots","callStack","_shouldTakeSnapshot","_snapshot","snapshot","contextNames","stackFrame","uniqueFrameId","routineNameStack","primitives","_noAtomicRoutines","pop","_isRecorded","_isAtomic","ParseResult","isInteractiveProgram","_resultForInteractiveProgram","_resultForProgram","declarations","_collectDeclarations","getAttributes","alias","interpret","snapshotTaker","compile","executeWithTimeoutTakingSnapshots","takeSnapshot","bind","initializeVirtualMachine","allProcedureNames","allFunctionNames","GobstonesInterpreterAPI","Runner","config","setLanguage","setInfiniteLoopTimeout","milliseconds","setXGobstonesEnabled","isEnabled","gbb","read","write","getAst","sourceCode","_withState","abstractSyntaxTree","parse","useLinter","action","initialize","enableLintCheck","lint","Integer","BASE","LOG_BASE","MAX_INT","MAX_INT_ARR","smallToArray","LOG_MAX_INT","Math","log","v","radix","parseValue","parseBase","BigInteger","sign","isSmall","prototype","create","SmallInteger","isPrecise","floor","arrayToSmall","arr","trim","compareAbs","createArray","truncate","ceil","l_a","l_b","carry","base","sum","addAny","addSmall","l","plus","a_l","b_l","borrow","difference","subtractAny","subtractSmall","minus","small","multiplyLong","product","a_i","b_j","multiplySmall","shiftLeft","multiplyKaratsuba","max","d","c","ac","bd","abcd","useKaratsuba","l1","l2","multiplySmallAndArray","_multiplyBySmall","square","a_j","divMod1","divisorMostSignificantDigit","lambda","remainder","divisor","quotientDigit","shift","divModSmall","divMod2","part","guess","xlen","highx","highy","check","unshift","reverse","quotient","divModAny","comparison","qSign","mSign","divmod","over","isEven","modPow","exp","isZero","isPositive","isOdd","compare","Infinity","compareTo","equals","notEquals","neq","greater","lesser","greaterOrEquals","lesserOrEquals","isNegative","isUnit","isDivisibleBy","isBasicPrime","isPrime","nPrev","prev","bigInt","isProbablePrime","iterations","randBetween","modInv","zero","newT","one","newR","lastT","lastR","next","powersOfTwo","powers2Length","highestPower2","shift_isSmall","String","shiftRight","remQuo","bitwise","fn","xSign","ySign","xRem","not","yRem","xBits","yBits","xStop","yStop","and","or","xor","LOBMASK_I","LOBMASK_BI","roughLOB","min","gcd","lcm","low","high","round","random","restricted","top","digit","text","absBase","toLowerCase","test","charCodeAt","isNaN","digits","charCode","parseBaseFromArray","val","stringify","charAt","toBase","minusSign","out","left","str","zeros","valueOf","toJSNumber","parseStringValue","decimalPlace","isValid","parseNumberValue","minusOne","isInstance","fromArray","tok","_ast","_primitives","_symtable","_newSymtableWithPrimitives","_linter","Linter","_code","_vm","_result","runState","initialState","execute","parser","Parser","getLanguageOptions","_setLanguageOption","linterCheckId","enabled","enableCheck","Compiler","VirtualMachine","executeWithTimeout","snapshotCallback","runWithTimeoutTakingSnapshots","runEventWithTimeout","symtable","defType","_astDefType","procedures","defProcedure","_astDefProcedure","functions","defFunction","_astDefFunction","typeConstructors","constructor","_astConstructorDeclaration","getOperation","field","Infix","InfixL","InfixR","Prefix","PrecedenceLevel","fixity","operators","_fixity","_operators","token","OPERATORS","_lexer","Lexer","_nextToken","_currentToken","_parseDefinition","_parseDefProgram","_parseDefInteractiveProgram","_parseDefProcedure","_parseDefFunction","_parseDefType","_match","getPendingAttributes","block","_parseStmtBlock","_parseSwitchBranches","_parseUpperid","_parseLoweridSeq","_parseDefTypeRecord","_parseDefTypeVariant","_parseFieldNames","_matchExpected","_parseConstructorDeclaration","_parseLowerid","statement","_parsePureStatement","_parseStmtEllipsis","_parseStmtReturn","_parseStmtIf","_parseStmtRepeat","_parseStmtForeach","_parseStmtWhile","_parseStmtSwitch","_parseStmtLet","_parseStmtAssignVariable","_parseStmtProcedureCall","_parseStatement","tuple","_parseExprTuple","expectInitialIf","_parseExpression","_parsePattern","_parseStmtAssignTuple","keyfor","_parseDelimitedSeq","_parsePatternWildcard","_parsePatternVariable","_parsePatternNumber","_parsePatternStructure","_parsePatternTuple","_parsePatternTimeout","id","_parseExprOperator","level","_parseExprAtom","_parseExprOperatorInfix","_parseExprOperatorInfixL","_parseExprOperatorInfixR","_parseExprOperatorPrefix","isOperator","op","right","result2","inner","_parseExprEllipsis","_parseExprVariableOrFunctionCall","_parseExprConstantNumber","_parseExprConstantString","_parseExprChoose","_parseExprStructureOrStructureUpdate","_parseExprListOrRange","_parseExpressionSeq","expectInitialChoose","expr1","expr2","_parseStructure","_parseStructureUpdate","fieldName1","value1","fieldBinding1","_parseNonEmptyDelimitedSeq","_parseFieldBinding","_parseExprListRemainder","_parseExprRange","prefix","expressionList","_parseSwitchBranch","nextToken","tokenTag","tagList","rightDelimiter","separator","parseElement","lowerid","upperid","isWhitespace","isDigit","isAlpha","toUpperCase","isUpper","isLower","isIdent","KEYWORDS","SYMBOLS","LANGUAGE_OPTIONS","leadingZeroes","CLOSING_DELIMITERS","_multifileReader","_reader","readCurrentFile","_warnings","_delimiterStack","_pendingAttributes","_languageOptions","_findNextToken","_checkBalancedDelimiters","_readStringWhile","_readStringConstant","_readSymbol","_ignoreWhitespaceAndComments","eof","moreFiles","nextFile","c2","startsWith","consumeString","_ignoreWhitespace","_ignoreComments","_startSingleLineComment","_ignoreSingleLineComment","_evaluatePragma","_readInvisiblePragma","_ignoreMultilineComment","nesting","pragmaDelim","pragma","consumeInvisibleString","_readInvisibleStringUntilDelimiter","_emitWarning","beginRegion","endRegion","setAttribute","languageOption","addLanguageOption","openingDelimiter","isBlockWithReturn","stmt","_enabledLinterChecks","ast","_lintMain","_ensureLintCheckExists","_addDefinitionToSymbolTable","_lintCheck","_lintDefinition","defInteractiveProgram","_lintDefProgram","_lintDefInteractiveProgram","_lintDefProcedure","_lintDefFunction","_lintDefType","_lintStmtBlock","exitScope","_lintSwitchBranches","addNewLocalName","_lintStmtReturn","_lintStmtIf","_lintStmtRepeat","_lintStmtForeach","_lintStmtWhile","_lintStmtSwitch","_lintStmtAssignVariable","_lintStmtAssignTuple","_lintStmtProcedureCall","allowReturn","returnAllowed","_lintStatement","_lintExpression","_lintStmtForeachPattern","boundVariables","removeLocalName","_lintPattern","_patternType","_switchBranchesCheckWildcardAndVariable","_switchBranchesCheckNoRepeats","_switchBranchesCheckCompatible","_switchBranchesCheckTypeEvent","_switchBranchesCheckTypeNotEvent","_lintSwitchBranchBody","coveredNumbers","coveredConstructors","coveredTuples","coveredTimeout","constructorType","procedureParameters","argument","_lintPatternWildcard","_lintPatternVariable","_lintPatternNumber","_lintPatternStructure","_lintPatternTuple","_lintPatternTimeout","_failExpectedConstructorButGot","expression","_lintExprVariable","_lintExprConstantNumber","_lintExprConstantString","_lintExprChoose","_lintExprList","_lintExprRange","_lintExprTuple","_lintExprStructure","_lintExprStructureUpdate","_lintExprFunctionCall","_lintExprStructureOrUpdate","_checkStructureTypeNotEvent","_checkStructureNoRepeatedFields","_checkStructureBindingsCorrect","_checkStructureBindingsComplete","declaredFields","seen","functionParameters","_nextLabel","_nextVariable","_compileMain","_produce","_compileDefProgram","_compileDefInteractiveProgram","_compileDefProcedure","_compileDefFunction","_compileStatement","_compileMatchSwitchBranches","parameterName","_produceList","_compileStmtBlock","_compileStmtReturn","_compileStmtIf","_compileStmtRepeat","_compileStmtForeach","_compileStmtWhile","_compileStmtSwitch","_compileStmtAssignVariable","_compileStmtAssignTuple","_compileStmtProcedureCall","_compileExpression","labelElse","_freshLabel","labelEnd","labelStart","_freshVariable","pos","_compileMatchForeachPatternOrFail","_compilePatternUnbind","_compilePatternCheck","_compilePatternBind","branchLabels","anys","_compileStmtProcedureCallPrimitive","_compileStmtProcedureCallUserDefined","_compilePatternCheckWildcard","_compilePatternCheckVariable","_compilePatternCheckNumber","_compilePatternCheckStructure","_compilePatternCheckTuple","_compilePatternCheckTimeout","_compilePatternBindVariable","_compilePatternBindStructure","_compilePatternBindTuple","_compileExprVariable","_compileExprConstantNumber","_compileExprConstantString","_compileExprChoose","_compileExprList","_compileExprRange","_compileExprTuple","_compileExprStructure","_compileExprStructureUpdate","_compileExprFunctionCall","labelOtherwise","_compileExprFunctionCallAnd","_compileExprFunctionCallOr","_compileExprFunctionCallPrimitive","_compileExprFunctionCallUserDefined","_compileExprFunctionCallFieldAccessor","produce","RT_ExitProgram","RuntimeCondition","RuntimeExitProgram","Frame","frameId","instructionPointer","_routineName","_instructionPointer","_variables","_stack","_uniqueFrameId","_labelTargets","_nextFrameId","_callStack","_newFrame","_globalStateStack","_snapshotCallback","runWithTimeout","_currentFrame","pushValue","startTime","Date","getTime","_takeSnapshot","_step","_timeoutIfNeeded","_currentInstruction","at","_stepPushInteger","_stepPushString","_stepPushVariable","_stepSetVariable","_stepUnsetVariable","_stepLabel","_stepJump","_stepJumpIfFalse","_stepJumpIfStructure","_stepJumpIfTuple","_stepCall","_stepReturn","_stepMakeTuple","_stepMakeList","_stepMakeStructure","_stepUpdateStructure","_stepReadTupleComponent","_stepReadStructureField","_stepReadStructureFieldPop","_stepAdd","_stepDup","_stepPop","_stepPrimitiveCall","_stepSaveState","_stepRestoreState","_stepTypeCheck","frame","getVariable","newValue","popValue","oldValue","setVariable","unsetVariable","stackTop","callerFrame","newFrame","stackEmpty","innerFrame","outerFrame","newFieldNames","structure","updateFields","shouldPopStructure","_stepReadStructureFieldGeneric","isOperation","primitive","validateArguments","call","clone","apiboardFromJboard","apiboardToJboard","gbbFromJboard","gbbToJboard","readJboardFromFile","writeJboardToFile","BoardFormat","formatName","extension","fromJboard","toJboard","_formatName","_description","_extension","_fromJboard","_toJboard","table","cellO","blue","black","red","green","ca","cn","cr","cv","gsboardFromJboard","gsboard","sizeX","sizeY","JSON","gsboardToJboard","gsBoardString","isNumeric","skipWhitespace","readToken","readN","errmsg","readRange","headDeclared","cellDeclared","colores","hx","hy","cx","cy","colorDeclared","colorId","BOARD_FORMAT_LIST","DEFAULT_FORMAT","BOARD_FORMATS","boardFormat","fileExtension","parts","fileBoardFormat","fmt","fs","require","format","readFileSync","writeFileSync"],"mappings":"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","file":"gobstones-interpreter.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"gobstones-interpreter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gobstones-interpreter\"] = factory();\n\telse\n\t\troot[\"gobstones-interpreter\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c64ec326d9dd8d224711","\nimport { LOCALE_ES } from './i18n/es';\nimport { LOCALE_EN } from './i18n/en';\nimport { LOCALE_PT } from './i18n/pt';\n\nlet CURRENT_LANGUAGE = 'es';\n\nlet dictionaries = {\n  'es': LOCALE_ES,\n  'en': LOCALE_EN,\n  'pt': LOCALE_PT,\n};\n\nexport function i18n(message) {\n  return dictionaries[CURRENT_LANGUAGE][message];\n}\n\nexport function i18nWithLanguage(code, thunk) {\n  if (!(code in dictionaries)) {\n    throw Error('Invalid language code: ' + code);\n  }\n  let oldLanguage = CURRENT_LANGUAGE;\n  CURRENT_LANGUAGE = code;\n  try {\n    return thunk();\n  } finally {\n    CURRENT_LANGUAGE = oldLanguage;\n  }\n}\n\nexport function i18nPosition(position) {\n  return i18n('<position>')(\n           position.filename,\n           position.line,\n           position.column,\n         );\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/i18n.js","import { i18n } from './i18n';\n\n/* Base class for signalling conditions */\nexport class GbsInterpreterException extends Error {\n  /* Note: position should typically be an instance of SourceReader */\n  constructor(startPos, endPos, errorType, reason, args) {\n    super(reason, startPos.filename, startPos.row);\n    this.isGobstonesException = true;\n    this.startPos = startPos;\n    this.endPos = endPos;\n    this.reason = reason;\n    this.args = args;\n\n    this.message = reason === 'boom-called'\n      ? args[0]\n      : i18n(errorType + ':' + reason);\n\n    if (args.length > 0 && typeof this.message === 'function') {\n      this.message = this.message.apply(null, args);\n    }\n  }\n}\n\nexport class GbsWarning extends GbsInterpreterException {\n  constructor(startPos, endPos, reason, args) {\n    super(startPos, endPos, 'warning', reason, args);\n  }\n}\n\nexport class GbsSyntaxError extends GbsInterpreterException {\n  constructor(startPos, endPos, reason, args) {\n    super(startPos, endPos, 'errmsg', reason, args);\n  }\n}\n\nexport class GbsRuntimeError extends GbsInterpreterException {\n  constructor(startPos, endPos, reason, args) {\n    super(startPos, endPos, 'errmsg', reason, args);\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/exceptions.js","import { UnknownPosition } from './reader';\nimport { Token } from './token';\n\nexport const N_Main = Symbol.for('N_Main');\n/* Definitions */\nexport const N_DefProgram = Symbol.for('N_DefProgram');\nexport const N_DefInteractiveProgram = Symbol.for('N_DefInteractiveProgram');\nexport const N_DefProcedure = Symbol.for('N_DefProcedure');\nexport const N_DefFunction = Symbol.for('N_DefFunction');\nexport const N_DefType = Symbol.for('N_DefType');\n/* Statements */\nexport const N_StmtBlock = Symbol.for('N_StmtBlock');\nexport const N_StmtReturn = Symbol.for('N_StmtReturn');\nexport const N_StmtIf = Symbol.for('N_StmtIf');\nexport const N_StmtRepeat = Symbol.for('N_StmtRepeat');\nexport const N_StmtForeach = Symbol.for('N_StmtForeach');\nexport const N_StmtWhile = Symbol.for('N_StmtWhile');\nexport const N_StmtSwitch = Symbol.for('N_StmtSwitch');\nexport const N_StmtAssignVariable = Symbol.for('N_StmtAssignVariable');\nexport const N_StmtAssignTuple = Symbol.for('N_StmtAssignTuple');\nexport const N_StmtProcedureCall = Symbol.for('N_StmtProcedureCall');\n/* Patterns */\nexport const N_PatternWildcard = Symbol.for('N_PatternWildcard');\nexport const N_PatternVariable = Symbol.for('N_PatternVariable');\nexport const N_PatternNumber = Symbol.for('N_PatternNumber');\nexport const N_PatternStructure = Symbol.for('N_PatternStructure');\nexport const N_PatternTuple = Symbol.for('N_PatternTuple');\nexport const N_PatternTimeout = Symbol.for('N_PatternTimeout');\n/* Expressions */\nexport const N_ExprVariable = Symbol.for('N_ExprVariable');\nexport const N_ExprConstantNumber = Symbol.for('N_ExprConstantNumber');\nexport const N_ExprConstantString = Symbol.for('N_ExprConstantString');\nexport const N_ExprChoose = Symbol.for('N_ExprChoose');\nexport const N_ExprList = Symbol.for('N_ExprList');\nexport const N_ExprRange = Symbol.for('N_ExprRange');\nexport const N_ExprTuple = Symbol.for('N_ExprTuple');\nexport const N_ExprStructure = Symbol.for('N_ExprStructure');\nexport const N_ExprStructureUpdate = Symbol.for('N_ExprStructureUpdate');\nexport const N_ExprFunctionCall = Symbol.for('N_ExprFunctionCall');\n/* SwitchBranch: pattern -> body */\nexport const N_SwitchBranch = Symbol.for('N_SwitchBranch');\n/* FieldBinding: fieldName <- value */\nexport const N_FieldBinding = Symbol.for('N_FieldBinding');\n/* ConstructorDeclaration */\nexport const N_ConstructorDeclaration = Symbol.for('N_ConstructorDeclaration');\n\n/* Helper functions for the ASTNode toString method */\n\nfunction indent(string) {\n  let lines = [];\n  for (let line of string.split('\\n')) {\n    lines.push('  ' + line);\n  }\n  return lines.join('\\n');\n}\n\nlet showASTs; /* Forward declaration (for ESLint) */\n\nfunction showAST(node) {\n  if (node === null) {\n    return 'null';\n  } else if (node instanceof Array) {\n    return '[\\n' + showASTs(node).join(',\\n') + '\\n]';\n  } else if (node instanceof Token) {\n    return node.toString();\n  } else {\n    let tag = Symbol.keyFor(node.tag).substring(2);\n    return tag + '(\\n' + showASTs(node.children).join(',\\n') + '\\n)';\n  }\n}\n\nshowASTs = function (nodes) {\n  let res = [];\n  for (let node of nodes) {\n    res.push(indent(showAST(node)));\n  }\n  return res;\n};\n\n/* An instance of ASTNode represents a node of the abstract syntax tree.\n * - tag should be a node tag symbol.\n * - children should be (recursively) a possibly empty array of ASTNode's.\n * - startPos and endPos represent the starting and ending\n *   position of the code fragment in the source code, to aid error\n *   reporting.\n */\nexport class ASTNode {\n  constructor(tag, children) {\n    this._tag = tag;\n    this._children = children;\n    this._startPos = UnknownPosition;\n    this._endPos = UnknownPosition;\n    this._attributes = {};\n\n    /* Assert this invariant to protect against common mistakes. */\n    if (!(children instanceof Array)) {\n      throw Error('The children of an ASTNode should be an array.');\n    }\n  }\n\n  toMulangLike() {\n    return {\n      tag: this._tag.toString().replace(/(^Symbol\\(|\\)$)/g, ''),\n      contents: this._children.map((node) => {\n        if (node === null) {\n          return 'null';\n        } else if (node instanceof Array) {\n          return new ASTNode(Symbol('?'), node).toMulangLike().contents;\n        } else if (node instanceof ASTNode) {\n          return node.toMulangLike();\n        } else if (node instanceof Token) {\n          return node.toString();\n        } else {\n          return '?';\n        }\n      })\n    };\n  }\n\n  toString() {\n    return showAST(this);\n  }\n\n  get tag() {\n    return this._tag;\n  }\n\n  get children() {\n    return this._children;\n  }\n\n  set startPos(position) {\n    this._startPos = position;\n  }\n\n  get startPos() {\n    return this._startPos;\n  }\n\n  set endPos(position) {\n    this._endPos = position;\n  }\n\n  get endPos() {\n    return this._endPos;\n  }\n\n  get attributes() {\n    return this._attributes;\n  }\n\n  set attributes(attributes) {\n    this._attributes = attributes;\n  }\n\n}\n\n/* Main */\n\nexport class ASTMain extends ASTNode {\n  constructor(definitions) {\n    super(N_Main, definitions);\n  }\n\n  get definitions() {\n    return this._children;\n  }\n}\n\n/* Definitions */\n\nexport class ASTDefProgram extends ASTNode {\n  constructor(body) {\n    super(N_DefProgram, [body]);\n  }\n\n  get body() {\n    return this.children[0];\n  }\n}\n\nexport class ASTDefInteractiveProgram extends ASTNode {\n  constructor(branches) {\n    super(N_DefInteractiveProgram, branches);\n  }\n\n  get branches() {\n    return this.children;\n  }\n}\n\nexport class ASTDefProcedure extends ASTNode {\n  constructor(name, parameters, body) {\n    super(N_DefProcedure, [name, parameters, body]);\n  }\n\n  get name() {\n    return this.children[0];\n  }\n\n  get parameters() {\n    return this.children[1];\n  }\n\n  get body() {\n    return this.children[2];\n  }\n}\n\nexport class ASTDefFunction extends ASTNode {\n  constructor(name, parameters, body) {\n    super(N_DefFunction, [name, parameters, body]);\n  }\n\n  get name() {\n    return this.children[0];\n  }\n\n  get parameters() {\n    return this.children[1];\n  }\n\n  get body() {\n    return this.children[2];\n  }\n}\n\nexport class ASTDefType extends ASTNode {\n  constructor(typeName, constructorDeclarations) {\n    super(N_DefType, [typeName, constructorDeclarations]);\n  }\n\n  get typeName() {\n    return this._children[0];\n  }\n\n  get constructorDeclarations() {\n    return this._children[1];\n  }\n}\n\n/* Statements */\n\nexport class ASTStmtBlock extends ASTNode {\n  constructor(statements) {\n    super(N_StmtBlock, statements);\n  }\n\n  get statements() {\n    return this.children;\n  }\n}\n\nexport class ASTStmtReturn extends ASTNode {\n  constructor(result) {\n    super(N_StmtReturn, [result]);\n  }\n\n  get result() {\n    return this.children[0];\n  }\n}\n\nexport class ASTStmtIf extends ASTNode {\n  // Note: elseBlock may be null\n  constructor(condition, thenBlock, elseBlock) {\n    super(N_StmtIf, [condition, thenBlock, elseBlock]);\n  }\n\n  get condition() {\n    return this._children[0];\n  }\n\n  get thenBlock() {\n    return this._children[1];\n  }\n\n  get elseBlock() {\n    return this._children[2];\n  }\n}\n\nexport class ASTStmtRepeat extends ASTNode {\n  constructor(times, body) {\n    super(N_StmtRepeat, [times, body]);\n  }\n\n  get times() {\n    return this._children[0];\n  }\n\n  get body() {\n    return this._children[1];\n  }\n}\n\nexport class ASTStmtForeach extends ASTNode {\n  constructor(pattern, range, body) {\n    super(N_StmtForeach, [pattern, range, body]);\n  }\n\n  get pattern() {\n    return this._children[0];\n  }\n\n  get range() {\n    return this._children[1];\n  }\n\n  get body() {\n    return this._children[2];\n  }\n}\n\nexport class ASTStmtWhile extends ASTNode {\n  constructor(condition, body) {\n    super(N_StmtWhile, [condition, body]);\n  }\n\n  get condition() {\n    return this._children[0];\n  }\n\n  get body() {\n    return this._children[1];\n  }\n}\n\nexport class ASTStmtSwitch extends ASTNode {\n  constructor(subject, branches) {\n    super(N_StmtSwitch, [subject, branches]);\n  }\n\n  get subject() {\n    return this._children[0];\n  }\n\n  get branches() {\n    return this._children[1];\n  }\n}\n\nexport class ASTSwitchBranch extends ASTNode {\n  constructor(pattern, body) {\n    super(N_SwitchBranch, [pattern, body]);\n  }\n\n  get pattern() {\n    return this._children[0];\n  }\n\n  get body() {\n    return this._children[1];\n  }\n}\n\nexport class ASTStmtAssignVariable extends ASTNode {\n  constructor(variable, value) {\n    super(N_StmtAssignVariable, [variable, value]);\n  }\n\n  get variable() {\n    return this._children[0];\n  }\n\n  get value() {\n    return this._children[1];\n  }\n}\n\nexport class ASTStmtAssignTuple extends ASTNode {\n  constructor(variables, value) {\n    super(N_StmtAssignTuple, [variables, value]);\n  }\n\n  get variables() {\n    return this._children[0];\n  }\n\n  get value() {\n    return this._children[1];\n  }\n}\n\nexport class ASTStmtProcedureCall extends ASTNode {\n  constructor(procedureName, args) {\n    super(N_StmtProcedureCall, [procedureName, args]);\n  }\n\n  get procedureName() {\n    return this._children[0];\n  }\n\n  get args() {\n    return this._children[1];\n  }\n}\n\n/* Patterns */\n\nexport class ASTPatternWildcard extends ASTNode {\n  constructor() {\n    super(N_PatternWildcard, []);\n  }\n\n  get boundVariables() {\n    return [];\n  }\n}\n\nexport class ASTPatternVariable extends ASTNode {\n  constructor(variableName) {\n    super(N_PatternVariable, [variableName]);\n  }\n\n  get variableName() {\n    return this._children[0];\n  }\n\n  get boundVariables() {\n    return [this._children[0]];\n  }\n}\n\nexport class ASTPatternNumber extends ASTNode {\n  constructor(number) {\n    super(N_PatternNumber, [number]);\n  }\n\n  get number() {\n    return this._children[0];\n  }\n\n  get boundVariables() {\n    return [];\n  }\n}\n\nexport class ASTPatternStructure extends ASTNode {\n  constructor(constructorName, parameters) {\n    super(N_PatternStructure, [constructorName, parameters]);\n  }\n\n  get constructorName() {\n    return this._children[0];\n  }\n\n  get boundVariables() {\n    return this._children[1];\n  }\n}\n\nexport class ASTPatternTuple extends ASTNode {\n  constructor(parameters) {\n    super(N_PatternTuple, parameters);\n  }\n\n  get boundVariables() {\n    return this._children;\n  }\n}\n\nexport class ASTPatternTimeout extends ASTNode {\n  constructor(timeout) {\n    super(N_PatternTimeout, [timeout]);\n  }\n\n  get boundVariables() {\n    return [];\n  }\n\n  get timeout() {\n    return parseInt(this._children[0].value, 10);\n  }\n}\n\n/* Expressions */\n\nexport class ASTExprVariable extends ASTNode {\n  constructor(variableName) {\n    super(N_ExprVariable, [variableName]);\n  }\n\n  get variableName() {\n    return this._children[0];\n  }\n}\n\nexport class ASTExprConstantNumber extends ASTNode {\n  constructor(number) {\n    super(N_ExprConstantNumber, [number]);\n  }\n\n  get number() {\n    return this._children[0];\n  }\n}\n\nexport class ASTExprConstantString extends ASTNode {\n  constructor(string) {\n    super(N_ExprConstantString, [string]);\n  }\n\n  get string() {\n    return this._children[0];\n  }\n}\n\nexport class ASTExprChoose extends ASTNode {\n  constructor(condition, trueExpr, falseExpr) {\n    super(N_ExprChoose, [condition, trueExpr, falseExpr]);\n  }\n\n  get condition() {\n    return this._children[0];\n  }\n\n  get trueExpr() {\n    return this._children[1];\n  }\n\n  get falseExpr() {\n    return this._children[2];\n  }\n}\n\nexport class ASTExprList extends ASTNode {\n  constructor(elements) {\n    super(N_ExprList, elements);\n  }\n\n  get elements() {\n    return this._children;\n  }\n}\n\nexport class ASTExprRange extends ASTNode {\n  // Note: second may be null\n  constructor(first, second, last) {\n    super(N_ExprRange, [first, second, last]);\n  }\n\n  get first() {\n    return this._children[0];\n  }\n\n  get second() {\n    return this._children[1];\n  }\n\n  get last() {\n    return this._children[2];\n  }\n}\n\nexport class ASTExprTuple extends ASTNode {\n  constructor(elements) {\n    super(N_ExprTuple, elements);\n  }\n\n  get elements() {\n    return this.children;\n  }\n}\n\nexport class ASTExprStructure extends ASTNode {\n  constructor(constructorName, fieldBindings) {\n    super(N_ExprStructure, [constructorName, fieldBindings]);\n  }\n\n  get constructorName() {\n    return this._children[0];\n  }\n\n  get fieldBindings() {\n    return this._children[1];\n  }\n\n  fieldNames() {\n    let names = [];\n    for (let fieldBinding of this.fieldBindings) {\n      names.push(fieldBinding.fieldName.value);\n    }\n    return names;\n  }\n}\n\nexport class ASTExprStructureUpdate extends ASTNode {\n  constructor(constructorName, original, fieldBindings) {\n    super(N_ExprStructureUpdate, [constructorName, original, fieldBindings]);\n  }\n\n  get constructorName() {\n    return this._children[0];\n  }\n\n  get original() {\n    return this._children[1];\n  }\n\n  get fieldBindings() {\n    return this._children[2];\n  }\n\n  fieldNames() {\n    let names = [];\n    for (let fieldBinding of this.fieldBindings) {\n      names.push(fieldBinding.fieldName.value);\n    }\n    return names;\n  }\n}\n\nexport class ASTExprFunctionCall extends ASTNode {\n  constructor(functionName, args) {\n    super(N_ExprFunctionCall, [functionName, args]);\n  }\n\n  get functionName() {\n    return this._children[0];\n  }\n\n  get args() {\n    return this._children[1];\n  }\n}\n\nexport class ASTFieldBinding extends ASTNode {\n  constructor(fieldName, value) {\n    super(N_FieldBinding, [fieldName, value]);\n  }\n\n  get fieldName() {\n    return this._children[0];\n  }\n\n  get value() {\n    return this._children[1];\n  }\n}\n\nexport class ASTConstructorDeclaration extends ASTNode {\n  constructor(constructorName, fieldNames) {\n    super(N_ConstructorDeclaration, [constructorName, fieldNames]);\n  }\n\n  get constructorName() {\n    return this._children[0];\n  }\n\n  get fieldNames() {\n    return this._children[1];\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/ast.js","import { i18n } from './i18n';\nimport {\n  ValueInteger,\n  ValueList,\n  ValueStructure,\n  TypeAny,\n  TypeInteger,\n  TypeString,\n  TypeStructure,\n  TypeList,\n  joinTypes,\n} from './value';\nimport {\n  GbsRuntimeError,\n} from './exceptions';\n\n/*\n * This module provides the runtime support for the execution of a program.\n *\n * The runtime support includes:\n *\n * - A definition of a class RuntimeState, representing the global state\n *   of a program.\n *\n * - A definition of a class RuntimePrimitives, representing the available\n *   primitive functions.\n *\n * This file is a particular implementation, in which RuntimeState\n * represents a Gobstones board, and RuntimePrimitives are the primitives\n * functions and procedures available in Gobstones.\n *\n * Potential variants of the language might have a different notion of\n * global state, and different available primitives.\n */\n\nfunction fail(startPos, endPos, reason, args) {\n  throw new GbsRuntimeError(startPos, endPos, reason, args);\n}\n\nfunction boolEnum() {\n  return [\n    i18n('CONS:False'),\n    i18n('CONS:True'),\n  ];\n}\n\nfunction colorEnum() {\n  return [\n    i18n('CONS:Color0'),\n    i18n('CONS:Color1'),\n    i18n('CONS:Color2'),\n    i18n('CONS:Color3'),\n  ];\n}\n\nfunction dirEnum() {\n  return [\n    i18n('CONS:Dir0'),\n    i18n('CONS:Dir1'),\n    i18n('CONS:Dir2'),\n    i18n('CONS:Dir3'),\n  ];\n}\n\n/* Enumeration of all the constructors of the Event type, including\n * INIT and TIMEOUT. */\nfunction keyEventEnum() {\n  let modifiers = [\n    '', 'CTRL_', 'ALT_', 'SHIFT_', 'CTRL_ALT_', 'CTRL_SHIFT_', 'ALT_SHIFT_',\n    'CTRL_ALT_SHIFT_',\n  ];\n  let charKeys = [\n    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  ];\n  let specialKeys = [\n    'SPACE', 'ENTER', 'TAB', 'BACKSPACE', 'DELETE', 'ESCAPE',\n  ];\n  let symbolKeys = [\n    'PLUS', 'MINUS', 'ASTERISK', 'SLASH', 'EQUALS', 'L_PARENT', 'R_PARENT',\n    'L_BRACKET', 'R_BRACKET', 'L_ANGLEBR', 'R_ANGLEBR',\n  ];\n  let arrowKeys = [\n    'ARROW_LEFT', 'ARROW_RIGHT', 'ARROW_UP', 'ARROW_DOWN',\n  ];\n  let keys = charKeys.concat(specialKeys).concat(symbolKeys).concat(arrowKeys);\n\n  let eventNames = [];\n  for (let modifier of modifiers) {\n    for (let key of keys) {\n      eventNames.push('K_' + modifier + key);\n    }\n  }\n  return eventNames;\n}\n\nlet KEY_EVENT_ENUM = keyEventEnum();\n\nfunction eventEnum() {\n  return [i18n('CONS:INIT'), i18n('CONS:TIMEOUT')].concat(KEY_EVENT_ENUM);\n}\n\nfunction toEnum(enumeration, name) {\n  return enumeration.indexOf(name);\n}\n\nfunction fromEnum(enumeration, index) {\n  return enumeration[index];\n}\n\nfunction dirOpposite(dirName) {\n  return fromEnum(dirEnum(), (toEnum(dirEnum(), dirName) + 2) % 4);\n}\n\nfunction dirNext(dirName) {\n  return fromEnum(dirEnum(), (toEnum(dirEnum(), dirName) + 1) % 4);\n}\n\nfunction dirPrev(dirName) {\n  return fromEnum(dirEnum(), (toEnum(dirEnum(), dirName) + 3) % 4);\n}\n\nfunction colorNext(colorName) {\n  return fromEnum(colorEnum(), (toEnum(colorEnum(), colorName) + 1) % 4);\n}\n\nfunction colorPrev(colorName) {\n  return fromEnum(colorEnum(), (toEnum(colorEnum(), colorName) + 3) % 4);\n}\n\n/*\n * An instance of RuntimeState represents the current global state of\n * a program. In the case of Gobstones, it is a Gobstones board.\n *\n * It MUST implement the following methods:\n *\n *   this.clone() ~~> returns a copy of the state\n *\n */\nexport class RuntimeState {\n  constructor() {\n    /*\n     * The board is represented as a list of columns, so that board[x] is the\n     * x-th column and board[x][y] is the cell at (x, y).\n     *\n     * By default, create an empty 9x9 board.\n     */\n    this._width = 11;\n    this._height = 7;\n    this._board = [];\n    for (let x = 0; x < this._width; x++) {\n      let column = [];\n      for (let y = 0; y < this._height; y++) {\n        column.push(this._emptyCell());\n      }\n      this._board.push(column);\n    }\n    this._head = {'x': 0, 'y': 0};\n  }\n\n  clone() {\n    let newState = new RuntimeState();\n    newState._width = this._width;\n    newState._height = this._height;\n    newState._board = [];\n    for (let x = 0; x < this._width; x++) {\n      let column = [];\n      for (let y = 0; y < this._height; y++) {\n        let cell = {};\n        for (let colorName of colorEnum()) {\n          cell[colorName] = this._board[x][y][colorName];\n        }\n        column.push(cell);\n      }\n      newState._board.push(column);\n    }\n    newState._head = {'x': this._head.x, 'y': this._head.y};\n    return newState;\n  }\n\n  /* Dump the state to a Jboard data structure */\n  dump() {\n    let jboard = {};\n    jboard.width = this._width;\n    jboard.height = this._height;\n    jboard.head = [this._head.x, this._head.y];\n    jboard.board = [];\n    for (let x = 0; x < this._width; x++) {\n      let column = [];\n      for (let y = 0; y < this._height; y++) {\n        let cell = {};\n        cell['a'] = this._board[x][y][i18n('CONS:Color0')].asNumber();\n        cell['n'] = this._board[x][y][i18n('CONS:Color1')].asNumber();\n        cell['r'] = this._board[x][y][i18n('CONS:Color2')].asNumber();\n        cell['v'] = this._board[x][y][i18n('CONS:Color3')].asNumber();\n        column.push(cell);\n      }\n      jboard.board.push(column);\n    }\n    return jboard;\n  }\n\n  /* Load the state from a Jboard data structure */\n  load(jboard) {\n    this._width = jboard.width;\n    this._height = jboard.height;\n    this._head.x = jboard.head[0];\n    this._head.y = jboard.head[1];\n    this._board = [];\n    for (let x = 0; x < this._width; x++) {\n      let row = [];\n      for (let y = 0; y < this._height; y++) {\n        let cell = jboard.board[x][y];\n        let newCell = {};\n        newCell[i18n('CONS:Color0')] = new ValueInteger(cell['a']);\n        newCell[i18n('CONS:Color1')] = new ValueInteger(cell['n']);\n        newCell[i18n('CONS:Color2')] = new ValueInteger(cell['r']);\n        newCell[i18n('CONS:Color3')] = new ValueInteger(cell['v']);\n        row.push(newCell);\n      }\n      this._board.push(row);\n    }\n  }\n\n  /* Gobstones specific methods */\n\n  putStone(colorName) {\n    let n = this._board[this._head.x][this._head.y][colorName];\n    n = n.add(new ValueInteger(1));\n    this._board[this._head.x][this._head.y][colorName] = n;\n  }\n\n  removeStone(colorName) {\n    let n = this._board[this._head.x][this._head.y][colorName];\n    if (n.le(new ValueInteger(0))) {\n      throw Error('Cannot remove stone.');\n    }\n    n = n.sub(new ValueInteger(1));\n    this._board[this._head.x][this._head.y][colorName] = n;\n  }\n\n  numStones(colorName) {\n    return this._board[this._head.x][this._head.y][colorName];\n  }\n\n  move(dirName) {\n    if (!this.canMove(dirName)) {\n      throw Error('Cannot move.');\n    }\n    let delta = this._deltaForDirection(dirName);\n    this._head.x += delta[0];\n    this._head.y += delta[1];\n  }\n\n  goToEdge(dirName) {\n    if (dirName === i18n('CONS:Dir0')) {\n      this._head.y = this._height - 1;\n    } else if (dirName === i18n('CONS:Dir1')) {\n      this._head.x = this._width - 1;\n    } else if (dirName === i18n('CONS:Dir2')) {\n      this._head.y = 0;\n    } else if (dirName === i18n('CONS:Dir3')) {\n      this._head.x = 0;\n    } else {\n      throw Error('Invalid direction: ' + dirName);\n    }\n  }\n\n  emptyBoardContents() {\n    for (let x = 0; x < this._width; x++) {\n      for (let y = 0; y < this._height; y++) {\n        this._board[x][y] = this._emptyCell();\n      }\n    }\n  }\n\n  canMove(dirName) {\n    let delta = this._deltaForDirection(dirName);\n    let x = this._head.x + delta[0];\n    let y = this._head.y + delta[1];\n    return 0 <= x && x < this._width && 0 <= y && y < this._height;\n  }\n\n  _deltaForDirection(dirName) {\n    let delta;\n    if (dirName === i18n('CONS:Dir0')) {\n      delta = [0, 1];\n    } else if (dirName === i18n('CONS:Dir1')) {\n      delta = [1, 0];\n    } else if (dirName === i18n('CONS:Dir2')) {\n      delta = [0, -1];\n    } else if (dirName === i18n('CONS:Dir3')) {\n      delta = [-1, 0];\n    } else {\n      throw Error('Invalid direction: ' + dirName);\n    }\n    return delta;\n  }\n\n  _emptyCell() {\n    let cell = {};\n    for (let colorName of colorEnum()) {\n      cell[colorName] = new ValueInteger(0);\n    }\n    return cell;\n  }\n}\n\nclass PrimitiveOperation {\n\n  constructor(argumentTypes, argumentValidator, implementation) {\n    this._argumentTypes = argumentTypes;\n    this._argumentValidator = argumentValidator;\n    this._implementation = implementation;\n  }\n\n  get argumentTypes() {\n    return this._argumentTypes;\n  }\n\n  nargs() {\n    return this._argumentTypes.length;\n  }\n\n  call(globalState, args) {\n    return this._implementation.apply(null, [globalState].concat(args));\n  }\n\n  /* Check that the arguments are valid according to the validator.\n   * The validator should be a function receiving a start and end\n   * positions, and a list of arguments.\n   * It should throw a GbsRuntimeError if the arguments are invalid.\n   */\n  validateArguments(startPos, endPos, globalState, args) {\n    this._argumentValidator(startPos, endPos, globalState, args);\n  }\n\n}\n\n/* Casting Gobstones values to JavaScript values and vice-versa */\n\nlet typeAny = new TypeAny();\n\nlet typeInteger = new TypeInteger();\n\nlet typeString = new TypeString();\n\nfunction typeBool() {\n  return new TypeStructure(i18n('TYPE:Bool'), {});\n}\n\nlet typeListAny = new TypeList(new TypeAny());\n\nfunction valueFromBool(bool) {\n  if (bool) {\n    return new ValueStructure(i18n('TYPE:Bool'), i18n('CONS:True'), {});\n  } else {\n    return new ValueStructure(i18n('TYPE:Bool'), i18n('CONS:False'), {});\n  }\n}\n\nexport function boolFromValue(value) {\n  return value.constructorName === i18n('CONS:True');\n}\n\nfunction typeColor() {\n  return new TypeStructure(i18n('TYPE:Color'), {});\n}\n\nfunction valueFromColor(colorName) {\n  return new ValueStructure(i18n('TYPE:Color'), colorName, {});\n}\n\nfunction colorFromValue(value) {\n  return value.constructorName;\n}\n\nfunction typeDir() {\n  return new TypeStructure(i18n('TYPE:Dir'), {});\n}\n\nfunction valueFromDir(dirName) {\n  return new ValueStructure(i18n('TYPE:Dir'), dirName, {});\n}\n\nfunction dirFromValue(value) {\n  return value.constructorName;\n}\n\n/* Argument validators */\n\nfunction noValidation(startPos, endPos, globalState, args) {\n  /* No validation */\n}\n\nfunction isInteger(x) {\n  return joinTypes(x.type(), typeInteger) !== null;\n}\n\nfunction isBool(x) {\n  return joinTypes(x.type(), typeBool()) !== null;\n}\n\nfunction isColor(x) {\n  return joinTypes(x.type(), typeColor()) !== null;\n}\n\nfunction isDir(x) {\n  return joinTypes(x.type(), typeDir()) !== null;\n}\n\nexport function typesWithOpposite() {\n  return [typeInteger, typeBool(), typeDir()];\n}\n\nexport function typesWithOrder() {\n  return [\n    typeInteger, typeBool(), typeColor(), typeDir()\n  ];\n}\n\n/* Generic operations */\n\nfunction enumIndex(value) {\n  if (isBool(value)) {\n    if (boolFromValue(value)) {\n      return 1;\n    } else {\n      return 0;\n    }\n  } else if (isColor(value)) {\n    return toEnum(colorEnum(), colorFromValue(value));\n  } else if (isDir(value)) {\n    return toEnum(dirEnum(), dirFromValue(value));\n  } else {\n    throw Error('Value should be Bool, Color or Dir.');\n  }\n}\n\nfunction genericLE(a, b) {\n  if (isInteger(a)) {\n    return valueFromBool(a.le(b));\n  } else {\n    let indexA = enumIndex(a);\n    let indexB = enumIndex(b);\n    return valueFromBool(indexA <= indexB);\n  }\n}\n\nfunction genericGE(a, b) {\n  if (isInteger(a)) {\n    return valueFromBool(a.ge(b));\n  } else {\n    let indexA = enumIndex(a);\n    let indexB = enumIndex(b);\n    return valueFromBool(indexA >= indexB);\n  }\n}\n\nfunction genericLT(a, b) {\n  if (isInteger(a)) {\n    return valueFromBool(a.lt(b));\n  } else {\n    let indexA = enumIndex(a);\n    let indexB = enumIndex(b);\n    return valueFromBool(indexA < indexB);\n  }\n}\n\nfunction genericGT(a, b) {\n  if (isInteger(a)) {\n    return valueFromBool(a.gt(b));\n  } else {\n    let indexA = enumIndex(a);\n    let indexB = enumIndex(b);\n    return valueFromBool(indexA > indexB);\n  }\n}\n\nfunction genericNext(a) {\n  if (isInteger(a)) {\n    return a.add(new ValueInteger(1));\n  } else if (isBool(a)) {\n    if (boolFromValue(a)) {\n      return valueFromBool(false);\n    } else {\n      return valueFromBool(true);\n    }\n  } else if (isColor(a)) {\n    return valueFromColor(colorNext(colorFromValue(a)));\n  } else if (isDir(a)) {\n    return valueFromDir(dirNext(dirFromValue(a)));\n  } else {\n    throw Error('genericNext: value has no next.');\n  }\n}\n\nfunction genericPrev(a) {\n  if (isInteger(a)) {\n    return a.sub(new ValueInteger(1));\n  } else if (isBool(a)) {\n    if (boolFromValue(a)) {\n      return valueFromBool(false);\n    } else {\n      return valueFromBool(true);\n    }\n  } else if (isColor(a)) {\n    return valueFromColor(colorPrev(colorFromValue(a)));\n  } else if (isDir(a)) {\n    return valueFromDir(dirPrev(dirFromValue(a)));\n  } else {\n    throw Error('genericPrev: value has no prev.');\n  }\n}\n\nfunction genericOpposite(a) {\n  if (isInteger(a)) {\n    return a.negate();\n  } else if (isBool(a)) {\n    return valueFromBool(!boolFromValue(a));\n  } else if (isDir(a)) {\n    return valueFromDir(dirOpposite(dirFromValue(a)));\n  } else {\n    throw Error('genericOpposite: value has no opposite.');\n  }\n}\n/* Validate that the type of 'x' is among the given list of types */\nfunction validateTypeAmong(startPos, endPos, x, types) {\n  /* Succeed if the type of x is in the list 'types' */\n  for (let type of types) {\n    if (joinTypes(x.type(), type) !== null) {\n      return;\n    }\n  }\n  /* Report error */\n  fail(startPos, endPos,\n    'expected-value-of-some-type-but-got', [\n      types,\n      x.type()\n    ]\n  );\n}\n\n/* Validate that the types of 'x' and 'y' are compatible */\nfunction validateCompatibleTypes(startPos, endPos, x, y) {\n  if (joinTypes(x.type(), y.type()) === null) {\n    fail(startPos, endPos,\n      'expected-values-to-have-compatible-types', [\n        x.type(),\n        y.type(),\n      ]\n    );\n  }\n}\n\n/* Runtime primitives */\n\nexport class RuntimePrimitives {\n\n  constructor() {\n    /* this._primitiveTypes is a dictionary indexed by type names.\n     *\n     * this._primitiveTypes[typeName] is a dictionary indexed by\n     * the constructor names of the given type.\n     *\n     * this._primitiveTypes[typeName][constructorName]\n     * is a list of field names.\n     */\n    this._primitiveTypes = {};\n\n    /* this._primitiveProcedures and this._primitiveFunctions\n     * are dictionaries indexed by the name of the primitive operation\n     * (procedure or function). Their value is an instance of\n     * PrimitiveOperation.\n     */\n    this._primitiveProcedures = {};\n    this._primitiveFunctions = {};\n\n    /* --Primitive types-- */\n\n    /* Booleans */\n    this._primitiveTypes[i18n('TYPE:Bool')] = {};\n    for (let boolName of boolEnum()) {\n      this._primitiveTypes[i18n('TYPE:Bool')][boolName] = [];\n    }\n\n    /* Colors */\n    this._primitiveTypes[i18n('TYPE:Color')] = {};\n    for (let colorName of colorEnum()) {\n      this._primitiveTypes[i18n('TYPE:Color')][colorName] = [];\n    }\n\n    /* Directions */\n    this._primitiveTypes[i18n('TYPE:Dir')] = {};\n    for (let dirName of dirEnum()) {\n      this._primitiveTypes[i18n('TYPE:Dir')][dirName] = [];\n    }\n\n    /* Events */\n    this._primitiveTypes[i18n('TYPE:Event')] = {};\n    for (let eventName of eventEnum()) {\n      this._primitiveTypes[i18n('TYPE:Event')][eventName] = [];\n    }\n\n    /* --Primitive procedures-- */\n\n    this._primitiveProcedures[i18n('PRIM:TypeCheck')] =\n      new PrimitiveOperation(\n        [typeAny, typeAny, typeString],\n        function (startPos, endPos, globalState, args) {\n          let v1 = args[0];\n          let v2 = args[1];\n          let errorMessage = args[2];\n          if (joinTypes(v1.type(), v2.type()) === null) {\n            fail(startPos, endPos, 'typecheck-failed', [\n                errorMessage.string,\n                v1.type(),\n                v2.type(),\n            ]);\n          }\n        },\n        function (globalState, color) {\n          return null;\n        }\n      );\n\n    this._primitiveProcedures[i18n('PRIM:PutStone')] =\n      new PrimitiveOperation(\n        [typeColor()], noValidation,\n        function (globalState, color) {\n          globalState.putStone(colorFromValue(color));\n          return null;\n        }\n      );\n\n    this._primitiveProcedures[i18n('PRIM:RemoveStone')] =\n      new PrimitiveOperation(\n        [typeColor()],\n        function (startPos, endPos, globalState, args) {\n          let colorName = colorFromValue(args[0]);\n          if (globalState.numStones(colorName).le(new ValueInteger(0))) {\n            fail(startPos, endPos, 'cannot-remove-stone', [colorName]);\n          }\n        },\n        function (globalState, color) {\n          globalState.removeStone(colorFromValue(color));\n          return null;\n        }\n      );\n\n    this._primitiveProcedures[i18n('PRIM:Move')] =\n      new PrimitiveOperation(\n        [typeDir()],\n        function (startPos, endPos, globalState, args) {\n          let dirName = dirFromValue(args[0]);\n          if (!globalState.canMove(dirName)) {\n            fail(startPos, endPos, 'cannot-move-to', [dirName]);\n          }\n        },\n        function (globalState, dir) {\n          globalState.move(dirFromValue(dir));\n          return null;\n        }\n      );\n\n    this._primitiveProcedures[i18n('PRIM:GoToEdge')] =\n      new PrimitiveOperation(\n        [typeDir()], noValidation,\n        function (globalState, dir) {\n          globalState.goToEdge(dirFromValue(dir));\n          return null;\n        }\n      );\n\n    this._primitiveProcedures[i18n('PRIM:EmptyBoardContents')] =\n      new PrimitiveOperation(\n        [], noValidation,\n        function (globalState, dir) {\n          globalState.emptyBoardContents();\n          return null;\n        }\n      );\n\n    this._primitiveProcedures['_FAIL'] =\n      /* Procedure that always fails */\n      new PrimitiveOperation(\n        [typeString],\n        function (startPos, endPos, globalState, args) {\n          fail(startPos, endPos, args[0].string, []);\n        },\n        function (globalState, errMsg) {\n          /* Unreachable */\n          return null;\n        }\n      );\n\n    /* --Primitive functions-- */\n\n    this._primitiveFunctions['_makeRange'] =\n      new PrimitiveOperation(\n        [typeAny, typeAny],\n        function (startPos, endPos, globalState, args) {\n          let first = args[0];\n          let last = args[1];\n          validateCompatibleTypes(startPos, endPos, first, last);\n          validateTypeAmong(startPos, endPos, first, typesWithOrder());\n          validateTypeAmong(startPos, endPos, last, typesWithOrder());\n        },\n        function (globalState, first, last) {\n          let current = first;\n          if (boolFromValue(genericGT(current, last))) {\n            return new ValueList([]);\n          }\n          let result = [];\n          while (boolFromValue(genericLT(current, last))) {\n            result.push(current);\n            current = genericNext(current);\n          }\n          result.push(current);\n          return new ValueList(result);\n        }\n      );\n\n    this._primitiveFunctions['not'] =\n      new PrimitiveOperation(\n        [typeBool()], noValidation,\n        function (globalState, x) {\n          return valueFromBool(!boolFromValue(x));\n        }\n      );\n\n    this._primitiveFunctions['&&'] =\n      new PrimitiveOperation(\n        [typeAny, typeAny], noValidation,\n        /*\n         * This function is a stub so the linter recognizes '&&'\n         * as a defined primitive function of arity 2.\n         *\n         * The implementation of '&&' is treated specially by the\n         * compiler to account for short-circuiting.\n         */\n        function (globalState, x, y) {\n          throw Error('The function \"&&\" should never be called');\n        }\n      );\n\n    this._primitiveFunctions['||'] =\n      new PrimitiveOperation(\n        [typeAny, typeAny], noValidation,\n        /*\n         * This function is a stub so the linter recognizes '||'\n         * as a defined primitive function of arity 2.\n         *\n         * The implementation of '||' is treated specially by the\n         * compiler to account for short-circuiting.\n         */\n        function (globalState, x, y) {\n          throw Error('The function \"||\" should never be called');\n        }\n      );\n\n    this._primitiveFunctions['_makeRangeWithSecond'] =\n      new PrimitiveOperation(\n        [typeAny, typeAny, typeAny],\n        function (startPos, endPos, globalState, args) {\n          let first = args[0];\n          let last = args[1];\n          let second = args[2];\n          validateTypeAmong(startPos, endPos, first, [typeInteger]);\n          validateTypeAmong(startPos, endPos, last, [typeInteger]);\n          validateTypeAmong(startPos, endPos, second, [typeInteger]);\n        },\n        function (globalState, first, last, second) {\n          let delta = second.sub(first);\n          if (delta.lt(new ValueInteger(1))) {\n            return new ValueList([]);\n          }\n          let current = first;\n          let result = [];\n          while (current.le(last)) {\n            result.push(current);\n            current = current.add(delta);\n          }\n          return new ValueList(result);\n        }\n      );\n\n    this._primitiveFunctions['_unsafeListLength'] =\n      new PrimitiveOperation(\n        [typeAny], noValidation,\n        function (globalState, list) {\n          return new ValueInteger(list.length());\n        }\n      );\n\n    this._primitiveFunctions['_unsafeListNth'] =\n      new PrimitiveOperation(\n        [typeAny, typeAny], noValidation,\n        function (globalState, list, index) {\n          return list.elements[index.asNumber()];\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:numStones')] =\n      new PrimitiveOperation(\n        [typeColor()], noValidation,\n        function (globalState, color) {\n          return globalState.numStones(colorFromValue(color));\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:anyStones')] =\n      new PrimitiveOperation(\n        [typeColor()], noValidation,\n        function (globalState, color) {\n          let num = globalState.numStones(colorFromValue(color));\n          return valueFromBool(num.gt(new ValueInteger(0)));\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:canMove')] =\n      new PrimitiveOperation(\n        [typeDir()], noValidation,\n        function (globalState, dir) {\n          return valueFromBool(globalState.canMove(dirFromValue(dir)));\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:next')] =\n      new PrimitiveOperation(\n        [typeAny],\n        function (startPos, endPos, globalState, args) {\n          let value = args[0];\n          validateTypeAmong(startPos, endPos, value, typesWithOrder());\n        },\n        function (globalState, value) {\n          return genericNext(value);\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:prev')] =\n      new PrimitiveOperation(\n        [typeAny],\n        function (startPos, endPos, globalState, args) {\n          let value = args[0];\n          validateTypeAmong(startPos, endPos, value, typesWithOrder());\n        },\n        function (globalState, value) {\n          return genericPrev(value);\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:opposite')] =\n      new PrimitiveOperation(\n        [typeAny],\n        function (startPos, endPos, globalState, args) {\n          let value = args[0];\n          validateTypeAmong(startPos, endPos, value, typesWithOpposite());\n        },\n        function (globalState, value) {\n          return genericOpposite(value);\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:minBool')] =\n      new PrimitiveOperation(\n        [], noValidation,\n        function (globalState) {\n          return valueFromBool(false);\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:maxBool')] =\n      new PrimitiveOperation(\n        [], noValidation,\n        function (globalState) {\n          return valueFromBool(true);\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:minColor')] =\n      new PrimitiveOperation(\n        [], noValidation,\n        function (globalState) {\n          return valueFromColor(colorEnum()[0]);\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:maxColor')] =\n      new PrimitiveOperation(\n        [], noValidation,\n        function (globalState) {\n          return valueFromColor(colorEnum()[colorEnum().length - 1]);\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:minDir')] =\n      new PrimitiveOperation(\n        [], noValidation,\n        function (globalState) {\n          return valueFromDir(dirEnum()[0]);\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:maxDir')] =\n      new PrimitiveOperation(\n        [], noValidation,\n        function (globalState) {\n          return valueFromDir(dirEnum()[dirEnum().length - 1]);\n        }\n      );\n\n    /* Arithmetic operators */\n\n    this._primitiveFunctions['+'] =\n      new PrimitiveOperation(\n        [typeInteger, typeInteger], noValidation,\n        function (globalState, a, b) {\n          return a.add(b);\n        }\n      );\n\n    this._primitiveFunctions['-'] =\n      new PrimitiveOperation(\n        [typeInteger, typeInteger], noValidation,\n        function (globalState, a, b) {\n          return a.sub(b);\n        }\n      );\n\n    this._primitiveFunctions['*'] =\n      new PrimitiveOperation(\n        [typeInteger, typeInteger], noValidation,\n        function (globalState, a, b) {\n          return a.mul(b);\n        }\n      );\n\n    this._primitiveFunctions['div'] =\n      new PrimitiveOperation(\n        [typeInteger, typeInteger],\n        function (startPos, endPos, globalState, args) {\n          let b = args[1];\n          if (b.eq(new ValueInteger(0))) {\n            fail(startPos, endPos, 'cannot-divide-by-zero', []);\n          }\n        },\n        function (globalState, a, b) {\n          return a.div(b);\n        }\n      );\n\n    this._primitiveFunctions['mod'] =\n      new PrimitiveOperation(\n        [typeInteger, typeInteger],\n        function (startPos, endPos, globalState, args) {\n          let b = args[1];\n          if (b.eq(new ValueInteger(0))) {\n            fail(startPos, endPos, 'cannot-divide-by-zero', []);\n          }\n        },\n        function (globalState, a, b) {\n          return a.mod(b);\n        }\n      );\n\n    this._primitiveFunctions['^'] =\n      new PrimitiveOperation(\n        [typeInteger, typeInteger],\n        function (startPos, endPos, globalState, args) {\n          let b = args[1];\n          if (b.lt(new ValueInteger(0))) {\n            fail(startPos, endPos, 'negative-exponent', []);\n          }\n        },\n        function (globalState, a, b) {\n          return a.pow(b);\n        }\n      );\n\n    this._primitiveFunctions['-(unary)'] =\n      new PrimitiveOperation(\n        [typeAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          validateTypeAmong(startPos, endPos, a, typesWithOpposite());\n        },\n        function (globalState, a) {\n          return genericOpposite(a);\n        }\n      );\n\n    /* Relational operators */\n\n    this._primitiveFunctions['=='] =\n      new PrimitiveOperation(\n        [typeAny, typeAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          let b = args[1];\n          validateCompatibleTypes(startPos, endPos, a, b);\n        },\n        function (globalState, a, b) {\n          return valueFromBool(a.equal(b));\n        }\n      );\n\n    this._primitiveFunctions['/='] =\n      new PrimitiveOperation(\n        [typeAny, typeAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          let b = args[1];\n          validateCompatibleTypes(startPos, endPos, a, b);\n        },\n        function (globalState, a, b) {\n          return valueFromBool(!a.equal(b));\n        }\n      );\n\n    this._primitiveFunctions['<='] =\n      new PrimitiveOperation(\n        [typeAny, typeAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          let b = args[1];\n          validateCompatibleTypes(startPos, endPos, a, b);\n          validateTypeAmong(startPos, endPos, a, typesWithOrder());\n          validateTypeAmong(startPos, endPos, b, typesWithOrder());\n        },\n        function (globalState, a, b) {\n          return genericLE(a, b);\n        }\n      );\n\n    this._primitiveFunctions['>='] =\n      new PrimitiveOperation(\n        [typeAny, typeAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          let b = args[1];\n          validateCompatibleTypes(startPos, endPos, a, b);\n          validateTypeAmong(startPos, endPos, a, typesWithOrder());\n          validateTypeAmong(startPos, endPos, b, typesWithOrder());\n        },\n        function (globalState, a, b) {\n          return genericGE(a, b);\n        }\n      );\n\n    this._primitiveFunctions['<'] =\n      new PrimitiveOperation(\n        [typeAny, typeAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          let b = args[1];\n          validateCompatibleTypes(startPos, endPos, a, b);\n          validateTypeAmong(startPos, endPos, a, typesWithOrder());\n          validateTypeAmong(startPos, endPos, b, typesWithOrder());\n        },\n        function (globalState, a, b) {\n          return genericLT(a, b);\n        }\n      );\n\n    this._primitiveFunctions['>'] =\n      new PrimitiveOperation(\n        [typeAny, typeAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          let b = args[1];\n          validateCompatibleTypes(startPos, endPos, a, b);\n          validateTypeAmong(startPos, endPos, a, typesWithOrder());\n          validateTypeAmong(startPos, endPos, b, typesWithOrder());\n        },\n        function (globalState, a, b) {\n          return genericGT(a, b);\n        }\n      );\n\n    /* User-triggered failure */\n\n    this._primitiveProcedures[i18n('PRIM:BOOM')] =\n      new PrimitiveOperation(\n        [typeString],\n        function (startPos, endPos, globalState, args) {\n          fail(startPos, endPos, 'boom-called', [args[0].string]);\n        },\n        function (globalState, msg) {\n          throw Error('Should not be reachable.');\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:boom')] =\n      this._primitiveProcedures[i18n('PRIM:BOOM')];\n\n    /* List opreators */\n    this._primitiveFunctions['++'] =\n      new PrimitiveOperation(\n        [typeListAny, typeListAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          let b = args[1];\n          validateCompatibleTypes(startPos, endPos, a, b);\n        },\n        function (globalState, a, b) {\n          return a.append(b);\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:head')] =\n      new PrimitiveOperation(\n        [typeListAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          if (a.length() === 0) {\n            fail(startPos, endPos, 'list-cannot-be-empty', []);\n          }\n        },\n        function (globalState, a) {\n          return a.head();\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:tail')] =\n      new PrimitiveOperation(\n        [typeListAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          if (a.length() === 0) {\n            fail(startPos, endPos, 'list-cannot-be-empty', []);\n          }\n        },\n        function (globalState, a) {\n          return a.tail();\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:init')] =\n      new PrimitiveOperation(\n        [typeListAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          if (a.length() === 0) {\n            fail(startPos, endPos, 'list-cannot-be-empty', []);\n          }\n        },\n        function (globalState, a) {\n          return a.init();\n        }\n      );\n\n    this._primitiveFunctions[i18n('PRIM:last')] =\n      new PrimitiveOperation(\n        [typeListAny],\n        function (startPos, endPos, globalState, args) {\n          let a = args[0];\n          if (a.length() === 0) {\n            fail(startPos, endPos, 'list-cannot-be-empty', []);\n          }\n        },\n        function (globalState, a) {\n          return a.last();\n        }\n      );\n\n  }\n\n  /* Types */\n\n  types() {\n    let typeNames = [];\n    for (let typeName in this._primitiveTypes) {\n      typeNames.push(typeName);\n    }\n    return typeNames;\n  }\n\n  typeConstructors(typeName) {\n    if (!(typeName in this._primitiveTypes)) {\n      throw Error('Not a primitive type: ' + typeName);\n    }\n    let constructorNames = [];\n    for (let constructorName in this._primitiveTypes[typeName]) {\n      constructorNames.push(constructorName);\n    }\n    return constructorNames;\n  }\n\n  constructorFields(typeName, constructorName) {\n    if (!(typeName in this._primitiveTypes)) {\n      throw Error('Not a primitive type: ' + typeName);\n    }\n    if (!(constructorName in this._primitiveTypes[typeName])) {\n      throw Error('Not a primitive constructor: ' + constructorName);\n    }\n    return this._primitiveTypes[typeName][constructorName];\n  }\n\n  /* Operations */\n\n  isOperation(primitiveName) {\n    return primitiveName in this._primitiveProcedures\n        || primitiveName in this._primitiveFunctions;\n  }\n\n  getOperation(primitiveName) {\n    if (primitiveName in this._primitiveProcedures) {\n      return this._primitiveProcedures[primitiveName];\n    } else if (primitiveName in this._primitiveFunctions) {\n      return this._primitiveFunctions[primitiveName];\n    } else {\n      throw Error(primitiveName + ' is not a primitive.');\n    }\n  }\n\n  /* Procedures */\n\n  procedures() {\n    let procedureNames = [];\n    for (let procedureName in this._primitiveProcedures) {\n      procedureNames.push(procedureName);\n    }\n    return procedureNames;\n  }\n\n  isProcedure(primitiveName) {\n    return primitiveName in this._primitiveProcedures;\n  }\n\n  /* Functions */\n\n  functions() {\n    let functionNames = [];\n    for (let functionName in this._primitiveFunctions) {\n      functionNames.push(functionName);\n    }\n    return functionNames;\n  }\n\n  isFunction(primitiveName) {\n    return primitiveName in this._primitiveFunctions;\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime.js","import { i18n } from './i18n';\nimport { Integer } from './bigint';\n\n/* Each value has a type.\n *\n * A type is a tree, represented with instances of Type (or its subclasses).\n * We write:\n *   r(c1, ..., cN)\n * for a tree whose root is r and whose children are c1, ..., cN.\n *\n * The type of a value may be one of the following:\n *   new TypeAny()                      (unknown)\n *   new TypeInteger()\n *   new TypeString()\n *   new TypeTuple([t1, ..., tN])\n *     where ti is the type of the i-th component.\n *   new TypeList(t)\n *     where t is the type of the elements.\n *   new TypeStructure(typeName, cases)\n *     where typeName is the name of the type (e.g. 'Bool').\n *     Moreover, cases is an object of the following \"type\":\n *       Map String (Map String Type)\n *     more precisely,\n *     - cases is dictionary indexed by constructor names,\n *     - if c is a constructor name, cases[c] is a dictionary\n *       indexed by field name,\n *     - if f is a field name, cases[c][f] is the type of the\n *       field f for the constructor c.\n *\n *     For example, consider the following type definition:\n *       type A is variant {\n *         case B {\n *           field x\n *           field y\n *         }\n *         case C {\n *           field z\n *         }\n *       }\n *\n *    Then the following expression in Gobstones:\n *      [B(x <- 1, y <- \"foo\")]\n *    is a list whose type is represented as:\n *      new TypeList(\n *        new TypeStructure('A', {\n *          'B': {'x': new TypeInteger(), 'y': new TypeString()}\n *        })\n *      )\n *\n *    The following expression in Gobstones:\n *      [B(x <- 1, y <- \"foo\"), C(z <- \"bar\")]\n *    is a list whose type is represented as:\n *      new TypeList(\n *        new TypeStructure('A', {\n *          'B': {'x': new TypeInteger(), 'y': new TypeString()},\n *          'C': {'z': new TypeString()},\n *        })\n *      )\n */\nconst Ty_Any = Symbol.for('Ty_Any');\nconst Ty_Integer = Symbol.for('Ty_Integer');\nconst Ty_String = Symbol.for('Ty_String');\nconst Ty_Tuple = Symbol.for('Ty_Tuple');\nconst Ty_List = Symbol.for('Ty_List');\nconst Ty_Structure = Symbol.for('Ty_Structure');\n\nclass Type {\n  constructor(tag) {\n    this._tag = tag;\n  }\n\n  get tag() {\n    return this._tag;\n  }\n\n  isAny() {\n    return false;\n  }\n\n  isInteger() {\n    return false;\n  }\n\n  isString() {\n    return false;\n  }\n\n  isTuple() {\n    return false;\n  }\n\n  isList() {\n    return false;\n  }\n\n  isStructure() {\n    return false;\n  }\n\n  isBoolean() {\n    return false;\n  }\n\n  isColor() {\n    return false;\n  }\n\n  isDirection() {\n    return false;\n  }\n\n}\n\nexport class TypeAny extends Type {\n  constructor() {\n    super(Ty_Any);\n  }\n\n  toString() {\n    return '?';\n  }\n\n  isAny() {\n    return true;\n  }\n\n}\n\nexport class TypeInteger extends Type {\n  constructor() {\n    super(Ty_Integer);\n  }\n\n  toString() {\n    return i18n('TYPE:Integer');\n  }\n\n  isInteger() {\n    return true;\n  }\n\n}\n\nexport class TypeString extends Type {\n  constructor() {\n    super(Ty_String);\n  }\n\n  toString() {\n    return i18n('TYPE:String');\n  }\n\n  isString() {\n    return true;\n  }\n\n}\n\nexport class TypeTuple extends Type {\n  constructor(componentTypes) {\n    super(Ty_Tuple);\n    this._componentTypes = componentTypes;\n  }\n\n  get componentTypes() {\n    return this._componentTypes;\n  }\n\n  toString() {\n    let strings = [];\n    for (let t of this._componentTypes) {\n      strings.push(t.toString());\n    }\n    return i18n('TYPE:Tuple') + '(' + strings.join(', ') + ')';\n  }\n\n  isTuple() {\n    return true;\n  }\n\n}\n\nexport class TypeList extends Type {\n  constructor(contentType) {\n    super(Ty_List);\n    this._contentType = contentType;\n  }\n\n  get contentType() {\n    return this._contentType;\n  }\n\n  toString() {\n    return i18n('TYPE:List') + '(' + this._contentType.toString() + ')';\n  }\n\n  isList() {\n    return true;\n  }\n\n}\n\nexport class TypeStructure extends Type {\n  constructor(typeName, cases) {\n    super(Ty_Structure);\n    this._typeName = typeName;\n    this._cases = cases;\n  }\n\n  get typeName() {\n    return this._typeName;\n  }\n\n  get cases() {\n    return this._cases;\n  }\n\n  toString() {\n    let caseStrings = [];\n    for (let constructorName of sortedKeys(this._cases)) {\n      let fieldTypes = this._cases[constructorName];\n      let fieldStrings = [];\n      for (let fieldName of sortedKeys(fieldTypes)) {\n        fieldStrings.push(\n          fieldName + ' <- ' + fieldTypes[fieldName].toString()\n        );\n      }\n      let qualifiedConstructor = this._typeName + ':' + constructorName;\n      if (fieldStrings.length === 0) {\n        caseStrings.push(qualifiedConstructor);\n      } else {\n        caseStrings.push(\n          qualifiedConstructor + '(' + fieldStrings.join(', ') + ')'\n        );\n      }\n    }\n    if (caseStrings.length === 0) {\n      return this._typeName;\n    } else {\n      return caseStrings.join(' + ');\n    }\n  }\n\n  isStructure() {\n    return true;\n  }\n\n  isBoolean() {\n    return this._typeName === i18n('TYPE:Bool');\n  }\n\n  isColor() {\n    return this._typeName === i18n('TYPE:Color');\n  }\n\n  isDirection() {\n    return this._typeName === i18n('TYPE:Dir');\n  }\n\n}\n\n/* Attempts to calculate the \"join\" of two types.\n *\n * To join two types:\n * - any occurrence of TypeAny() may be replaced by an arbitrary type,\n * - structures of the same type built with different constructors\n *   are joinable,\n * - structures of the same type built with the same constructors\n *   are joinable if their matching fields are joinable.\n *\n * If the types are joinable, return their join.\n * If the types are not joinable, return null.\n */\n\n/* Forward definition of mutually recursive functions (for ESLint) */\nlet joinTupleTypes;\nlet joinListTypes;\nlet joinStructureTypes;\nlet joinFields;\n\nexport function joinTypes(type1, type2) {\n  if (type1 === null || type2 === null) {\n    return null;\n  } else if (type1.tag === Ty_Any) {\n    return type2;\n  } else if (type2.tag === Ty_Any) {\n    return type1;\n  } else if (type1.tag === Ty_Integer && type2.tag === Ty_Integer) {\n    return type1;\n  } else if (type1.tag === Ty_String && type2.tag === Ty_String) {\n    return type1;\n  } else if (type1.tag === Ty_Tuple && type2.tag === Ty_Tuple) {\n    return joinTupleTypes(type1, type2);\n  } else if (type1.tag === Ty_List && type2.tag === Ty_List) {\n    return joinListTypes(type1, type2);\n  } else if (type1.tag === Ty_Structure && type2.tag === Ty_Structure) {\n    return joinStructureTypes(type1, type2);\n  } else {\n    /* Otherwise the types are not joinable */\n    return null;\n  }\n}\n\njoinTupleTypes = function (type1, type2) {\n  if (type1.componentTypes.length !== type2.componentTypes.length) {\n    /* Tuples are of different length */\n    return null;\n  }\n  let joinedComponents = [];\n  for (let i = 0; i < type1.componentTypes.length; i++) {\n    let t1 = type1.componentTypes[i];\n    let t2 = type2.componentTypes[i];\n    let tj = joinTypes(t1, t2);\n    if (tj === null) {\n      /* Cannot join the i-th component */\n      return null;\n    }\n    joinedComponents.push(tj);\n  }\n  return new TypeTuple(joinedComponents);\n};\n\njoinListTypes = function (type1, type2) {\n  let joinedContent = joinTypes(type1.contentType, type2.contentType);\n  if (joinedContent === null) {\n    /* Cannot join the contents of the lists */\n    return null;\n  }\n  return new TypeList(joinedContent);\n};\n\n/*\n * The join of two structures is quite like a least common multiple.\n * We must:\n * - Check that they are structures of the same type.\n * - Include all the non-common constructors verbatim\n *   (with \"non-common\" we mean those that are in type1\n *   but not in type2 or vice-versa).\n * - For all common constructors, we must recursively join\n *   the types of their respective fields.\n */\njoinStructureTypes = function (type1, type2) {\n  if (type1.typeName !== type2.typeName) {\n    return null;\n  }\n\n  let joinedCases = {};\n\n  /* Include all the non-common constructors */\n  function joinCommon(typeA, typeB) {\n    for (let constructorName in typeA.cases) {\n      if (!(constructorName in typeB.cases)) {\n        joinedCases[constructorName] = typeA.cases[constructorName];\n      }\n    }\n  }\n  joinCommon(type1, type2);\n  joinCommon(type2, type1);\n\n  /* Include all the common constructors */\n  for (let constructorName in type1.cases) {\n    if (constructorName in type2.cases) {\n      let joinedFields = joinFields(\n                           type1.cases[constructorName],\n                           type2.cases[constructorName]\n                         );\n      if (joinedFields === null) {\n        return null;\n      }\n      joinedCases[constructorName] = joinedFields;\n    }\n  }\n\n  return new TypeStructure(type1.typeName, joinedCases);\n};\n\njoinFields = function (fields1, fields2) {\n  /* Ensure that they have the same set of fields */\n  function checkIncluded(fieldsA, fieldsB) {\n    for (let fieldName in fieldsA) {\n      if (!(fieldName in fieldsB)) {\n        throw Error(\n          'Join fields: structures built using the same constructor '\n        + 'should have the same set of fields.'\n        );\n      }\n    }\n  }\n  checkIncluded(fields1, fields2);\n  checkIncluded(fields2, fields1);\n\n  /* Recursively join the types of the common fields */\n  let joinedFields = {};\n  for (let fieldName in fields1) {\n    let type1 = fields1[fieldName];\n    let type2 = fields2[fieldName];\n    let joinedTypes = joinTypes(type1, type2);\n    if (joinedTypes === null) {\n      return null;\n    }\n    joinedFields[fieldName] = joinedTypes;\n  }\n  return joinedFields;\n};\n\n/* Helper function */\n\nfunction sortedKeys(dictionary) {\n  let keys = [];\n  for (let key in dictionary) {\n    keys.push(key);\n  }\n  return keys.sort();\n}\n\n/* Value tags */\nexport const V_Integer = Symbol.for('V_Integer');\nexport const V_String = Symbol.for('V_String');\nexport const V_Tuple = Symbol.for('V_Tuple');\nexport const V_List = Symbol.for('V_List');\nexport const V_Structure = Symbol.for('V_Structure');\n\nexport class Value {\n  constructor(tag) {\n    this._tag = tag;\n  }\n\n  get tag() {\n    return this._tag;\n  }\n\n  type() {\n    return new Type('?', []);\n  }\n\n  isInteger() {\n    return this.type().isInteger();\n  }\n\n  isString() {\n    return this.type().isString();\n  }\n\n  isTuple() {\n    return this.type().isTuple();\n  }\n\n  isList() {\n    return this.type().isList();\n  }\n\n  isStructure() {\n    return this.type().isStructure();\n  }\n\n  isBoolean() {\n    return this.type().isBoolean();\n  }\n\n}\n\nexport class ValueInteger extends Value {\n  constructor(number) {\n    super(V_Integer);\n    if (typeof number === 'number') {\n      this._number = number.toString();\n    } else if (typeof number === 'string') {\n      this._number = number;\n    } else {\n      throw Error(\n        'Integer value must be constructed with an integer or a string'\n      );\n    }\n  }\n\n  toString() {\n    return this._number;\n  }\n\n  get number() {\n    return this._number;\n  }\n\n  type() {\n    return new TypeInteger();\n  }\n\n  equal(other) {\n    return other.tag === V_Integer && this.number === other.number;\n  }\n\n  add(other) {\n    let a = Integer(this._number);\n    let b = Integer(other._number);\n    return new ValueInteger(a.add(b).toString());\n  }\n\n  sub(other) {\n    let a = Integer(this._number);\n    let b = Integer(other._number);\n    return new ValueInteger(a.subtract(b).toString());\n  }\n\n  mul(other) {\n    let a = Integer(this._number);\n    let b = Integer(other._number);\n    return new ValueInteger(a.multiply(b).toString());\n  }\n\n  /* Gobstones calculates quotients using\n   * modulo (i.e.truncating towards minus infinity)\n   * rather than\n   * remainder (i.e.truncating towards 0).\n   *\n   * We need to adjust the result to match the standard Gobstones\n   * semantics, namely:\n   *\n   * if a and b have the same sign, then\n   *   a div b  =  abs(a) / abs(b)\n   *\n   * if a and b have different signs, then\n   *   a div b  =  -((abs(a) + abs(b) - 1) / abs(b))\n   *\n   * Here \"div\" denotes the official Gobstones division operator,\n   * while \"/\" denotes the JavaScript/bigint implementation.\n   */\n  div(other) {\n    let z = new ValueInteger(0);\n    if (this.gt(z) === other.gt(z)) {\n      /* Same sign */\n      let a = Integer(this.abs()._number);\n      let b = Integer(other.abs()._number);\n      return new ValueInteger(a.divide(b).toString());\n    } else {\n      /* Different sign */\n      let inc = other.abs().sub(new ValueInteger(1));\n      let a = Integer(this.abs().add(inc)._number);\n      let b = Integer(other.abs()._number);\n      return new ValueInteger(a.divide(b).negate().toString());\n    }\n  }\n\n  /* Calculate the modulus from the equation a = qb + r,\n   * i.e.  r = a - qb */\n  mod(other) {\n    let q = this.div(other);\n    return this.sub(q.mul(other));\n  }\n\n  /* Assumes that 'other' is non-negative */\n  pow(other) {\n    let a = Integer(this._number);\n    let b = Integer(other._number);\n    return new ValueInteger(a.pow(b).toString());\n  }\n\n  eq(other) {\n    return this.equal(other);\n  }\n\n  ne(other) {\n    return !this.equal(other);\n  }\n\n  le(other) {\n    let a = Integer(this._number);\n    let b = Integer(other._number);\n    return a.leq(b);\n  }\n\n  lt(other) {\n    let a = Integer(this._number);\n    let b = Integer(other._number);\n    return a.lt(b);\n  }\n\n  ge(other) {\n    let a = Integer(this._number);\n    let b = Integer(other._number);\n    return a.geq(b);\n  }\n\n  gt(other) {\n    let a = Integer(this._number);\n    let b = Integer(other._number);\n    return a.gt(b);\n  }\n\n  negate() {\n    let a = Integer(this._number);\n    return new ValueInteger(a.negate().toString());\n  }\n\n  abs() {\n    if (this.gt(new ValueInteger(0))) {\n      return this;\n    } else {\n      return this.negate();\n    }\n  }\n\n  asNumber() {\n    return parseInt(this._number, 10);\n  }\n}\n\nexport class ValueString extends Value {\n  constructor(string) {\n    super(V_String);\n    this._string = string;\n  }\n\n  toString() {\n    let res = ['\"'];\n    for (let i = 0; i < this._string.length; i++) {\n      let chr = this._string[i];\n      switch (chr) {\n        case '\"':\n          res.push('\\\\');\n          res.push('\"');\n          break;\n        case '\\\\':\n          res.push('\\\\');\n          res.push('\\\\');\n          break;\n        case '\\u0007':\n          res.push('\\\\');\n          res.push('a');\n          break;\n        case '\\b':\n          res.push('\\\\');\n          res.push('b');\n          break;\n        case '\\f':\n          res.push('\\\\');\n          res.push('f');\n          break;\n        case '\\n':\n          res.push('\\\\');\n          res.push('n');\n          break;\n        case '\\r':\n          res.push('\\\\');\n          res.push('r');\n          break;\n        case '\\t':\n          res.push('\\\\');\n          res.push('t');\n          break;\n        case '\\v':\n          res.push('\\\\');\n          res.push('v');\n          break;\n        default:\n          res.push(chr);\n          break;\n      }\n    }\n    res.push('\"');\n    return res.join('');\n  }\n\n  get string() {\n    return this._string;\n  }\n\n  equal(other) {\n    return other.tag === V_String && this.string === other.string;\n  }\n\n  type() {\n    return new TypeString();\n  }\n}\n\nexport class ValueTuple extends Value {\n  constructor(components) {\n    super(V_Tuple);\n    this._components = components;\n    this._type = this._inferType();\n  }\n\n  toString() {\n    let res = [];\n    for (let component of this._components) {\n      res.push(component.toString());\n    }\n    return '(' + res.join(', ') + ')';\n  }\n\n  get components() {\n    return this._components;\n  }\n\n  size() {\n    return this._components.length;\n  }\n\n  equal(other) {\n    if (other.tag !== V_Tuple) {\n      return false;\n    }\n    if (this.components.length !== other.components.length) {\n      return false;\n    }\n    for (let i = 0; i < this.components.length; i++) {\n      if (!this.components[i].equal(other.components[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  type() {\n    return this._type;\n  }\n\n  _inferType() {\n    let componentTypes = [];\n    for (let component of this._components) {\n      componentTypes.push(component.type());\n    }\n    return new TypeTuple(componentTypes);\n  }\n}\n\nexport class ValueList extends Value {\n  constructor(elements) {\n    super(V_List);\n    this._elements = elements;\n    this._type = this._inferType();\n  }\n\n  toString() {\n    let res = [];\n    for (let element of this._elements) {\n      res.push(element.toString());\n    }\n    return '[' + res.join(', ') + ']';\n  }\n\n  get elements() {\n    return this._elements;\n  }\n\n  equal(other) {\n    if (other.tag !== V_List) {\n      return false;\n    }\n    if (this.elements.length !== other.elements.length) {\n      return false;\n    }\n    for (let i = 0; i < this.elements.length; i++) {\n      if (!this.elements[i].equal(other.elements[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  type() {\n    return this._type;\n  }\n\n  length() {\n    return this._elements.length;\n  }\n\n  _inferType() {\n    let contentType = new TypeAny();\n    for (let element of this._elements) {\n      contentType = joinTypes(contentType, element.type());\n    }\n    return new TypeList(contentType);\n  }\n\n  append(other) {\n    let allElements = [];\n    for (let elem of this.elements) {\n      allElements.push(elem);\n    }\n    for (let elem of other.elements) {\n      allElements.push(elem);\n    }\n    return new ValueList(allElements);\n  }\n\n  head() {\n    return this.elements[0];\n  }\n\n  tail() {\n    let elements = [];\n    for (let i = 1; i < this.elements.length; i++) {\n      elements.push(this.elements[i]);\n    }\n    return new ValueList(elements);\n  }\n\n  init() {\n    let elements = [];\n    for (let i = 0; i < this.elements.length - 1; i++) {\n      elements.push(this.elements[i]);\n    }\n    return new ValueList(elements);\n  }\n\n  last() {\n    return this.elements[this.elements.length - 1];\n  }\n\n}\n\n/* An instance of ValueStructure represents a 'structure' i.e.  a value\n * inhabiting an 'inductive' datatype.\n *\n * This includes built-in enumerations (e.g. booleans), the \"event\" type\n * received by an interactive program, and user-defined records and variants.\n *\n * The second parameter \"fields\" should be a dictionary mapping field names to\n * values\n */\nexport class ValueStructure extends Value {\n\n  constructor(typeName, constructorName, fields) {\n    super(V_Structure);\n    this._typeName = typeName;\n    this._constructorName = constructorName;\n    this._fields = fields;\n  }\n\n  toString() {\n    let res = [];\n    let fieldNames = this.fieldNames();\n    if (fieldNames.length === 0) {\n      return this._constructorName;\n    }\n    for (let fieldName of fieldNames) {\n      res.push(fieldName + ' <- ' + this.fields[fieldName].toString());\n    }\n    return this._constructorName + '(' + res.join(', ') + ')';\n  }\n\n  get typeName() {\n    return this._typeName;\n  }\n\n  get constructorName() {\n    return this._constructorName;\n  }\n\n  get fields() {\n    return this._fields;\n  }\n\n  fieldNames() {\n    return sortedKeys(this._fields);\n  }\n\n  _clone() {\n    let newFields = {};\n    for (let fieldName in this._fields) {\n      newFields[fieldName] = this._fields[fieldName];\n    }\n    return new ValueStructure(\n      this._typeName, this._constructorName, newFields\n    );\n  }\n\n  updateFields(fields) {\n    let newStructure = this._clone();\n    for (let fieldName in fields) {\n      newStructure.fields[fieldName] = fields[fieldName];\n    }\n    return newStructure;\n  }\n\n  equal(other) {\n    if (other.tag !== V_Structure) {\n      return false;\n    }\n    if (this.constructorName !== other.constructorName) {\n      return false;\n    }\n    let fieldNames = this.fieldNames();\n    for (let fieldName of fieldNames) {\n      if (!this.fields[fieldName].equal(other.fields[fieldName])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  type() {\n    let fieldTypes = {};\n    for (let fieldName in this._fields) {\n      fieldTypes[fieldName] = this._fields[fieldName].type();\n    }\n    let cases = {};\n    cases[this._constructorName] = fieldTypes;\n    return new TypeStructure(this._typeName, cases);\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/value.js","\n/* A SourceReader represents the current position in a source file.\n * It keeps track of line and column numbers.\n * Methods are non-destructive. For example:\n *\n *     let r = new SourceReader('foo.gbs', 'if\\n(True)');\n *\n *     r.peek();                       // ~~> 'i'\n *     r = r.consumeCharacter();       // Note: returns a new file reader.\n *\n *     r.peek();                       // ~~> 'f'\n *     r = r.consumeCharacter();\n *\n *     r.peek();                       // ~~> '\\n'\n *     r = r.consumeCharacter('\\n');\n *\n *     r.line();                       // ~~> 2\n */\nexport class SourceReader {\n\n  constructor(filename, string) {\n    this._filename = filename;   // Filename\n    this._string = string;       // Source of the current file\n    this._index = 0;             // Index in the current file\n    this._line = 1;              // Line in the current file\n    this._column = 1;            // Column in the current file\n    this._regions = [];          // Lexical (static) stack of regions\n  }\n\n  _clone() {\n    let r = new SourceReader(this._filename, this._string);\n    r._index = this._index;\n    r._line = this._line;\n    r._column = this._column;\n    r._regions = this._regions;\n    return r;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get line() {\n    return this._line;\n  }\n\n  get column() {\n    return this._column;\n  }\n\n  get region() {\n    if (this._regions.length > 0) {\n      return this._regions[0];\n    } else {\n      return '';\n    }\n  }\n\n  /* Consume one character */\n  consumeCharacter() {\n    let r = this._clone();\n    if (r.peek() === '\\n') {\n      r._line++;\n      r._column = 1;\n    } else {\n      r._column++;\n    }\n    r._index++;\n    return r;\n  }\n\n  /* Consume characters from the input, one per each character in the string\n   * (the contents of the string are ignored). */\n  consumeString(string) {\n    let r = this;\n    for (let _ of string) {\n      r = r.consumeCharacter();\n    }\n    return r;\n  }\n\n  /* Returns the SourceReader after consuming an 'invisible' character.\n   * Invisible characters affect the index but not the line or column.\n   */\n  consumeInvisibleCharacter() {\n    let r = this._clone();\n    r._index++;\n    return r;\n  }\n\n  /* Consume 'invisible' characters from the input, one per each character\n   * in the string */\n  consumeInvisibleString(string) {\n    let r = this;\n    for (let _ of string) {\n      r = r.consumeInvisibleCharacter();\n    }\n    return r;\n  }\n\n  /* Return true if the substring occurs at the current point. */\n  startsWith(sub) {\n    let i = this._index;\n    let j = this._index + sub.length;\n    return j <= this._string.length && this._string.substring(i, j) === sub;\n  }\n\n  /* Return true if we have reached the end of the current file */\n  eof() {\n    return this._index >= this._string.length;\n  }\n\n  /* Return the current character, assuming we have not reached EOF */\n  peek() {\n    return this._string[this._index];\n  }\n\n  /* Push a region to the stack of regions (non-destructively) */\n  beginRegion(region) {\n    let r = this._clone();\n    r._regions = [region].concat(r._regions);\n    return r;\n  }\n\n  /* Pop a region from the stack of regions (non-destructively) */\n  endRegion() {\n    let r = this._clone();\n    if (r._regions.length > 0) {\n      r._regions = r._regions.slice(1);\n    }\n    return r;\n  }\n\n}\n\n/* Return a source reader that represents an unknown position */\nexport const UnknownPosition = new SourceReader('(?)', '');\n\n/* An instance of MultifileReader represents a scanner for reading\n * source code from a list of files.\n */\nexport class MultifileReader {\n\n  /* The 'input' parameter should be either:\n   * (1) a string. e.g.  'program {}', or\n   * (2) a map from filenames to strings, e.g.\n   *     {\n   *       'foo.gbs': 'program { P() }',\n   *       'bar.gbs': 'procedure P() {}',\n   *     }\n   */\n  constructor(input) {\n    if (typeof input === 'string') {\n      input = {'(?)': input};\n    }\n    this._filenames = Object.keys(input);\n    this._filenames.sort();\n    this._input = input;\n    this._index = 0;\n  }\n\n  /* Return true if there are more files */\n  moreFiles() {\n    return this._index + 1 < this._filenames.length;\n  }\n\n  /* Advance to the next file */\n  nextFile() {\n    this._index++;\n  }\n\n  /* Return a SourceReader for the current files */\n  readCurrentFile() {\n    if (this._index < this._filenames.length) {\n      let filename = this._filenames[this._index];\n      return new SourceReader(filename, this._input[filename]);\n    } else {\n      return new SourceReader('(?)', '');\n    }\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/reader.js","\n/* Token tags are constant symbols */\nexport const T_EOF = Symbol.for('T_EOF');         // End of file\nexport const T_NUM = Symbol.for('T_NUM');         // Number\nexport const T_STRING = Symbol.for('T_STRING');   // String constant\nexport const T_UPPERID = Symbol.for('T_UPPERID'); // Uppercase identifier\nexport const T_LOWERID = Symbol.for('T_LOWERID'); // Lowercase identifier\n\n/* Keywords */\nexport const T_PROGRAM = Symbol.for('T_PROGRAM');\nexport const T_INTERACTIVE = Symbol.for('T_INTERACTIVE');\nexport const T_PROCEDURE = Symbol.for('T_PROCEDURE');\nexport const T_FUNCTION = Symbol.for('T_FUNCTION');\nexport const T_RETURN = Symbol.for('T_RETURN');\nexport const T_IF = Symbol.for('T_IF');\nexport const T_THEN = Symbol.for('T_THEN');\nexport const T_ELSEIF = Symbol.for('T_ELSEIF');\nexport const T_ELSE = Symbol.for('T_ELSE');\nexport const T_CHOOSE = Symbol.for('T_CHOOSE');\nexport const T_WHEN = Symbol.for('T_WHEN');\nexport const T_OTHERWISE = Symbol.for('T_OTHERWISE');\nexport const T_REPEAT = Symbol.for('T_REPEAT');\nexport const T_FOREACH = Symbol.for('T_FOREACH');\nexport const T_IN = Symbol.for('T_IN');\nexport const T_WHILE = Symbol.for('T_WHILE');\nexport const T_SWITCH = Symbol.for('T_SWITCH');\nexport const T_TO = Symbol.for('T_TO');\nexport const T_LET = Symbol.for('T_LET');\nexport const T_NOT = Symbol.for('T_NOT');\nexport const T_DIV = Symbol.for('T_DIV');\nexport const T_MOD = Symbol.for('T_MOD');\nexport const T_TYPE = Symbol.for('T_TYPE');\nexport const T_IS = Symbol.for('T_IS');\nexport const T_RECORD = Symbol.for('T_RECORD');\nexport const T_VARIANT = Symbol.for('T_VARIANT');\nexport const T_CASE = Symbol.for('T_CASE');\nexport const T_FIELD = Symbol.for('T_FIELD');\nexport const T_UNDERSCORE = Symbol.for('T_UNDERSCORE');\nexport const T_TIMEOUT = Symbol.for('T_TIMEOUT');\n\n/* Symbols */\nexport const T_LPAREN = Symbol.for('T_LPAREN');\nexport const T_RPAREN = Symbol.for('T_RPAREN');\nexport const T_LBRACE = Symbol.for('T_LBRACE');\nexport const T_RBRACE = Symbol.for('T_RBRACE');\nexport const T_LBRACK = Symbol.for('T_LBRACK');\nexport const T_RBRACK = Symbol.for('T_RBRACK');\nexport const T_COMMA = Symbol.for('T_COMMA');\nexport const T_SEMICOLON = Symbol.for('T_SEMICOLON');\nexport const T_ELLIPSIS = Symbol.for('T_ELLIPSIS');\nexport const T_RANGE = Symbol.for('T_RANGE');\nexport const T_GETS = Symbol.for('T_GETS');\nexport const T_PIPE = Symbol.for('T_PIPE');\nexport const T_ARROW = Symbol.for('T_ARROW');\nexport const T_ASSIGN = Symbol.for('T_ASSIGN');\nexport const T_EQ = Symbol.for('T_EQ');\nexport const T_NE = Symbol.for('T_NE');\nexport const T_LE = Symbol.for('T_LE');\nexport const T_GE = Symbol.for('T_GE');\nexport const T_LT = Symbol.for('T_LT');\nexport const T_GT = Symbol.for('T_GT');\nexport const T_AND = Symbol.for('T_AND');\nexport const T_OR = Symbol.for('T_OR');\nexport const T_CONCAT = Symbol.for('T_CONCAT');\nexport const T_PLUS = Symbol.for('T_PLUS');\nexport const T_MINUS = Symbol.for('T_MINUS');\nexport const T_TIMES = Symbol.for('T_TIMES');\nexport const T_POW = Symbol.for('T_POW');\n\n/* A token is given by:\n * - A token tag (e.g. T_LOWERID, T_NUM).\n * - Possibly, a value (e.g. 'nroBolitas', 8).\n *   When the value is irrelevant, we provide null by convention.\n * - Two positions, representing its location in the source. */\nexport class Token {\n  constructor(tag, value, startPos, endPos) {\n    this._tag = tag;\n    this._value = value;\n    this._startPos = startPos;\n    this._endPos = endPos;\n  }\n\n  toString() {\n    let tag = Symbol.keyFor(this._tag).substring(2);\n    switch (tag) {\n      case 'NUM': case 'STRING': case 'UPPERID': case 'LOWERID':\n        return tag + '(\"' + this._value + '\")';\n      default:\n        return tag;\n    }\n  }\n\n  get tag() {\n    return this._tag;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  get startPos() {\n    return this._startPos;\n  }\n\n  get endPos() {\n    return this._endPos;\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/token.js","\nfunction keyword(palabra) {\n  return 'la palabra clave \"' + palabra + '\"';\n}\n\nfunction pluralize(n, singular, plural) {\n  if (n === 0) {\n    return 'ningún ' + singular;\n  } else if (n === 1) {\n    return 'un ' + singular;\n  } else {\n    return n.toString() + ' ' + plural;\n  }\n}\n\nfunction ordinalNumber(n) {\n  let units = [\n    '', 'primer', 'segundo', 'tercer', 'cuarto',\n    'quinto', 'sexto', 'séptimo', 'octavo', 'noveno'\n  ];\n  if (1 <= n <= 9) {\n    return units[n];\n  } else {\n    return '#' + n.toString();\n  }\n}\n\nfunction describeType(type) {\n  if (type.isInteger()) {\n    return ['m', 'número', 'números'];\n  } else if (type.isBoolean()) {\n    return ['m', 'booleano', 'booleanos'];\n  } else if (type.isColor()) {\n    return ['m', 'color', 'colores'];\n  } else if (type.isDirection()) {\n    return ['f', 'dirección', 'direcciones'];\n  } else if (type.isList() && type.contentType.isAny()) {\n    return ['f', 'lista', 'listas'];\n  } else if (type.isList()) {\n    let description = describeType(type.contentType);\n    if (description === null) {\n      return null;\n    } else {\n      let plural = description[2];\n      return ['f', 'lista de ' + plural, 'listas de ' + plural];\n    }\n  } else {\n    return null;\n  }\n}\n\nfunction describeTypeSingular(type) {\n  let description = describeType(type);\n  if (description === null) {\n    return type.toString();\n  } else {\n    let singular = description[1];\n    return singular;\n  }\n}\n\nfunction typeAsNoun(type) {\n  let description = describeType(type);\n  if (description === null) {\n    return 'un valor de tipo ' + type.toString();\n  } else {\n    let gender = description[0];\n    let singular = description[1];\n    if (gender === 'm') {\n      return 'un ' + singular;\n    } else {\n      return 'una ' + singular;\n    }\n  }\n}\n\nfunction typeAsQualifierSingular(type) {\n  let description = describeType(type);\n  if (description === null) {\n    return 'de tipo ' + type.toString();\n  } else {\n    let gender = description[0];\n    let singular = description[1];\n    if (gender === 'm') {\n      return 'un ' + singular;\n    } else {\n      return 'una ' + singular;\n    }\n  }\n}\n\nfunction typeAsQualifierPlural(type) {\n  let description = describeType(type);\n  if (description === null) {\n    return 'de tipo ' + type.toString();\n  } else {\n    let gender = description[0];\n    let plural = description[2];\n    if (gender === 'm') {\n      return plural;\n    } else {\n      return plural;\n    }\n  }\n}\n\nfunction listOfTypes(types) {\n  let typeStrings = [];\n  for (let type of types) {\n    typeStrings.push(describeTypeSingular(type));\n  }\n  return typeStrings.join(', ');\n}\n\nfunction openingDelimiterName(delimiter) {\n  if (delimiter === '(' || delimiter === ')') {\n    return 'un paréntesis abierto \"(\"';\n  } else if (delimiter === '[' || delimiter === ']') {\n    return 'un corchete abierto \"[\"';\n  } else if (delimiter === '{' || delimiter === '}') {\n    return 'una llave abierta \"{\"';\n  } else {\n    return delimiter;\n  }\n}\n\nfunction formatTypes(string, type1, type2) {\n  let result = '';\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === '%' && i + 1 < string.length) {\n      if (string[i + 1] === '%') {\n        result += '%';\n        i++;\n      } else if (string[i + 1] === '1') {\n        result += typeAsNoun(type1);\n        i++;\n      } else if (string[i + 1] === '2') {\n        result += typeAsNoun(type2);\n        i++;\n      } else {\n        result += '%';\n      }\n    } else {\n      result += string[i];\n    }\n  }\n  return result;\n}\n\nexport const LOCALE_ES = {\n\n  /* Descriptions of syntactic constructions and tokens */\n  'definition':\n    'una definición (de programa, función, procedimiento, o tipo)',\n  'pattern':\n    'un patrón (comodín \"_\", constructor aplicado a variables, o tupla)',\n  'statement': 'un comando',\n  'expression': 'una expresión',\n  'procedure call': 'una invocación a un procedimiento',\n  'field name': 'el nombre de un campo',\n  'T_EOF': 'el final del archivo',\n  'T_NUM': 'un número',\n  'T_STRING': 'una cadena (string)',\n  'T_UPPERID': 'un identificador con mayúsculas',\n  'T_LOWERID': 'un identificador con minúsculas',\n  'T_PROGRAM': keyword('program'),\n  'T_INTERACTIVE': keyword('interactive'),\n  'T_PROCEDURE': keyword('procedure'),\n  'T_FUNCTION': keyword('function'),\n  'T_RETURN': keyword('return'),\n  'T_IF': keyword('if'),\n  'T_THEN': keyword('then'),\n  'T_ELSE': keyword('else'),\n  'T_REPEAT': keyword('repeat'),\n  'T_FOREACH': keyword('foreach'),\n  'T_IN': keyword('in'),\n  'T_WHILE': keyword('while'),\n  'T_SWITCH': keyword('switch'),\n  'T_TO': keyword('to'),\n  'T_LET': keyword('let'),\n  'T_NOT': keyword('not'),\n  'T_DIV': keyword('div'),\n  'T_MOD': keyword('mod'),\n  'T_TYPE': keyword('type'),\n  'T_IS': keyword('is'),\n  'T_RECORD': keyword('record'),\n  'T_VARIANT': keyword('variant'),\n  'T_CASE': keyword('case'),\n  'T_FIELD': keyword('field'),\n  'T_UNDERSCORE': 'un guión bajo (\"_\")',\n  'T_LPAREN': 'un paréntesis izquierdo (\"(\")',\n  'T_RPAREN': 'un paréntesis derecho (\")\")',\n  'T_LBRACE': 'una llave izquierda (\"{\")',\n  'T_RBRACE': 'una llave derecha (\"}\")',\n  'T_LBRACK': 'un corchete izquierdo (\"[\")',\n  'T_RBRACK': 'un corchete derecho (\"]\")',\n  'T_COMMA': 'una coma (\",\")',\n  'T_SEMICOLON': 'un punto y coma (\";\")',\n  'T_RANGE': 'un separador de rango (\"..\")',\n  'T_GETS': 'una flecha hacia la izquierda (\"<-\")',\n  'T_PIPE': 'una barra vertical (\"|\")',\n  'T_ARROW': 'una flecha (\"->\")',\n  'T_ASSIGN': 'un operador de asignación (\":=\")',\n  'T_EQ': 'una comparación por igualdad (\"==\")',\n  'T_NE': 'una comparación por desigualdad (\"/=\")',\n  'T_LE': 'un menor o igual (\"<=\")',\n  'T_GE': 'un mayor o igual (\">=\")',\n  'T_LT': 'un menor estricto (\"<\")',\n  'T_GT': 'un mayor estricto (\">\")',\n  'T_AND': 'el \"y\" lógico (\"&&\")',\n  'T_OR': 'el \"o\" lógico (\"||\")',\n  'T_CONCAT': 'el operador de concatenación de listas (\"++\")',\n  'T_PLUS': 'el operador de suma (\"+\")',\n  'T_MINUS': 'el operador de resta (\"-\")',\n  'T_TIMES': 'el operador de producto (\"*\")',\n  'T_POW': 'el operador de potencia (\"^\")',\n\n  /* Local name categories */\n  'LocalVariable': 'variable',\n  'LocalIndex': 'índice',\n  'LocalParameter': 'parámetro',\n\n  /* Descriptions of value types */\n  'V_Integer': 'un número',\n  'V_String': 'una cadena',\n  'V_Tuple': 'una tupla',\n  'V_List': 'una lista',\n  'V_Structure': 'una estructura',\n\n  /* Lexer */\n  'errmsg:unclosed-multiline-comment':\n    'El comentario se abre pero nunca se cierra.',\n\n  'errmsg:unclosed-string-constant':\n    'La comilla que abre no tiene una comilla que cierra correspondiente.',\n\n  'errmsg:numeric-constant-should-not-have-leading-zeroes':\n    'Las constantes numéricas no se pueden escribir con ceros a la '\n   + 'izquierda.',\n\n  'errmsg:identifier-must-start-with-alphabetic-character':\n    'Los identificadores deben empezar con un caracter alfabético '\n   + '(a...z,A...Z).',\n\n  'errmsg:unknown-token':\n    function (symbol) {\n      return 'Símbolo desconocido en la entrada: \"' + symbol + '\".';\n    },\n\n  'warning:empty-pragma':\n    'Directiva pragma vacía.',\n\n  'warning:unknown-pragma':\n    function (pragmaName) {\n      return 'Directiva pragma desconocida: \"' + pragmaName + '\".';\n    },\n\n  'errmsg:unmatched-opening-delimiter':\n    function (delimiter) {\n      return 'Se encontró ' + openingDelimiterName(delimiter)\n           + ' pero nunca se cierra.';\n    },\n\n  'errmsg:unmatched-closing-delimiter':\n    function (delimiter) {\n      return 'Se encontró un \"' + delimiter + '\" '\n           + 'pero no había ' + openingDelimiterName(delimiter) + '.';\n    },\n\n  'errmsg:unknown-language-option':\n    function (option) {\n      return 'Opción desconocida. \"' + option + '\".';\n    },\n\n  /* Parser */\n  'errmsg:empty-source':\n    'El programa está vacío.',\n\n  'errmsg:expected-but-found':\n    function (expected, found) {\n      return 'Se esperaba ' + expected + '.\\n'\n           + 'Se encontró: ' + found + '.';\n    },\n\n  'errmsg:pattern-number-cannot-be-negative-zero':\n    'El patrón numérico no puede ser \"-0\".',\n\n  'errmsg:pattern-tuple-cannot-be-singleton':\n    'El patrón para una tupla no puede tener una sola componente. '\n  + 'Las tuplas tienen 0, 2, 3, o más componentes, pero no 1.',\n\n  'errmsg:assignment-tuple-cannot-be-singleton':\n    'La asignación a una tupla no puede constar de una sola componente. '\n  + 'Las tuplas tienen 0, 2, 3, o más componentes, pero no 1.',\n\n  'errmsg:operators-are-not-associative':\n    function (op1, op2) {\n      return 'La expresión usa '\n           + op1 + ' y ' + op2\n           + ', pero estos operadores no se pueden asociar. '\n           + 'Quizás faltan paréntesis.';\n    },\n\n  'errmsg:obsolete-tuple-assignment':\n    'Se esperaba un comando pero se encontró un paréntesis izquierdo. '\n  + 'Nota: la sintaxis de asignación de tuplas \"(x1, ..., xN) := y\" '\n  + 'está obsoleta. Usar \"let (x1, ..., xN) := y\".',\n\n  /* Linter */\n  'errmsg:program-already-defined':\n    function (pos1, pos2) {\n      return 'Ya había un programa definido en ' + pos1 + '.\\n'\n           + 'No se puede definir un programa en ' + pos2 + '.';\n    },\n\n  'errmsg:procedure-already-defined':\n    function (name, pos1, pos2) {\n      return 'El procedimiento \"' + name + '\" está definido dos veces: '\n           + 'en ' + pos1 + ' y en ' + pos2 + '.';\n    },\n\n  'errmsg:function-already-defined':\n    function (name, pos1, pos2) {\n      return 'La función \"' + name + '\" está definida dos veces: '\n           + 'en ' + pos1 + ' y en ' + pos2 + '.';\n    },\n\n  'errmsg:type-already-defined':\n    function (name, pos1, pos2) {\n      return 'El tipo \"' + name + '\" está definido dos veces: '\n           + 'en ' + pos1 + ' y en ' + pos2 + '.';\n    },\n\n  'errmsg:constructor-already-defined':\n    function (name, pos1, pos2) {\n      return 'El constructor \"' + name + '\" está definido dos veces: '\n           + 'en ' + pos1 + ' y en ' + pos2 + '.';\n    },\n\n  'errmsg:repeated-field-name':\n    function (constructorName, fieldName) {\n      return 'El campo \"' + fieldName + '\" no puede estar repetido '\n           + 'para el constructor \"' + constructorName + '\".';\n    },\n\n  'errmsg:function-and-field-cannot-have-the-same-name':\n    function (name, posFunction, posField) {\n      return 'El nombre \"' + name + '\" se usa '\n           + 'para una función en ' + posFunction + ' y '\n           + 'para un campo en ' + posField + '.';\n    },\n\n  'errmsg:source-should-have-a-program-definition':\n    /* Note: the code may actually be completely empty, but\n     * we avoid this technicality since the message could be\n     * confusing. */\n    'El código debe tener una definición de \"program { ... }\".',\n\n  'errmsg:procedure-should-not-have-return':\n    function (name) {\n      return 'El procedimiento \"' + name + '\" '\n           + 'no debería tener un comando \"return\".';\n    },\n\n  'errmsg:function-should-have-return':\n    function (name) {\n      return 'La función \"' + name + '\" debería tener un comando \"return\".';\n    },\n\n  'errmsg:return-statement-not-allowed-here':\n    'El comando \"return\" solo puede aparecer como el último comando '\n  + 'de una función o como el último comando del programa.',\n\n  'errmsg:local-name-conflict':\n    function (name, oldCat, oldPos, newCat, newPos) {\n      return 'Conflicto de nombres: \"' + name + '\" se usa dos veces: '\n           + 'como ' + oldCat + ' en ' + oldPos + ', y '\n           + 'como ' + newCat + ' en ' + newPos + '.';\n    },\n\n  'errmsg:repeated-variable-in-tuple-assignment':\n    function (name) {\n      return 'La variable \"' + name + '\" está repetida en la asignación '\n           + 'de tuplas.';\n    },\n\n  'errmsg:constructor-used-as-procedure':\n    function (name, type) {\n      return 'El procedimiento \"' + name + '\" no está definido. '\n           + 'El nombre \"' + name + '\" es el nombre de un constructor '\n           + 'del tipo \"' + type + '\".';\n    },\n\n  'errmsg:undefined-procedure':\n    function (name) {\n      return 'El procedimiento \"' + name + '\" no está definido.';\n    },\n\n  'errmsg:undefined-function':\n    function (name) {\n      return 'La función \"' + name + '\" no está definida.';\n    },\n\n  'errmsg:procedure-arity-mismatch':\n    function (name, expected, received) {\n      return 'El procedimiento \"' + name + '\" espera recibir '\n           + LOCALE_ES['<n>-parameters'](expected)\n           + ' pero se lo invoca con '\n           + LOCALE_ES['<n>-arguments'](received) + '.';\n    },\n\n  'errmsg:function-arity-mismatch':\n    function (name, expected, received) {\n      return 'La función \"' + name + '\" espera recibir '\n           + LOCALE_ES['<n>-parameters'](expected)\n           + ' pero se la invoca con '\n           + LOCALE_ES['<n>-arguments'](received) + '.';\n    },\n\n  'errmsg:structure-pattern-arity-mismatch':\n    function (name, expected, received) {\n      return 'El constructor \"' + name + '\" tiene '\n           + LOCALE_ES['<n>-fields'](expected)\n           + ' pero el patrón tiene '\n           + LOCALE_ES['<n>-parameters'](received) + '.';\n    },\n\n  'errmsg:type-used-as-constructor':\n    function (name, constructorNames) {\n      let msg;\n      if (constructorNames.length === 0) {\n        msg = '(no tiene constructores).';\n      } else if (constructorNames.length === 1) {\n        msg = '(tiene un constructor: ' + constructorNames[0] + ').';\n      } else {\n        msg = '(sus constructores son: '\n            + constructorNames.join(', ') + ').';\n      }\n      return 'El constructor \"' + name + '\" no está definido. '\n           + 'El nombre \"' + name + '\" es el nombre de un tipo '\n           + msg;\n    },\n\n  'errmsg:procedure-used-as-constructor':\n    function (name) {\n      return 'El constructor \"' + name + '\" no está definido. '\n           + 'El nombre \"' + name + '\" es el nombre de un procedimiento.';\n    },\n\n  'errmsg:undeclared-constructor':\n    function (name) {\n      return 'El constructor \"' + name + '\" no está definido.';\n    },\n\n  'errmsg:wildcard-pattern-should-be-last':\n    'El comodín \"_\" tiene que ser la última rama del switch.',\n\n  'errmsg:variable-pattern-should-be-last':\n    function (name) {\n      return 'El patrón variable \"' + name +\n             '\" tiene que ser la última rama del switch.';\n    },\n\n  'errmsg:numeric-pattern-repeats-number':\n    function (number) {\n      return 'Hay dos ramas distintas para el número \"' + number + '\".';\n    },\n\n  'errmsg:structure-pattern-repeats-constructor':\n    function (name) {\n      return 'Hay dos ramas distintas para el constructor \"' + name + '\".';\n    },\n\n  'errmsg:structure-pattern-repeats-tuple-arity':\n    function (arity) {\n      return 'Hay dos ramas distintas para las tuplas de ' + arity.toString()\n           + ' componentes.';\n    },\n\n  'errmsg:structure-pattern-repeats-timeout':\n    'Hay dos ramas distintas para el TIMEOUT.',\n\n  'errmsg:pattern-does-not-match-type':\n    function (expectedType, patternType) {\n      return 'Los patrones tienen que ser todos del mismo tipo. '\n           + 'El patrón debería ser de tipo ' + expectedType\n           + 'pero es de tipo ' + patternType + '.';\n    },\n\n  'errmsg:patterns-in-interactive-program-must-be-events':\n    'Los patrones de un \"interactive program\" deben ser eventos.',\n\n  'errmsg:patterns-in-switch-must-not-be-events':\n    'Los patrones de un \"switch\" no pueden ser eventos.',\n\n  'errmsg:structure-construction-repeated-field':\n    function (constructorName, fieldName) {\n      return 'El campo \"' + fieldName + '\" está repetido en '\n           + 'la instanciación del constructor \"' + constructorName + '\".';\n    },\n\n  'errmsg:structure-construction-invalid-field':\n    function (constructorName, fieldName) {\n      return 'El campo \"' + fieldName + '\" no es un campo válido '\n           + 'para el constructor \"' + constructorName + '\".';\n    },\n\n  'errmsg:structure-construction-missing-field':\n    function (constructorName, fieldName) {\n      return 'Falta darle valor al campo \"' + fieldName + '\" '\n           + 'del constructor \"' + constructorName + '\".';\n    },\n\n  'errmsg:structure-construction-cannot-be-an-event':\n    function (constructorName) {\n      return 'El constructor \"' + constructorName + '\" corresponde a un '\n           + 'evento, y solamente se puede manejar implícitamente '\n           + 'en un programa interactivo (el usuario no puede construir '\n           + 'instancias).';\n    },\n\n  'errmsg:forbidden-extension-destructuring-foreach':\n    'El índice de la repetición indexada debe ser un identificador.',\n\n  'errmsg:patterns-in-foreach-must-not-be-events':\n    'El patrón de un foreach no puede ser un evento.',\n\n  /* Runtime errors (virtual machine) */\n  'errmsg:ellipsis': 'El programa todavía no está completo.',\n\n  'errmsg:undefined-variable':\n    function (variableName) {\n      return 'La variable \"' + variableName + '\" no está definida.';\n    },\n\n  'errmsg:too-few-arguments':\n    function (routineName) {\n      return 'Faltan argumentos para \"' + routineName + '\".';\n    },\n\n  'errmsg:expected-structure-but-got':\n    function (constructorName, valueTag) {\n      return 'Se esperaba una estructura construida '\n           + 'con el constructor \"' + constructorName + '\", '\n           + 'pero se recibió ' + valueTag + '.';\n    },\n\n  'errmsg:expected-constructor-but-got':\n    function (constructorNameExpected, constructorNameReceived) {\n      return 'Se esperaba una estructura construida '\n           + 'con el constructor \"'\n           + constructorNameExpected + '\", '\n           + 'pero el constructor recibido es '\n           + constructorNameReceived + '\".';\n    },\n\n  'errmsg:incompatible-types-on-assignment':\n    function (variableName, oldType, newType) {\n      return 'La variable \"' + variableName + '\" '\n           + 'contenía ' + typeAsNoun(oldType) + ', '\n           + 'no se le puede asignar ' + typeAsNoun(newType) + '\".';\n    },\n\n  'errmsg:incompatible-types-on-list-creation':\n    function (index, oldType, newType) {\n      return 'Todos los elementos de una lista deben ser del mismo tipo. '\n           + 'Los elementos son ' + typeAsQualifierPlural(oldType) + ', '\n           + 'pero el elemento en la posición ' + index.toString() + ' '\n           + 'es ' + typeAsQualifierSingular(newType) + '.';\n    },\n\n  'errmsg:incompatible-types-on-structure-update':\n    function (fieldName, oldType, newType) {\n      return 'El campo \"' + fieldName + '\" es '\n           + typeAsQualifierSingular(oldType) + '. '\n           + 'No se lo puede actualizar con '\n           + typeAsNoun(newType) + '.';\n    },\n\n  'errmsg:expected-tuple-value-but-got':\n    function (receivedType) {\n      return 'Se esperaba una tupla pero se recibió '\n           + typeAsNoun(receivedType) + '.';\n    },\n\n  'errmsg:tuple-component-out-of-bounds':\n    function (size, index) {\n      return 'Índice fuera de rango. '\n           + 'La tupla es de tamaño ' + size.toString() + ' y '\n           + 'el índice es ' + index.toString() + '.';\n    },\n\n  'errmsg:expected-structure-value-but-got':\n    function (receivedType) {\n      return 'Se esperaba una estructura pero se recibió '\n           + typeAsNoun(receivedType) + '.';\n    },\n\n  'errmsg:structure-field-not-present':\n    function (fieldNames, missingFieldName) {\n      return 'La estructura no tiene un campo \"' + missingFieldName + '\". '\n           + 'Los campos son: [' + fieldNames.join(', ') + '].';\n    },\n\n  'errmsg:primitive-does-not-exist':\n    function (primitiveName) {\n      return 'La operación primitiva \"' + primitiveName + '\" '\n           + 'no existe o no está disponible.';\n    },\n\n  'errmsg:primitive-arity-mismatch':\n    function (name, expected, received) {\n      return 'La operación \"' + name + '\" espera recibir '\n           + LOCALE_ES['<n>-parameters'](expected)\n           + ' pero se la invoca con '\n           + LOCALE_ES['<n>-arguments'](received) + '.';\n    },\n\n  'errmsg:primitive-argument-type-mismatch':\n    function (name, parameterIndex, numArgs, expectedType, receivedType) {\n      let msg = 'El ';\n      if (numArgs > 1) {\n        msg += ordinalNumber(parameterIndex) + ' ';\n      }\n      msg += 'parámetro ';\n      msg += 'de \"' + name + '\" ';\n      msg += 'debería ser ' + typeAsQualifierSingular(expectedType) + ' ';\n      msg += 'pero es ' + typeAsQualifierSingular(receivedType) + '.';\n      return msg;\n    },\n\n  'errmsg:expected-value-of-type-but-got':\n    function (expectedType, receivedType) {\n      return 'Se esperaba ' + typeAsNoun(expectedType) + ' '\n           + 'pero se recibió ' + typeAsNoun(receivedType) + '.';\n    },\n\n  'errmsg:expected-value-of-some-type-but-got':\n    function (expectedTypes, receivedType) {\n      return 'Se esperaba un valor de alguno de los siguientes tipos: '\n           + listOfTypes(expectedTypes) + '. '\n           + 'Pero se recibió '\n           + typeAsNoun(receivedType) + '.';\n    },\n\n  'errmsg:expected-values-to-have-compatible-types':\n    function (type1, type2) {\n      return 'Los tipos de las expresiones no coinciden: '\n           + 'la primera es ' + typeAsQualifierSingular(type1) + ' '\n           + 'y la segunda es ' + typeAsQualifierSingular(type2) + '.';\n    },\n\n  'errmsg:switch-does-not-match':\n    'El valor analizado no coincide con ninguna de las ramas del switch.',\n\n  'errmsg:foreach-pattern-does-not-match':\n    'El elemento no coincide con el patrón esperado por el foreach.',\n\n  'errmsg:cannot-divide-by-zero':\n    'No se puede dividir por cero.',\n\n  'errmsg:negative-exponent':\n    'El exponente de la potencia no puede ser negativo.',\n\n  'errmsg:list-cannot-be-empty':\n    'La lista no puede ser vacía.',\n\n  'errmsg:timeout':\n    function (millisecs) {\n      return 'La ejecución del programa demoró más de '\n           + millisecs.toString() + 'ms.';\n    },\n\n  /* Typecheck */\n  'errmsg:typecheck-failed':\n    function (errorMessage, type1, type2) {\n      return formatTypes(errorMessage, type1, type2);\n    },\n\n  /* Board operations */\n  'errmsg:cannot-move-to':\n    function (dirName) {\n      return 'No se puede mover hacia la dirección ' + dirName +\n             ': cae afuera del tablero.';\n    },\n\n  'errmsg:cannot-remove-stone':\n    function (dirName) {\n      return 'No se puede sacar una bolita de color ' + dirName +\n             ': no hay bolitas de ese color.';\n    },\n\n  /* Runtime */\n\n  'TYPE:Integer': 'Number',\n  'TYPE:String': 'String',\n  'TYPE:Tuple': 'Tuple',\n  'TYPE:List': 'List',\n\n  'TYPE:Event': 'Event',\n  'CONS:INIT': 'INIT',\n  'CONS:TIMEOUT': 'TIMEOUT',\n\n  'TYPE:Bool': 'Bool',\n  'CONS:False': 'False',\n  'CONS:True': 'True',\n\n  'TYPE:Color': 'Color',\n  'CONS:Color0': 'Azul',\n  'CONS:Color1': 'Negro',\n  'CONS:Color2': 'Rojo',\n  'CONS:Color3': 'Verde',\n\n  'TYPE:Dir': 'Dir',\n  'CONS:Dir0': 'Norte',\n  'CONS:Dir1': 'Este',\n  'CONS:Dir2': 'Sur',\n  'CONS:Dir3': 'Oeste',\n\n  'PRIM:TypeCheck': 'TypeCheck',\n  'PRIM:BOOM': 'BOOM',\n  'PRIM:boom': 'boom',\n\n  'PRIM:PutStone': 'Poner',\n  'PRIM:RemoveStone': 'Sacar',\n  'PRIM:Move': 'Mover',\n  'PRIM:GoToEdge': 'IrAlBorde',\n  'PRIM:EmptyBoardContents': 'VaciarTablero',\n  'PRIM:numStones': 'nroBolitas',\n  'PRIM:anyStones': 'hayBolitas',\n  'PRIM:canMove': 'puedeMover',\n  'PRIM:next': 'siguiente',\n  'PRIM:prev': 'previo',\n  'PRIM:opposite': 'opuesto',\n  'PRIM:minBool': 'minBool',\n  'PRIM:maxBool': 'maxBool',\n  'PRIM:minColor': 'minColor',\n  'PRIM:maxColor': 'maxColor',\n  'PRIM:minDir': 'minDir',\n  'PRIM:maxDir': 'maxDir',\n\n  'PRIM:head': 'primero',\n  'PRIM:tail': 'resto',\n  'PRIM:init': 'comienzo',\n  'PRIM:last': 'ultimo',\n\n  /* Helpers */\n  '<alternative>':\n    function (strings) {\n      return 'alguna de las siguientes alternativas:\\n'\n           + strings.map(s => '  ' + s).join('\\n');\n    },\n  '<position>':\n    function (filename, line, column) {\n      return filename + ':' + line.toString() + ':' + column.toString();\n    },\n  '<n>-parameters':\n    function (n) {\n      return pluralize(n, 'parámetro', 'parámetros');\n    },\n  '<n>-arguments':\n    function (n) {\n      return pluralize(n, 'argumento', 'argumentos');\n    },\n  '<n>-fields':\n    function (n) {\n      return pluralize(n, 'campo', 'campos');\n    },\n  '<pattern-type>':\n    function (patternType) {\n      if (patternType === 'Event') {\n        return 'evento del programa interactivo';\n      } else if (patternType.substring(0, 7) === '_TUPLE_') {\n        return 'tupla de ' + patternType.substring(7) + ' componentes';\n      } else {\n        return patternType;\n      }\n    },\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/i18n/es.js","import { i18n, i18nPosition } from './i18n';\nimport { GbsSyntaxError } from './exceptions';\n\n/* Description of a field */\nclass FieldDescriptor {\n  constructor(typeName, constructorName, index) {\n    this._typeName = typeName;\n    this._constructorName = constructorName;\n    this._index = index;\n  }\n\n  get typeName() {\n    return this._typeName;\n  }\n\n  get constructorName() {\n    return this._constructorName;\n  }\n\n  get index() {\n    return this._index;\n  }\n}\n\n/* Local name categories */\nexport const LocalVariable = Symbol.for('LocalVariable');\nexport const LocalParameter = Symbol.for('LocalParameter');\nexport const LocalIndex = Symbol.for('LocalIndex');\n\n/* Description of a local name */\nclass LocalNameDescriptor {\n  constructor(category, position) {\n    this._category = category;\n    this._position = position;\n  }\n\n  get category() {\n    return this._category;\n  }\n\n  get position() {\n    return this._position;\n  }\n}\n\nfunction fail(startPos, endPos, reason, args) {\n  throw new GbsSyntaxError(startPos, endPos, reason, args);\n}\n\n/* A symbol table keeps track of definitions, associating:\n * - procedure and function names to their code\n * - type definitions, constructors, and fields\n */\nexport class SymbolTable {\n\n  constructor() {\n    this._program = null;\n\n    /* true iff the program is interactive */\n    this._isInteractiveProgram = false;\n\n    /* Each procedure name is mapped to its definition */\n    this._procedures = {};\n\n    /* Each procedure name is mapped to its parameters */\n    this._procedureParameters = {};\n\n    /* Each function name is mapped to its definition */\n    this._functions = {};\n\n    /* Each function name is mapped to its parameters */\n    this._functionParameters = {};\n\n    /* Each type name is mapped to its definition */\n    this._types = {};\n\n    /* Each type name is mapped to a list of constructor names */\n    this._typeConstructors = {};\n\n    /* Each constructor name is mapped to its declaration */\n    this._constructors = {};\n\n    /* Each constructor name is mapped to its type name */\n    this._constructorType = {};\n\n    /* Each constructor name is mapped to a list of field names */\n    this._constructorFields = {};\n\n    /* Each field name is mapped to a list of field descriptors.\n     * Each field descriptor is of the form\n     *   new FieldDescriptor(typeName, constructorName, index)\n     * where\n     * - 'typeName' is the name of a type\n     * - 'constructorName' is the name of a constructor of the given type\n     * - 'index' is the index of the given field with respect to the\n     *   given constructor (starting from 0)\n     */\n    this._fields = {};\n\n    /* Local names include parameters, indices and variables,\n     * which are only meaningful within a routine.\n     *\n     * Local names may be bound/referenced in the following places:\n     * - formal parameters,\n     * - indices of a \"foreach\",\n     * - pattern matching (formal parameters of a \"switch\"),\n     * - assignments and tuple assignments,\n     * - reading local variables.\n     *\n     * _localNames maps a name to a descriptor of the form:\n     *   new LocalNameDescriptor(category, position)\n     */\n    this._localNames = {};\n  }\n\n  get program() {\n    return this._program;\n  }\n\n  isInteractiveProgram() {\n    return this._isInteractiveProgram;\n  }\n\n  isProcedure(name) {\n    return name in this._procedures;\n  }\n\n  allProcedureNames() {\n    let names = [];\n    for (let name in this._procedures) {\n      names.push(name);\n    }\n    return names.sort();\n  }\n\n  procedureDefinition(name) {\n    if (this.isProcedure(name)) {\n      return this._procedures[name];\n    } else {\n      throw Error('Undefined procedure.');\n    }\n  }\n\n  procedureParameters(name) {\n    if (this.isProcedure(name)) {\n      return this._procedureParameters[name];\n    } else {\n      throw Error('Undefined procedure.');\n    }\n  }\n\n  isFunction(name) {\n    return name in this._functions;\n  }\n\n  allFunctionNames() {\n    let names = [];\n    for (let name in this._functions) {\n      names.push(name);\n    }\n    return names.sort();\n  }\n\n  functionDefinition(name) {\n    if (this.isFunction(name)) {\n      return this._functions[name];\n    } else {\n      throw Error('Undefined function.');\n    }\n  }\n\n  functionParameters(name) {\n    if (this.isFunction(name)) {\n      return this._functionParameters[name];\n    } else {\n      throw Error('Undefined function.');\n    }\n  }\n\n  isType(name) {\n    return name in this._types;\n  }\n\n  typeDefinition(name) {\n    if (this.isType(name)) {\n      return this._types[name];\n    } else {\n      throw Error('Undefined type.');\n    }\n  }\n\n  typeConstructors(name) {\n    if (this.isType(name)) {\n      return this._typeConstructors[name];\n    } else {\n      throw Error('Undefined type.');\n    }\n  }\n\n  isConstructor(name) {\n    return name in this._constructors;\n  }\n\n  constructorDeclaration(name) {\n    if (this.isConstructor(name)) {\n      return this._constructors[name];\n    } else {\n      throw Error('Undefined constructor.');\n    }\n  }\n\n  constructorType(name) {\n    if (this.isConstructor(name)) {\n      return this._constructorType[name];\n    } else {\n      throw Error('Undefined constructor.');\n    }\n  }\n\n  constructorFields(name) {\n    if (this.isConstructor(name)) {\n      return this._constructorFields[name];\n    } else {\n      throw Error('Undefined constructor.');\n    }\n  }\n\n  isField(name) {\n    return name in this._fields;\n  }\n\n  fieldDescriptor(name) {\n    if (this.isField(name)) {\n      return this._fields[name];\n    } else {\n      throw Error('Undefined field.');\n    }\n  }\n\n  defProgram(definition) {\n    if (this._program !== null) {\n      fail(\n        definition.startPos, definition.endPos,\n        'program-already-defined', [\n          i18nPosition(this._program.startPos),\n          i18nPosition(definition.startPos)\n        ]\n      );\n    }\n    this._program = definition;\n  }\n\n  defInteractiveProgram(definition) {\n    this.defProgram(definition);\n    this._isInteractiveProgram = true;\n  }\n\n  defProcedure(definition) {\n    let name = definition.name.value;\n    if (name in this._procedures) {\n      fail(\n        definition.name.startPos, definition.name.endPos,\n        'procedure-already-defined', [\n          name,\n          i18nPosition(this._procedures[name].startPos),\n          i18nPosition(definition.startPos)\n        ]\n      );\n    }\n    let parameters = [];\n    for (let parameter of definition.parameters) {\n      parameters.push(parameter.value);\n    }\n    this._procedures[name] = definition;\n    this._procedureParameters[name] = parameters;\n  }\n\n  defFunction(definition) {\n    let name = definition.name.value;\n    if (name in this._functions) {\n      fail(\n        definition.name.startPos, definition.name.endPos,\n        'function-already-defined', [\n          name,\n          i18nPosition(this._functions[name].startPos),\n          i18nPosition(definition.startPos)\n        ]\n      );\n    } else if (name in this._fields) {\n      let fieldPos =\n        this._constructors[this._fields[name][0].constructorName].startPos;\n      fail(\n        definition.name.startPos, definition.name.endPos,\n        'function-and-field-cannot-have-the-same-name', [\n          name,\n          i18nPosition(definition.startPos),\n          i18nPosition(fieldPos)\n        ]\n      );\n    }\n    let parameters = [];\n    for (let parameter of definition.parameters) {\n      parameters.push(parameter.value);\n    }\n    this._functions[name] = definition;\n    this._functionParameters[name] = parameters;\n  }\n\n  defType(definition) {\n    let typeName = definition.typeName.value;\n    if (typeName in this._types) {\n      fail(\n        definition.typeName.startPos, definition.typeName.endPos,\n        'type-already-defined', [\n          typeName,\n          i18nPosition(this._types[typeName].startPos),\n          i18nPosition(definition.startPos)\n        ]\n      );\n    }\n    this._types[typeName] = definition;\n    let constructorNames = [];\n    for (let constructorDeclaration of definition.constructorDeclarations) {\n      this._declareConstructor(typeName, constructorDeclaration);\n      constructorNames.push(constructorDeclaration.constructorName.value);\n    }\n    this._typeConstructors[typeName] = constructorNames;\n  }\n\n  _declareConstructor(typeName, constructorDeclaration) {\n    let constructorName = constructorDeclaration.constructorName.value;\n    if (constructorName in this._constructors) {\n      fail(\n        constructorDeclaration.constructorName.startPos,\n        constructorDeclaration.constructorName.endPos,\n        'constructor-already-defined', [\n          constructorName,\n          i18nPosition(this._constructors[constructorName].startPos),\n          i18nPosition(constructorDeclaration.startPos)\n        ]\n      );\n    }\n    this._constructors[constructorName] = constructorDeclaration;\n    this._constructorType[constructorName] = typeName;\n\n    let constructorFields = {};\n    let fieldNames = [];\n    let index = 0;\n    for (let fieldName of constructorDeclaration.fieldNames) {\n      if (fieldName.value in constructorFields) {\n        fail(\n          fieldName.startPos, fieldName.endPos,\n          'repeated-field-name',\n          [constructorName, fieldName.value]\n        );\n      }\n      constructorFields[fieldName.value] = true;\n      fieldNames.push(fieldName.value);\n      this._declareField(\n        fieldName.startPos, fieldName.endPos,\n        typeName, constructorName, fieldName.value, index\n      );\n      index++;\n    }\n    this._constructorFields[constructorName] = fieldNames;\n  }\n\n  _declareField(startPos, endPos, typeName, constructorName, fieldName, index) {\n    if (fieldName in this._functions) {\n      fail(\n        startPos, endPos,\n        'function-and-field-cannot-have-the-same-name', [\n          fieldName,\n          i18nPosition(this._functions[fieldName].startPos),\n          i18nPosition(startPos)\n        ]\n      );\n    }\n    if (!(fieldName in this._fields)) {\n      this._fields[fieldName] = [];\n    }\n    this._fields[fieldName].push(\n        new FieldDescriptor(typeName, constructorName, index)\n    );\n  }\n\n  /* Adds a new local name, failing if it already exists. */\n  addNewLocalName(localName, category) {\n    if (localName.value in this._localNames) {\n      fail(\n        localName.startPos, localName.endPos,\n        'local-name-conflict', [\n          localName.value,\n          i18n(Symbol.keyFor(this._localNames[localName.value].category)),\n          i18nPosition(this._localNames[localName.value].position),\n          i18n(Symbol.keyFor(category)),\n          i18nPosition(localName.startPos)\n        ]\n      );\n    }\n    this.setLocalName(localName, category);\n  }\n\n  /* Sets a local name.\n   * It fails if it already exists with a different category. */\n  setLocalName(localName, category) {\n    if (localName.value in this._localNames &&\n        this._localNames[localName.value].category !== category) {\n      fail(\n        localName.startPos, localName.endPos,\n        'local-name-conflict', [\n          localName.value,\n          i18n(Symbol.keyFor(this._localNames[localName.value].category)),\n          i18nPosition(this._localNames[localName.value].position),\n          i18n(Symbol.keyFor(category)),\n          i18nPosition(localName.startPos)\n        ]\n      );\n    }\n    this._localNames[localName.value] =\n      new LocalNameDescriptor(category, localName.startPos);\n  }\n\n  /* Removes a local name. */\n  removeLocalName(localName) {\n    delete this._localNames[localName.value];\n  }\n\n  /* Removes all local names. */\n  exitScope() {\n    this._localNames = {};\n  }\n\n  /* Get the attribute dictionary for a global name.\n   *\n   * A global name is the names of a global definition:\n   *   - the string 'program'\n   *   - any procedure name (e.g. 'P')\n   *   - any function name (e.g. 'f')\n   *   - any type name (e.g. 'A')\n   *\n   * The result is a dictionary of attributes.\n   *\n   */\n  getAttributes(globalName) {\n    if (globalName === 'program' && this._program !== null) {\n      return this._program.attributes;\n    } else if (globalName in this._procedures) {\n      return this._procedures[globalName].attributes;\n    } else if (globalName in this._functions) {\n      return this._functions[globalName].attributes;\n    } else if (globalName in this._types) {\n      return this._types[globalName].attributes;\n    } else {\n      return {};\n    }\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/symtable.js","import { UnknownPosition } from './reader';\n\n/* Opcodes are constant symbols */\nexport const I_PushInteger = Symbol.for('I_PushInteger');\nexport const I_PushString = Symbol.for('I_PushString');\nexport const I_PushVariable = Symbol.for('I_PushVariable');\nexport const I_SetVariable = Symbol.for('I_SetVariable');\nexport const I_UnsetVariable = Symbol.for('I_UnsetVariable');\nexport const I_Label = Symbol.for('I_Label');\nexport const I_Jump = Symbol.for('I_Jump');\nexport const I_JumpIfFalse = Symbol.for('I_JumpIfFalse');\nexport const I_JumpIfStructure = Symbol.for('I_JumpIfStructure');\nexport const I_JumpIfTuple = Symbol.for('I_JumpIfTuple');\nexport const I_Call = Symbol.for('I_Call');\nexport const I_Return = Symbol.for('I_Return');\nexport const I_MakeTuple = Symbol.for('I_MakeTuple');\nexport const I_MakeList = Symbol.for('I_MakeList');\nexport const I_MakeStructure = Symbol.for('I_MakeStructure');\nexport const I_UpdateStructure = Symbol.for('I_UpdateStructure');\nexport const I_ReadTupleComponent = Symbol.for('I_ReadTupleComponent');\nexport const I_ReadStructureField = Symbol.for('I_ReadStructureField');\nexport const I_ReadStructureFieldPop = Symbol.for('I_ReadStructureFieldPop');\nexport const I_Add = Symbol.for('I_Add');\nexport const I_Dup = Symbol.for('I_Dup');\nexport const I_Pop = Symbol.for('I_Pop');\nexport const I_PrimitiveCall = Symbol.for('I_PrimitiveCall');\nexport const I_SaveState = Symbol.for('I_SaveState');\nexport const I_RestoreState = Symbol.for('I_RestoreState');\nexport const I_TypeCheck = Symbol.for('I_TypeCheck');\n\nexport class Code {\n\n  constructor(instructions) {\n    this._instructions = instructions;\n  }\n\n  toString() {\n    let res = [];\n    for (let instruction of this._instructions) {\n      res.push(instruction.toString());\n    }\n    return res.join('\\n');\n  }\n\n  produce(instruction) {\n    this._instructions.push(instruction);\n  }\n\n  /* Return the instruction at the given location */\n  at(ip) {\n    if (0 <= ip && ip < this._instructions.length) {\n      return this._instructions[ip];\n    } else {\n      throw Error('Code: instruction pointer out of range.');\n    }\n  }\n\n  /* Return a dictionary mapping label names to their corresponding\n   * instruction pointers. */\n  labelTargets() {\n    let labelTargets = {};\n    for (let i = 0; i < this._instructions.length; i++) {\n      if (this._instructions[i].opcode === I_Label) {\n        let label = this._instructions[i].label;\n        if (label in labelTargets) {\n          throw Error('Code: label \"' + label + '\" is repeated.');\n        }\n        labelTargets[label] = i;\n      }\n    }\n    return labelTargets;\n  }\n\n}\n\nfunction argToString(arg) {\n  if (arg instanceof Array) {\n    let res = [];\n    for (let elem of arg) {\n      res.push(argToString(elem));\n    }\n    return '[' + res.join(', ') + ']';\n  } else {\n    return arg.toString();\n  }\n}\n\nexport class Instruction {\n  constructor(opcode, args) {\n    this._opcode = opcode;\n    this._args = args;\n    this._startPos = UnknownPosition;\n    this._endPos = UnknownPosition;\n  }\n\n  toString() {\n    let opcode = Symbol.keyFor(this._opcode).substring(2);\n    let sargs = [];\n    for (let arg of this._args) {\n      sargs.push(argToString(arg));\n    }\n    return '  ' + opcode + ' ' + sargs.join(', ');\n  }\n\n  get opcode() {\n    return this._opcode;\n  }\n\n  get args() {\n    return this._args;\n  }\n\n  set startPos(position) {\n    this._startPos = position;\n  }\n\n  get startPos() {\n    return this._startPos;\n  }\n\n  set endPos(position) {\n    this._endPos = position;\n  }\n\n  get endPos() {\n    return this._endPos;\n  }\n\n}\n\n/* Push a constant on the stack. */\n\nexport class IPushInteger extends Instruction {\n  constructor(number) {\n    super(I_PushInteger, [number]);\n  }\n\n  get number() {\n    return this._args[0];\n  }\n}\n\nexport class IPushString extends Instruction {\n  constructor(string) {\n    super(I_PushString, [string]);\n  }\n\n  get string() {\n    return this._args[0];\n  }\n}\n\n/* Push a local index/variable/parameter on the stack. */\nexport class IPushVariable extends Instruction {\n  constructor(variableName) {\n    super(I_PushVariable, [variableName]);\n  }\n\n  get variableName() {\n    return this._args[0];\n  }\n}\n\n/* Set a local index/variable/parameter to the value on the top of the stack. */\nexport class ISetVariable extends Instruction {\n  constructor(variableName) {\n    super(I_SetVariable, [variableName]);\n  }\n\n  get variableName() {\n    return this._args[0];\n  }\n}\n\n/* Unset a local index/variable/parameter.\n * This should be used to avoid the variable being used after the end\n * of its scope.\n *\n * E.g. \"i\" should have no value after the end of the foreach:\n *\n *   foreach i in [1,2,3] {\n *   }\n *   x := i\n */\nexport class IUnsetVariable extends Instruction {\n  constructor(variableName) {\n    super(I_UnsetVariable, [variableName]);\n  }\n\n  get variableName() {\n    return this._args[0];\n  }\n}\n\n/* Pseudo-instruction to mark the target of a jump. */\nexport class ILabel extends Instruction {\n  constructor(label) {\n    super(I_Label, [label]);\n  }\n\n  toString() {\n    return this.label + ':';\n  }\n\n  get label() {\n    return this._args[0];\n  }\n}\n\n/* Unconditional jump. */\nexport class IJump extends Instruction {\n  constructor(targetLabel) {\n    super(I_Jump, [targetLabel]);\n  }\n\n  get targetLabel() {\n    return this._args[0];\n  }\n}\n\n/* Jump if the top of the stack is False.\n * Pops the top of the stack. */\nexport class IJumpIfFalse extends Instruction {\n  constructor(targetLabel) {\n    super(I_JumpIfFalse, [targetLabel]);\n  }\n\n  get targetLabel() {\n    return this._args[0];\n  }\n}\n\n/* Jump if the top of the stack is a structure built using the given\n * constructor. Does NOT pop the top of the stack. */\nexport class IJumpIfStructure extends Instruction {\n  constructor(constructorName, targetLabel) {\n    super(I_JumpIfStructure, [constructorName, targetLabel]);\n  }\n\n  get constructorName() {\n    return this._args[0];\n  }\n\n  get targetLabel() {\n    return this._args[1];\n  }\n}\n\n/* Jump if the top of the stack is an n-tuple of the given size.\n * Does NOT pop the top of the stack. */\nexport class IJumpIfTuple extends Instruction {\n  constructor(size, targetLabel) {\n    super(I_JumpIfTuple, [size, targetLabel]);\n  }\n\n  get size() {\n    return this._args[0];\n  }\n\n  get targetLabel() {\n    return this._args[1];\n  }\n}\n\n/* Call a subroutine (procedure or function).\n * The arguments are expected to be located in the stack\n * with the last one at the top.\n *\n * The arguments are popped from the current frame and pushed\n * onto the new frame.\n */\nexport class ICall extends Instruction {\n  constructor(targetLabel, nargs) {\n    super(I_Call, [targetLabel, nargs]);\n  }\n\n  get targetLabel() {\n    return this._args[0];\n  }\n\n  get nargs() {\n    return this._args[1];\n  }\n}\n\n/* Return from a routine to the caller.\n * If returning a value (from a function or program),\n * it must be on the top of the stack. */\nexport class IReturn extends Instruction {\n  constructor() {\n    super(I_Return, []);\n  }\n}\n\n/* Make a tuple of the given size.\n * The components are expected to be located in the stack\n * with the last one at the top. */\nexport class IMakeTuple extends Instruction {\n  constructor(size) {\n    super(I_MakeTuple, [size]);\n  }\n\n  get size() {\n    return this._args[0];\n  }\n}\n\n/* Make a list of the given size.\n * The elements are expected to be located in the stack\n * with the last one at the top. */\nexport class IMakeList extends Instruction {\n  constructor(size) {\n    super(I_MakeList, [size]);\n  }\n\n  get size() {\n    return this._args[0];\n  }\n}\n\n/* Make a structure using the given constructor and the given fields.\n * The values of the fields are expected to be located in the stack\n * with the last one at the top. */\nexport class IMakeStructure extends Instruction {\n  constructor(typeName, constructorName, fieldNames) {\n    super(I_MakeStructure, [typeName, constructorName, fieldNames]);\n  }\n\n  get typeName() {\n    return this._args[0];\n  }\n\n  get constructorName() {\n    return this._args[1];\n  }\n\n  get fieldNames() {\n    return this._args[2];\n  }\n}\n\n/* Update a structure built using the given constructor with the given\n * fields.\n * The stack should have a structure built using the given constructor,\n * followed by the values of the fields that are expected.\n * The last field should be at the top. */\nexport class IUpdateStructure extends Instruction {\n  constructor(typeName, constructorName, fieldNames) {\n    super(I_UpdateStructure, [typeName, constructorName, fieldNames]);\n  }\n\n  get typeName() {\n    return this._args[0];\n  }\n\n  get constructorName() {\n    return this._args[1];\n  }\n\n  get fieldNames() {\n    return this._args[2];\n  }\n}\n\n/* Read the n-th component from the tuple at the top of the stack.\n * Does not pop the tuple. */\nexport class IReadTupleComponent extends Instruction {\n  constructor(index) {\n    super(I_ReadTupleComponent, [index]);\n  }\n\n  get index() {\n    return this._args[0];\n  }\n}\n\n/* Read the given field from the structure at the top of the stack.\n * Does not pop the structure. */\nexport class IReadStructureField extends Instruction {\n  constructor(fieldName) {\n    super(I_ReadStructureField, [fieldName]);\n  }\n\n  get fieldName() {\n    return this._args[0];\n  }\n}\n\n/* Read the given field from the structure at the top of the stack.\n * Pop the structure. */\nexport class IReadStructureFieldPop extends Instruction {\n  constructor(fieldName) {\n    super(I_ReadStructureFieldPop, [fieldName]);\n  }\n\n  get fieldName() {\n    return this._args[0];\n  }\n}\n\n/* Add the topmost elements of the stack (used mostly for testing/debugging) */\nexport class IAdd extends Instruction {\n  constructor() {\n    super(I_Add, []);\n  }\n}\n\n/* Duplicate the top of the stack (there should be at least one element) */\nexport class IDup extends Instruction {\n  constructor() {\n    super(I_Dup, []);\n  }\n}\n\n/* Pop the top of the stack (there should be at least one element) */\nexport class IPop extends Instruction {\n  constructor() {\n    super(I_Pop, []);\n  }\n}\n\n/* Call a primitive function.\n *\n * The arguments are expected to be located in the stack\n * with the last one at the top.\n *\n * Note: the compiler relies on various primitive functions.\n * For example, the operation to make a range is a primitive\n * function:\n *\n *   function _makeRange(start, end)\n *\n * So is the function that checks whether the top of the stack is a list,\n * etc. (required to compile a \"foreach\"), and so on.\n */\nexport class IPrimitiveCall extends Instruction {\n  constructor(primitiveName, nargs) {\n    super(I_PrimitiveCall, [primitiveName, nargs]);\n  }\n\n  get primitiveName() {\n    return this._args[0];\n  }\n\n  get nargs() {\n    return this._args[1];\n  }\n}\n\n/* Save the global state (when entering a function) */\nexport class ISaveState extends Instruction {\n  constructor() {\n    super(I_SaveState, []);\n  }\n}\n\n/* Restore the global state (when leaving a function) */\nexport class IRestoreState extends Instruction {\n  constructor() {\n    super(I_RestoreState, []);\n  }\n}\n\n/* Check that the top of the stack has the given type.\n * Does not pop the top of the stack. */\nexport class ITypeCheck extends Instruction {\n  constructor(type) {\n    super(I_TypeCheck, [type]);\n  }\n\n  get type() {\n    return this._args[0];\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/instruction.js","import { boolFromValue, RuntimeState } from './runtime.js';\nimport { Runner } from './runner.js';\nimport { i18n, i18nWithLanguage } from './i18n.js';\nimport {\n  apiboardFromJboard, apiboardToJboard,\n  gbbFromJboard, gbbToJboard,\n} from './board_formats.js';\nimport { ValueStructure } from './value.js';\nimport {\n  N_PatternWildcard, N_PatternStructure, N_PatternTuple, N_PatternTimeout\n} from './ast.js';\n\nconst DEFAULT_INFINITE_LOOP_TIMEOUT = 3000; /* millisecs */\nconst DEFAULT_LANGUAGE = 'es';\n\n/* load a board in the API format into a fresh RuntimeState */\nfunction apiboardToState(apiboard) {\n  let state = new RuntimeState();\n  state.load(apiboardToJboard(apiboard));\n  return state;\n}\n\n/* Dump a RuntimeState to a board in the API format */\nfunction apiboardFromState(state) {\n  return apiboardFromJboard(state.dump());\n}\n\n/* Backwards-compatible type/value with special cases for some types */\nfunction apivalueFromValue(value) {\n  const composedValue = (componentKind) => {\n    const elements = value[componentKind].map((it) => {\n      const apiValue = apivalueFromValue(it);\n      const value = apiValue && apiValue.value;\n\n      return value;\n    });\n\n    return {\n      type: value.type().toString(),\n      value: elements\n    };\n  };\n\n  if (value === null) {\n    return null;\n  }\n  if (value.isInteger()) {\n    return {\n      type: i18n('TYPE:Integer'),\n      value: value.asNumber()\n    };\n  } else if (value.isBoolean()) {\n    return {\n      type: i18n('TYPE:Bool'),\n      value: boolFromValue(value)\n    };\n  } else if (value.isString()) {\n    return {\n      type: i18n('TYPE:String'),\n      value: value.string\n    };\n  } else if (value.isTuple()) {\n    return composedValue('components');\n  } else if (value.isList()) {\n    return composedValue('elements');\n  } else if (value.isStructure()) {\n    return {\n      type: value.typeName,\n      value: value.toString()\n    };\n  } else {\n    return {\n      type: value.type().toString(),\n      value: value.toString()\n    };\n  }\n}\n\nclass GobstonesInterpreterError {\n\n  constructor(exception) {\n    this.message = exception.message;\n    this.reason = {\n      code: exception.reason,\n      detail: exception.args\n    };\n    this.on = {\n      range: {\n        start: {\n          row: exception.startPos.line,\n          column: exception.startPos.column\n        },\n        end: {\n          row: exception.endPos.line,\n          column: exception.endPos.column\n        },\n      },\n      region: exception.startPos.region\n    };\n  }\n\n}\n\nclass ParseError extends GobstonesInterpreterError {\n  constructor(exception) {\n    super(exception);\n  }\n}\n\nclass ExecutionError extends GobstonesInterpreterError {\n  constructor(exception, snapshots, regionStack) {\n    super(exception);\n\n    const isTimeout = this.reason.code === 'timeout';\n    this.snapshots = isTimeout\n      ? [snapshots[snapshots.length - 1]]\n      : snapshots;\n    this.on.regionStack = regionStack;\n  }\n}\n\nclass NormalExecutionResult {\n  constructor(finalBoard, snapshots, returnValue) {\n    this.finalBoard = finalBoard;\n    this.snapshots = snapshots;\n    this.returnValue = apivalueFromValue(returnValue);\n\n    /* Actual return value */\n    this.actualReturnValue = returnValue;\n  }\n}\n\nclass InteractiveExecutionResult {\n  constructor(state) {\n    this.keys = this._collectKeyNames(state);\n    this.timeout = this._timeoutValue(state);\n    this.onInit = this._onInitFunction(state);\n    this.onKey = this._onKeyFunction(state);\n    this.onTimeout = this._onTimeoutFunction(state);\n  }\n\n  _hasInit(state) {\n    for (let branch of state.runner.symbolTable.program.branches) {\n      let p = branch.pattern;\n      if (p.tag === N_PatternStructure &&\n          p.constructorName.value === i18n('CONS:INIT')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _hasTimeout(state) {\n    return this.timeout !== null;\n  }\n\n  _collectKeyNames(state) {\n    let keys = [];\n    for (let branch of state.runner.symbolTable.program.branches) {\n      let p = branch.pattern;\n      if (p.tag === N_PatternStructure &&\n          p.constructorName.value !== i18n('CONS:INIT')) {\n        keys.push(p.constructorName.value);\n      }\n    }\n    return keys;\n  }\n\n  _timeoutValue(state) {\n    for (let branch of state.runner.symbolTable.program.branches) {\n      if (branch.pattern.tag === N_PatternTimeout) {\n        return branch.pattern.timeout;\n      }\n    }\n    return null;\n  }\n\n  /* Return a function that, when called, continues running\n   * the interactive program feeding it with the INIT event.\n   *\n   * If the interactive program does not have an entry for the\n   * INIT event, the returned function has no effect.\n   */\n  _onInitFunction(state) {\n    if (this._hasInit(state)) {\n      let self = this;\n      return function () {\n        return i18nWithLanguage(state.language, () => {\n          return self._onEvent(\n            state,\n            new ValueStructure(i18n('TYPE:Event'), i18n('CONS:INIT'))\n          );\n        });\n      };\n    } else {\n      return function () {\n        return i18nWithLanguage(state.language, () => {\n          return apiboardFromState(state.runner.globalState);\n        });\n      };\n    }\n  }\n\n  /* Return a function that, when called, continues running\n   * the interactive program feeding it with the TIMEOUT event.\n   *\n   * If the interactive program does not have an entry for the\n   * TIMEOUT event, the returned function has no effect.\n   */\n  _onTimeoutFunction(state) {\n    if (this._hasTimeout(state)) {\n      let self = this;\n      return function () {\n        return i18nWithLanguage(state.language, () => {\n          return self._onEvent(\n            state,\n            new ValueStructure(i18n('TYPE:Event'), i18n('CONS:TIMEOUT'))\n          );\n        });\n      };\n    } else {\n      return function () {\n        return i18nWithLanguage(state.language, () => {\n          return apiboardFromState(state.runner.globalState);\n        });\n      };\n    }\n  }\n\n  /* Return a function that, when called with a key code, continues running\n   * the interactive program feeding it with the given key event.\n   *\n   * If the interactive program does not have an entry for the given\n   * key, this results in a runtime error.\n   */\n  _onKeyFunction(state) {\n    let self = this;\n    return function (keyCode) {\n      return i18nWithLanguage(state.language, () => {\n        return self._onEvent(\n          state,\n          new ValueStructure(i18n('TYPE:Event'), keyCode)\n        );\n      });\n    };\n  }\n\n  /* Continue running the interactive program feeding it with the given\n   * eventValue.\n   * On success, return a Board.\n   * On failure, return an ExecutionError. */\n  _onEvent(state, eventValue) {\n    return i18nWithLanguage(state.language, () => {\n      try {\n        state.runner.executeEventWithTimeout(\n          eventValue,\n          state.infiniteLoopTimeout\n        );\n        return apiboardFromState(state.runner.globalState);\n      } catch (exception) {\n        if (exception.isGobstonesException === undefined) {\n          throw exception;\n        }\n        return new ExecutionError(\n                 exception,\n                 [],\n                 state.runner.regionStack()\n               );\n      }\n    });\n  }\n\n}\n\nclass SnapshotTaker {\n\n  constructor(runner) {\n    this._runner = runner;\n    this._snapshots = [];\n  }\n\n  takeSnapshot(routineName, position, callStack, globalState) {\n    if (this._shouldTakeSnapshot(routineName, callStack)) {\n      this._snapshots.push(\n        this._snapshot(routineName, position, callStack, globalState)\n      );\n    }\n  }\n\n  snapshots() {\n    return this._snapshots;\n  }\n\n  _snapshot(routineName, position, callStack, globalState) {\n    let snapshot = {};\n    snapshot.contextNames = [];\n    for (let stackFrame of callStack) {\n      let name = stackFrame.routineName;\n      if (name !== 'program') {\n        name = name + '-' + stackFrame.uniqueFrameId.toString();\n      }\n      snapshot.contextNames.push(name);\n    }\n    snapshot.board = apiboardFromState(globalState);\n    snapshot.region = position.region;\n    snapshot.regionStack = this._runner.regionStack();\n    return snapshot;\n  }\n\n  _shouldTakeSnapshot(routineName, callStack) {\n    let routineNameStack = [];\n    for (let stackFrame of callStack) {\n      routineNameStack.push(stackFrame.routineName);\n    }\n\n    if (this._runner.primitives.isProcedure(routineName)) {\n      /* A primitive procedure must be recorded if there are no\n       * atomic routines anywhere in the call stack. */\n      return this._noAtomicRoutines(routineNameStack);\n    } else {\n      /* Other routines must be recorded if they have the 'recorded'\n       * attribute, and, moreover, there are no atomic routines other\n       * than the last one in the call stack. */\n      routineNameStack.pop();\n      return this._isRecorded(routineName)\n          && this._noAtomicRoutines(routineNameStack);\n    }\n  }\n\n  _noAtomicRoutines(routineNameStack) {\n    for (let routineName of routineNameStack) {\n      if (this._isAtomic(routineName)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  _isAtomic(routineName) {\n    if (routineName === 'program') {\n      return false;\n    } else if (this._runner.primitives.isProcedure(routineName)) {\n      /* Primitive procedure */\n      return false;\n    } else if (this._runner.symbolTable.isProcedure(routineName)) {\n      /* User-defined procedure */\n      return false;\n    } else {\n      /* Function */\n      return true;\n    }\n  }\n\n  _isRecorded(routineName) {\n    if (routineName === 'program') {\n      return true;\n    } else if (this._runner.primitives.isProcedure(routineName)) {\n      /* Primitive procedure */\n      return true;\n    } else if (this._runner.symbolTable.isProcedure(routineName)) {\n      /* User-defined procedure */\n      return false;\n    } else {\n      /* Function */\n      return false;\n    }\n  }\n\n}\n\nclass ParseResult {\n\n  constructor(state) {\n    if (state.runner.symbolTable.program === null) {\n      this.program = null;\n    } else if (state.runner.symbolTable.isInteractiveProgram()) {\n      this.program = this._resultForInteractiveProgram(state);\n    } else {\n      this.program = this._resultForProgram(state);\n    }\n    this.declarations = this._collectDeclarations(state.runner);\n    this.getAttributes = function (globalName) {\n      return state.runner.symbolTable.getAttributes(globalName);\n    };\n  }\n\n  _resultForProgram(state) {\n    let program = {};\n    program.alias = 'program';\n    program.interpret = function (board) {\n      let snapshotTaker = new SnapshotTaker(state.runner);\n\n      return i18nWithLanguage(state.language, () => {\n        try {\n          state.runner.compile();\n          state.runner.executeWithTimeoutTakingSnapshots(\n            apiboardToState(board),\n            state.infiniteLoopTimeout,\n            snapshotTaker.takeSnapshot.bind(snapshotTaker)\n          );\n\n          let finalBoard = apiboardFromState(state.runner.globalState);\n          let returnValue = state.runner.result;\n          return new NormalExecutionResult(\n            finalBoard,\n            snapshotTaker.snapshots(),\n            returnValue,\n          );\n        } catch (exception) {\n          if (exception.isGobstonesException === undefined) {\n            throw exception;\n          }\n\n          return new ExecutionError(\n                   exception,\n                   snapshotTaker.snapshots(),\n                   state.runner.regionStack()\n                 );\n        }\n      });\n    };\n    return program;\n  }\n\n  _resultForInteractiveProgram(state) {\n    let program = {};\n    program.alias = 'interactiveProgram';\n    program.interpret = function (board) {\n      return i18nWithLanguage(state.language, () => {\n        try {\n          state.runner.compile();\n          state.runner.initializeVirtualMachine(apiboardToState(board));\n          return new InteractiveExecutionResult(state);\n        } catch (exception) {\n          if (exception.isGobstonesException === undefined) {\n            throw exception;\n          }\n          return new ExecutionError(\n                   exception,\n                   [],\n                   state.runner.regionStack()\n                 );\n        }\n      });\n    };\n    return program;\n  }\n\n  _collectDeclarations(runner) {\n    let declarations = [];\n    for (let name of runner.symbolTable.allProcedureNames()) {\n      if (runner.primitives.isProcedure(name)) {\n        continue; /* Skip primitive procedures */\n      }\n      declarations.push({\n        alias: 'procedureDeclaration',\n        name: name\n      });\n    }\n    for (let name of runner.symbolTable.allFunctionNames()) {\n      if (runner.primitives.isFunction(name)) {\n        continue; /* Skip primitive functions */\n      }\n      declarations.push({\n        alias: 'functionDeclaration',\n        name: name\n      });\n    }\n    return declarations;\n  }\n\n}\n\nexport class GobstonesInterpreterAPI {\n\n  constructor() {\n    /* Internal state of the interpreter */\n    let state = {\n      infiniteLoopTimeout: DEFAULT_INFINITE_LOOP_TIMEOUT,\n      language: DEFAULT_LANGUAGE,\n      runner: new Runner(),\n    };\n\n    this.config = {\n      setLanguage: function (code) {\n        state.language = code;\n      },\n      setInfiniteLoopTimeout: function (milliseconds) {\n        state.infiniteLoopTimeout = milliseconds;\n      },\n      setXGobstonesEnabled: function (isEnabled) {\n        /* TODO */\n      },\n    };\n\n    this.gbb = {\n      /* Convert a string representing a board in GBB format\n       * to a board in the \"API\" format. */\n      read: function (gbb) {\n        return apiboardFromJboard(gbbToJboard(gbb));\n      },\n      /* Convert a board in the \"API\" format to a string representing\n       * a board in GBB format. */\n      write: function (apiboard) {\n        return gbbFromJboard(apiboardToJboard(apiboard));\n      },\n    };\n\n    this.getAst = function (sourceCode) {\n      return this._withState(sourceCode, false, (state) =>\n        state.runner.abstractSyntaxTree.toMulangLike()\n      );\n    };\n\n    this.parse = function (sourceCode) {\n      return this._withState(sourceCode, true, (state) =>\n        new ParseResult(state)\n      );\n    };\n\n    this._withState = function (sourceCode, useLinter, action) {\n      return i18nWithLanguage(state.language, () => {\n        try {\n          state.runner.initialize();\n          state.runner.parse(sourceCode);\n          /* Disable checking whether there is a main 'program' present. */\n          state.runner.enableLintCheck(\n            'source-should-have-a-program-definition', false\n          );\n          if (useLinter) state.runner.lint();\n          return action(state);\n        } catch (exception) {\n          if (exception.isGobstonesException === undefined) {\n            throw exception;\n          }\n          return new ParseError(exception);\n        }\n      });\n    };\n\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","\nimport { LOCALE_ES } from './es';\n\nexport const LOCALE_EN = {};\n\nfor (let key in LOCALE_ES) {\n  LOCALE_EN[key] = LOCALE_ES[key];\n}\n\nLOCALE_EN['TYPE:Color'] = 'Color';\nLOCALE_EN['CONS:Color0'] = 'Blue';\nLOCALE_EN['CONS:Color1'] = 'Black';\nLOCALE_EN['CONS:Color2'] = 'Red';\nLOCALE_EN['CONS:Color3'] = 'Green';\n\nLOCALE_EN['TYPE:Dir'] = 'Dir';\nLOCALE_EN['CONS:Dir0'] = 'North';\nLOCALE_EN['CONS:Dir1'] = 'East';\nLOCALE_EN['CONS:Dir2'] = 'South';\nLOCALE_EN['CONS:Dir3'] = 'West';\n\nLOCALE_EN['PRIM:PutStone'] = 'PutStone';\nLOCALE_EN['PRIM:RemoveStone'] = 'RemoveStone';\nLOCALE_EN['PRIM:Move'] = 'Move';\nLOCALE_EN['PRIM:GoToEdge'] = 'GoToEdge';\nLOCALE_EN['PRIM:EmptyBoardContents'] = 'EmptyBoardContents';\nLOCALE_EN['PRIM:numStones'] = 'numStones';\nLOCALE_EN['PRIM:anyStones'] = 'anyStones';\nLOCALE_EN['PRIM:canMove'] = 'canMove';\nLOCALE_EN['PRIM:next'] = 'next';\nLOCALE_EN['PRIM:prev'] = 'prev';\nLOCALE_EN['PRIM:opposite'] = 'opposite';\nLOCALE_EN['PRIM:minBool'] = 'minBool';\nLOCALE_EN['PRIM:maxBool'] = 'maxBool';\nLOCALE_EN['PRIM:minColor'] = 'minColor';\nLOCALE_EN['PRIM:maxColor'] = 'maxColor';\nLOCALE_EN['PRIM:minDir'] = 'minDir';\nLOCALE_EN['PRIM:maxDir'] = 'maxDir';\n\nLOCALE_EN['PRIM:head'] = 'head';\nLOCALE_EN['PRIM:tail'] = 'tail';\nLOCALE_EN['PRIM:init'] = 'init';\nLOCALE_EN['PRIM:last'] = 'last';\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/i18n/en.js","\nimport { LOCALE_ES } from './es';\n\nfunction keyword(palabra) {\n  return '‘a palavra chave \"' + palabra + '\"';\n}\n\nfunction pluralize(n, singular, plural) {\n  if (n === 0) {\n    return 'nenhum ' + singular;\n  } else if (n === 1) {\n    return 'um ' + singular;\n  } else {\n    return n.toString() + ' ' + plural;\n  }\n}\n\nexport const LOCALE_PT = {};\n\nfor (let key in LOCALE_ES) {\n  LOCALE_PT[key] = LOCALE_ES[key];\n}\n\n/* Descriptions of syntactic constructions and tokens */\nLOCALE_PT['definition'] =\n  'uma definição (de programa, função, procedimento, ou tipo)';\nLOCALE_PT['pattern'] =\n  'um padrão (comodín \"_\", construtor aplicado a variáveis, ou tupla)';\nLOCALE_PT['statement'] = 'um comando';\nLOCALE_PT['expression'] = 'uma expressão';\nLOCALE_PT['procedure call'] = 'uma invocação a um procedimento';\nLOCALE_PT['field name'] = 'o nome de um campo';\nLOCALE_PT['T_EOF'] = 'o fim do arquivo';\nLOCALE_PT['T_NUM'] = 'um número';\nLOCALE_PT['T_STRING'] = 'uma corrente (string)';\nLOCALE_PT['T_UPPERID'] = 'um identificador com maiúsculas';\nLOCALE_PT['T_LOWERID'] = 'um identificador com minúsculas';\nLOCALE_PT['T_PROGRAM'] = keyword('program');\nLOCALE_PT['T_INTERACTIVE'] = keyword('interactive');\nLOCALE_PT['T_PROCEDURE'] = keyword('procedure');\nLOCALE_PT['T_FUNCTION'] = keyword('function');\nLOCALE_PT['T_RETURN'] = keyword('return');\nLOCALE_PT['T_IF'] = keyword('if');\nLOCALE_PT['T_THEN'] = keyword('then');\nLOCALE_PT['T_ELSE'] = keyword('else');\nLOCALE_PT['T_REPEAT'] = keyword('repeat');\nLOCALE_PT['T_FOREACH'] = keyword('foreach');\nLOCALE_PT['T_IN'] = keyword('in');\nLOCALE_PT['T_WHILE'] = keyword('while');\nLOCALE_PT['T_SWITCH'] = keyword('switch');\nLOCALE_PT['T_TO'] = keyword('to');\nLOCALE_PT['T_LET'] = keyword('let');\nLOCALE_PT['T_NOT'] = keyword('not');\nLOCALE_PT['T_DIV'] = keyword('div');\nLOCALE_PT['T_MOD'] = keyword('mod');\nLOCALE_PT['T_TYPE'] = keyword('type');\nLOCALE_PT['T_IS'] = keyword('is');\nLOCALE_PT['T_RECORD'] = keyword('record');\nLOCALE_PT['T_VARIANT'] = keyword('variant');\nLOCALE_PT['T_CASE'] = keyword('case');\nLOCALE_PT['T_FIELD'] = keyword('field');\nLOCALE_PT['T_UNDERSCORE'] = 'um sublinhado (\"_\")';\nLOCALE_PT['T_LPAREN'] = 'um parênteses esquerdo (\"(\")';\nLOCALE_PT['T_RPAREN'] = 'um parênteses direito (\")\")';\nLOCALE_PT['T_LBRACE'] = 'uma chave esquerda (\"{\")';\nLOCALE_PT['T_RBRACE'] = 'uma chave direita (\"}\")';\nLOCALE_PT['T_LBRACK'] = 'um colchete esquerdo (\"[\")';\nLOCALE_PT['T_RBRACK'] = 'um colchete direito (\"]\")';\nLOCALE_PT['T_COMMA'] = 'uma vírgula  (\",\")';\nLOCALE_PT['T_SEMICOLON'] = 'um ponto e vírgula (\";\")';\nLOCALE_PT['T_RANGE'] = 'um separador de intervalo (\"..\")';\nLOCALE_PT['T_GETS'] = 'uma flecha para a esquerda (\"<-\")';\nLOCALE_PT['T_PIPE'] = 'uma barra vertical (\"|\")';\nLOCALE_PT['T_ARROW'] = 'uma flecha (\"->\")';\nLOCALE_PT['T_ASSIGN'] = 'um operador de designação  (\":=\")';\nLOCALE_PT['T_EQ'] = 'uma comparação por igualdade (\"==\")';\nLOCALE_PT['T_NE'] = 'uma comparação por desigualdade (\"/=\")';\nLOCALE_PT['T_LE'] = 'um menor ou igual (\"<=\")';\nLOCALE_PT['T_GE'] = 'um maior ou igual (\">=\")';\nLOCALE_PT['T_LT'] = 'um menor estrito (\"<\")';\nLOCALE_PT['T_GT'] = 'um maior estrito (\">\")';\nLOCALE_PT['T_AND'] = 'o \"e\" lógico (\"&&\")';\nLOCALE_PT['T_OR'] = 'o \"ou\" lógico (\"||\")';\nLOCALE_PT['T_CONCAT'] = 'o operador de concatenação de listas (\"++\")';\nLOCALE_PT['T_PLUS'] = 'o operador de soma (\"+\")';\nLOCALE_PT['T_MINUS'] = 'o operador de diferença (\"-\")';\nLOCALE_PT['T_TIMES'] = 'o operador de produto (\"*\")';\nLOCALE_PT['T_POW'] = 'o operador de potência (\"^\")';\n\n/* Local name categories */\nLOCALE_PT['LocalVariable'] = 'variável';\nLOCALE_PT['LocalIndex'] = 'índice';\nLOCALE_PT['LocalParameter'] = 'parâmetro';\n\n/* Descriptions of value types */\nLOCALE_PT['V_Integer'] = 'um número';\nLOCALE_PT['V_String'] = 'uma cadeia';\nLOCALE_PT['V_Tuple'] = 'uma tupla';\nLOCALE_PT['V_List'] = 'uma lista';\nLOCALE_PT['V_Structure'] = 'uma estrutura';\n\n/* Lexer */\nLOCALE_PT['errmsg:unclosed-multiline-comment'] =\n  'O comentário abre mas nunca fecha.';\n\nLOCALE_PT['errmsg:unclosed-string-constant'] =\n    'As aspas que abrem não possuem as aspas correspondentes que fecham.';\n\nLOCALE_PT['errmsg:numeric-constant-should-not-have-leading-zeroes'] =\n    'As constantes numéricas não podem ser escritas com zeros à '\n   + 'esquerda.';\n\nLOCALE_PT['errmsg:identifier-must-start-with-alphabetic-character'] =\n    'Os identificadores devem começar com um caractere alfabético '\n   + '(a...z,A...Z).';\n\nLOCALE_PT['errmsg:unknown-token'] =\n    function (symbol) {\n      return 'Símbolo desconhecido na entrada: \"' + symbol + '\".';\n    };\n\nLOCALE_PT['warning:empty-pragma'] =\n    'Diretiva pragma vazia.';\n\nLOCALE_PT['warning:unknown-pragma'] =\n    function (pragmaName) {\n      return 'Diretiva pragma desconhecida: \"' + pragmaName + '\".';\n    };\n\n/* Parser */\nLOCALE_PT['errmsg:empty-source'] =\n    'O programa está vazio.';\n\nLOCALE_PT['errmsg:expected-but-found'] =\n    function (expected, found) {\n      return 'Esperava-se ' + expected + '.\\n'\n           + 'Encontrado: ' + found + '.';\n    };\n\nLOCALE_PT['errmsg:pattern-number-cannot-be-negative-zero'] =\n    'O padrão numérico não pode ser \"-0\".';\n\nLOCALE_PT['errmsg:pattern-tuple-cannot-be-singleton'] =\n    'O padrão para uma tupla não pode ter apenas um componente. '\n  + 'As tuplas têm 0, 2, 3, ou mais componentes, mas não 1.';\n\nLOCALE_PT['errmsg:assignment-tuple-cannot-be-singleton'] =\n    'A designação a uma tupla não pode ser '\n  + ' constituída por apenas um componente. '\n  + 'As tuplas têm 0, 2, 3, ou mais componentes, mas não 1.';\n\nLOCALE_PT['errmsg:operators-are-not-associative'] =\n    function (op1, op2) {\n      return 'A expressão usa '\n           + op1 + ' e ' + op2\n           + ', mas estes operadores não podem ser associados. '\n           + 'Talvez faltam parênteses.';\n    };\n\nLOCALE_PT['errmsg:obsolete-tuple-assignment'] =\n    'Esperava-se um comando mas não foi encontrado um parênteses esquerdo. '\n  + 'Nota: a sintaxe de designação de tuplas \"(x1, ..., xN) := y\" '\n  + 'está obsoleta. Usar \"let (x1, ..., xN) := y\".';\n\n/* Linter */\nLOCALE_PT['errmsg:program-already-defined'] =\n    function (pos1, pos2) {\n      return 'Já havia um programa definido em ' + pos1 + '.\\n'\n           + 'Não é possível definir um programa em ' + pos2 + '.';\n    };\n\nLOCALE_PT['errmsg:procedure-already-defined'] =\n    function (name, pos1, pos2) {\n      return 'O procedimiento \"' + name + '\" está definido duas vezes: '\n           + 'em ' + pos1 + ' e em ' + pos2 + '.';\n    };\n\nLOCALE_PT['errmsg:function-already-defined'] =\n    function (name, pos1, pos2) {\n      return 'A função \"' + name + '\" está definida duas vezes: '\n           + 'em ' + pos1 + ' e em ' + pos2 + '.';\n    };\n\nLOCALE_PT['errmsg:type-already-defined'] =\n    function (name, pos1, pos2) {\n      return 'O tipo \"' + name + '\" está definido duas vezes: '\n           + 'em ' + pos1 + ' e em ' + pos2 + '.';\n    };\n\nLOCALE_PT['errmsg:constructor-already-defined'] =\n    function (name, pos1, pos2) {\n      return 'O construtor \"' + name + '\" está definido duas vezes: '\n           + 'em ' + pos1 + ' e em ' + pos2 + '.';\n    };\n\nLOCALE_PT['errmsg:repeated-field-name'] =\n    function (constructorName, fieldName) {\n      return 'O campo \"' + fieldName + '\" não pode estar repetido '\n           + 'para o construtor \"' + constructorName + '\".';\n    };\n\nLOCALE_PT['errmsg:function-and-field-cannot-have-the-same-name'] =\n    function (name, posFunction, posField) {\n      return 'O nome \"' + name + '\" usa-se '\n           + 'para uma função em ' + posFunction + ' e '\n           + 'para um campo em ' + posField + '.';\n    };\n\nLOCALE_PT['errmsg:source-should-have-a-program-definition'] =\n    /* Note: the code may actually be completely empty, but\n     * we avoid this technicality since the message could be\n     * confusing. */\n    'O código deve ter uma definição de \"program { ... }\".';\n\nLOCALE_PT['errmsg:procedure-should-not-have-return'] =\n    function (name) {\n      return 'O procedimento \"' + name + '\" '\n           + 'não deveria ter um comando \"return\".';\n    };\n\nLOCALE_PT['errmsg:function-should-have-return'] =\n    function (name) {\n      return 'A função \"' + name + '\" deveria ter um comando \"return\".';\n    };\n\nLOCALE_PT['errmsg:return-statement-not-allowed-here'] =\n    'O comando \"return\"  pode aparecer apenas como o último comando '\n  + 'de uma função ou como o último comando do programa.';\n\nLOCALE_PT['errmsg:local-name-conflict'] =\n    function (name, oldCat, oldPos, newCat, newPos) {\n      return 'Conflito de nomes: \"' + name + '\" se usa duas vezes: '\n           + 'como ' + oldCat + ' em ' + oldPos + ', e '\n           + 'como ' + newCat + ' em ' + newPos + '.';\n    };\n\nLOCALE_PT['errmsg:repeated-variable-in-tuple-assignment'] =\n    function (name) {\n      return 'La variável \"' + name + '\" está repetida na designação '\n           + 'de tuplas.';\n    };\n\nLOCALE_PT['errmsg:constructor-used-as-procedure'] =\n    function (name, type) {\n      return 'O procedimento \"' + name + '\" não está definido. '\n           + 'O nome \"' + name + '\" é o nome de um construtor '\n           + 'do tipo \"' + type + '\".';\n    };\n\nLOCALE_PT['errmsg:undefined-procedure'] =\n    function (name) {\n      return 'O procedimento \"' + name + '\" não está definido.';\n    };\n\nLOCALE_PT['errmsg:undefined-function'] =\n    function (name) {\n      return 'A função \"' + name + '\" não está definida.';\n    };\n\nLOCALE_PT['errmsg:procedure-arity-mismatch'] =\n    function (name, expected, received) {\n      return 'O procedimento \"' + name + '\" espera receber '\n           + LOCALE_ES['<n>-parameters'](expected)\n           + ' mas é invocado com '\n           + LOCALE_ES['<n>-arguments'](received) + '.';\n    };\n\nLOCALE_PT['errmsg:function-arity-mismatch'] =\n    function (name, expected, received) {\n      return 'A função \"' + name + '\" espera receber '\n           + LOCALE_ES['<n>-parameters'](expected)\n           + ' mas é invocado com '\n           + LOCALE_ES['<n>-arguments'](received) + '.';\n    };\n\nLOCALE_PT['errmsg:structure-pattern-arity-mismatch'] =\n    function (name, expected, received) {\n      return 'O construtor \"' + name + '\" tem '\n           + LOCALE_ES['<n>-fields'](expected)\n           + ' mas o padrão tem '\n           + LOCALE_ES['<n>-parameters'](received) + '.';\n    };\n\nLOCALE_PT['errmsg:type-used-as-constructor'] =\n    function (name, constructorNames) {\n      let msg;\n      if (constructorNames.length === 0) {\n        msg = '(não tem construtores).';\n      } else if (constructorNames.length === 1) {\n        msg = '(tem um construtor: ' + constructorNames[0] + ').';\n      } else {\n        msg = '(seus construtores são: '\n            + constructorNames.join(', ') + ').';\n      }\n      return 'O construtor \"' + name + '\" não está definido. '\n           + 'O nome \"' + name + '\" é o nome de um tipo '\n           + msg;\n    };\n\nLOCALE_PT['errmsg:procedure-used-as-constructor'] =\n    function (name) {\n      return 'O construtor \"' + name + '\" não está definido. '\n           + 'O nome \"' + name + '\" é o nome de um procedimento.';\n    };\n\nLOCALE_PT['errmsg:undeclared-constructor'] =\n    function (name) {\n      return 'O construtor \"' + name + '\" não está definido.';\n    };\n\nLOCALE_PT['errmsg:wildcard-pattern-should-be-last'] =\n    'O comodín \"_\" tem que ser o último ramo do switch.';\n\nLOCALE_PT['errmsg:numeric-pattern-repeats-number'] =\n    function (number) {\n      return 'Tem dois ramos diferentes para o número \"' + number + '\".';\n    };\n\nLOCALE_PT['errmsg:structure-pattern-repeats-constructor'] =\n    function (name) {\n      return 'Há dois ramos distintos para o construtor \"' + name + '\".';\n    };\n\nLOCALE_PT['errmsg:structure-pattern-repeats-tuple-arity'] =\n    function (arity) {\n      return 'Há dois ramos distintos para as tuplas de ' + arity.toString()\n           + ' componentes.';\n    };\n\nLOCALE_PT['errmsg:structure-pattern-repeats-timeout'] =\n    'Há dois ramos distintos para o TIMEOUT.';\n\nLOCALE_PT['errmsg:pattern-does-not-match-type'] =\n    function (expectedType, patternType) {\n      return 'Os padrões devem ser todos do mesmo tipo. '\n           + 'O padrão deveria ser de tipo \"' + expectedType + '\" '\n           + 'pero es de tipo \"' + patternType + '\".';\n    };\n\nLOCALE_PT['errmsg:patterns-in-interactive-program-must-be-events'] =\n    'Os padrões de um \"interactive program\" devem ser eventos.';\n\nLOCALE_PT['errmsg:patterns-in-switch-must-not-be-events'] =\n    'Os padrões de um \"switch\" não podem ser eventos.';\n\nLOCALE_PT['errmsg:structure-construction-repeated-field'] =\n    function (constructorName, fieldName) {\n      return 'O campo \"' + fieldName + '\" está repetido em '\n           + 'a instanciação do construtor \"' + constructorName + '\".';\n    };\n\nLOCALE_PT['errmsg:structure-construction-invalid-field'] =\n    function (constructorName, fieldName) {\n      return 'O campo \"' + fieldName + '\" não é um campo válido '\n           + 'para o construtor \"' + constructorName + '\".';\n    };\n\nLOCALE_PT['errmsg:structure-construction-missing-field'] =\n    function (constructorName, fieldName) {\n      return 'Falta dar valor ao campo \"' + fieldName + '\" '\n           + 'do construtor \"' + constructorName + '\".';\n    };\n\nLOCALE_PT['errmsg:structure-construction-cannot-be-an-event'] =\n    function (constructorName) {\n      return 'O construtor \"' + constructorName + '\" corresponde a um '\n           + 'evento, e só pode ser administrado implicitamente '\n           + 'em um programa interativo (o usuário não pode construir '\n           + 'instâncias).';\n    };\n\n/* Runtime errors (virtual machine) */\nLOCALE_PT['errmsg:undefined-variable'] =\n    function (variableName) {\n      return 'A variável \"' + variableName + '\" não está definida.';\n    };\n\nLOCALE_PT['errmsg:too-few-arguments'] =\n    function (routineName) {\n      return 'Faltam argumentos para \"' + routineName + '\".';\n    };\n\nLOCALE_PT['errmsg:expected-structure-but-got'] =\n    function (constructorName, valueTag) {\n      return 'Esperava-se uma estrutura construída '\n           + 'com o construtor \"' + constructorName + '\", '\n           + 'mas foi recebido ' + valueTag + '.';\n    };\n\nLOCALE_PT['errmsg:expected-constructor-but-got'] =\n    function (constructorNameExpected, constructorNameReceived) {\n      return 'Esperava-se uma estrutura construída '\n           + 'com o construtor \"'\n           + constructorNameExpected + '\", '\n           + 'mas o construtor recebido é '\n           + constructorNameReceived + '\".';\n    };\n\nLOCALE_PT['errmsg:incompatible-types-on-assignment'] =\n    function (variableName, oldType, newType) {\n      return 'A variável \"' + variableName + '\" '\n           + 'continha un valor do tipo ' + oldType + ', '\n           + 'não é possível designar um valor de tipo ' + newType + '\".';\n    };\n\nLOCALE_PT['errmsg:incompatible-types-on-list-creation'] =\n    function (index, oldType, newType) {\n      return 'Todos os elementos de uma lista devem ser do mesmo tipo. '\n           + 'Os elementos são do tipo ' + oldType + ', '\n           + 'mas o elemento na posição ' + index.toString() + ' '\n           + 'é do tipo ' + newType + '.';\n    };\n\nLOCALE_PT['errmsg:incompatible-types-on-structure-update'] =\n    function (fieldName, oldType, newType) {\n      return 'O campo \"' + fieldName + '\" é do tipo ' + oldType + '. '\n           + 'Não pode ser atualizado com um valor do tipo ' + newType + '.';\n\n    };\n\nLOCALE_PT['errmsg:expected-tuple-value-but-got'] =\n    function (receivedType) {\n      return 'Esperava-se uma tupla mas um valor não foi recebido '\n           + 'de tipo ' + receivedType + '.';\n    };\n\nLOCALE_PT['errmsg:tuple-component-out-of-bounds'] =\n    function (size, index) {\n      return 'Índice fora do intervalo. '\n           + 'A tupla é do tamanho ' + size.toString() + ' e '\n           + 'o índice é ' + index.toString() + '.';\n    };\n\nLOCALE_PT['errmsg:expected-structure-value-but-got'] =\n    function (receivedType) {\n      return 'Se esperaba una estructura pero se recibió un valor '\n           + 'de tipo ' + receivedType + '.';\n    };\n\nLOCALE_PT['errmsg:structure-field-not-present'] =\n    function (fieldNames, missingFieldName) {\n      return 'A estrutura não possui um campo \"' + missingFieldName + '\". '\n           + 'Os campos são: [' + fieldNames.join(', ') + '].';\n    };\n\nLOCALE_PT['errmsg:primitive-does-not-exist'] =\n    function (primitiveName) {\n      return 'A operação primitiva \"' + primitiveName + '\" '\n           + 'não existe ou não está disponível.';\n    };\n\nLOCALE_PT['errmsg:primitive-arity-mismatch'] =\n    function (name, expected, received) {\n      return 'A operação \"' + name + '\" espera receber '\n           + LOCALE_ES['<n>-parameters'](expected)\n           + ' mas é invocada com '\n           + LOCALE_ES['<n>-arguments'](received) + '.';\n    };\n\nLOCALE_PT['errmsg:primitive-argument-type-mismatch'] =\n    function (name, parameterIndex, expectedType, receivedType) {\n      return 'O parâmetro #' + parameterIndex.toString() + ' '\n           + 'da operação \"' + name + '\" '\n           + 'deveria ser do tipo ' + expectedType + ' '\n           + 'mas o argumento é do tipo ' + receivedType + '.';\n    };\n\nLOCALE_PT['errmsg:expected-value-of-type-but-got'] =\n    function (expectedType, receivedType) {\n      return 'Esperava-se um valor do tipo ' + expectedType + ' '\n           + 'mas foi recebido um valor do tipo ' + receivedType + '.';\n    };\n\nLOCALE_PT['errmsg:expected-value-of-some-type-but-got'] =\n    function (expectedTypes, receivedType) {\n      return 'Esperava-se um valor de algum dos seguintes tipos: '\n           + expectedTypes.join(', ')\n           + '; mas foi recebido um valor do tipo ' + receivedType + '.';\n    };\n\nLOCALE_PT['errmsg:expected-values-to-have-compatible-types'] =\n    function (type1, type2) {\n      return 'Os tipos dos valores devem ser compatíveis, '\n           + 'mas um é do tipo ' + type1 + ' '\n           + 'e o outro é do tipo ' + type2 + '.';\n    };\n\nLOCALE_PT['errmsg:switch-does-not-match'] =\n    'O valor analisado não coincide com nenhum dos ramos do switch.';\n\nLOCALE_PT['errmsg:cannot-divide-by-zero'] =\n    'Não é possível dividir por zero.';\n\nLOCALE_PT['errmsg:list-cannot-be-empty'] =\n    'A lista não pode ser vazia.';\n\nLOCALE_PT['errmsg:timeout'] =\n    function (millisecs) {\n      return 'A execução do programa demorou mais de '\n           + millisecs.toString() + 'ms.';\n    };\n\n/* Board operations */\nLOCALE_PT['errmsg:cannot-move-to'] =\n    function (dirName) {\n      return 'Não é possível mover para a direção ' + dirName +\n             ': cai fora do tabuleiro.';\n    };\n\nLOCALE_PT['errmsg:cannot-remove-stone'] =\n    function (dirName) {\n      return 'Não é posível retirar uma pedra de cor ' + dirName +\n             ': não há pedras dessa cor.';\n    };\n\n/* Runtime */\n\nLOCALE_PT['TYPE:Color'] = 'Cor';\nLOCALE_PT['CONS:Color0'] = 'Azul';\nLOCALE_PT['CONS:Color1'] = 'Preto';\nLOCALE_PT['CONS:Color2'] = 'Vermelho';\nLOCALE_PT['CONS:Color3'] = 'Verde';\n\nLOCALE_PT['TYPE:Dir'] = 'Dir';\nLOCALE_PT['CONS:Dir0'] = 'Norte';\nLOCALE_PT['CONS:Dir1'] = 'Leste';\nLOCALE_PT['CONS:Dir2'] = 'Sul';\nLOCALE_PT['CONS:Dir3'] = 'Oeste';\n\nLOCALE_PT['PRIM:PutStone'] = 'Colocar';\nLOCALE_PT['PRIM:RemoveStone'] = 'Retirar';\nLOCALE_PT['PRIM:Move'] = 'Mover';\nLOCALE_PT['PRIM:GoToEdge'] = 'IrABorda';\nLOCALE_PT['PRIM:EmptyBoardContents'] = 'EsvaziarTabuleiro';\nLOCALE_PT['PRIM:numStones'] = 'nroPedras';\nLOCALE_PT['PRIM:anyStones'] = 'haPedras';\nLOCALE_PT['PRIM:canMove'] = 'podeMover';\nLOCALE_PT['PRIM:next'] = 'seguinte';\nLOCALE_PT['PRIM:prev'] = 'previo';\nLOCALE_PT['PRIM:opposite'] = 'oposto';\nLOCALE_PT['PRIM:minBool'] = 'minBool';\nLOCALE_PT['PRIM:maxBool'] = 'maxBool';\nLOCALE_PT['PRIM:minColor'] = 'minCor';\nLOCALE_PT['PRIM:maxColor'] = 'maxCor';\nLOCALE_PT['PRIM:minDir'] = 'minDir';\nLOCALE_PT['PRIM:maxDir'] = 'maxDir';\n\nLOCALE_PT['PRIM:head'] = 'primeiro';\nLOCALE_PT['PRIM:tail'] = 'resto';\nLOCALE_PT['PRIM:init'] = 'comeco';\nLOCALE_PT['PRIM:last'] = 'ultimo';\n\n/* Helpers */\nLOCALE_PT['<alternative>'] =\n    function (strings) {\n      return 'alguma das seguintes alternativas:\\n'\n           + strings.map(s => '  ' + s).join('\\n');\n    };\nLOCALE_PT['<position>'] =\n    function (filename, line, column) {\n      return filename + ':' + line.toString() + ':' + column.toString();\n    };\nLOCALE_PT['<n>-parameters'] =\n    function (n) {\n      return pluralize(n, 'parâmetro', 'parâmetros');\n    };\nLOCALE_PT['<n>-arguments'] =\n    function (n) {\n      return pluralize(n, 'argumento', 'argumentos');\n    };\nLOCALE_PT['<n>-fields'] =\n    function (n) {\n      return pluralize(n, 'campo', 'campos');\n    };\nLOCALE_PT['<pattern-type>'] =\n    function (patternType) {\n      if (patternType === 'Event') {\n        return 'evento do programa interativo';\n      } else if (patternType.substring(0, 7) === '_TUPLE_') {\n        return 'tupla de ' + patternType.substring(7) + ' componentes';\n      } else {\n        return patternType;\n      }\n    };\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/i18n/pt.js","/* eslint-disable */\r\n\r\n/* This file is taken and slightly adapted from\r\n * http://peterolson.github.io/BigInteger.js/BigInteger.js */\r\n\r\nvar BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_INT = 9007199254740992,\r\n    MAX_INT_ARR = smallToArray(MAX_INT),\r\n    LOG_MAX_INT = Math.log(MAX_INT);\r\n\r\nexport function Integer(v, radix) {\r\n    if (typeof v === \"undefined\") return Integer[0];\r\n    if (typeof radix !== \"undefined\") return +radix === 10 ? parseValue(v) : parseBase(v, radix);\r\n    return parseValue(v);\r\n}\r\n\r\nfunction BigInteger(value, sign) {\r\n    this.value = value;\r\n    this.sign = sign;\r\n    this.isSmall = false;\r\n}\r\nBigInteger.prototype = Object.create(Integer.prototype);\r\n\r\nfunction SmallInteger(value) {\r\n    this.value = value;\r\n    this.sign = value < 0;\r\n    this.isSmall = true;\r\n}\r\nSmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\nfunction isPrecise(n) {\r\n    return -MAX_INT < n && n < MAX_INT;\r\n}\r\n\r\nfunction smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n    if (n < 1e7)\r\n        return [n];\r\n    if (n < 1e14)\r\n        return [n % 1e7, Math.floor(n / 1e7)];\r\n    return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n}\r\n\r\nfunction arrayToSmall(arr) { // If BASE changes this function may need to change\r\n    trim(arr);\r\n    var length = arr.length;\r\n    if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n        switch (length) {\r\n            case 0: return 0;\r\n            case 1: return arr[0];\r\n            case 2: return arr[0] + arr[1] * BASE;\r\n            default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nfunction trim(v) {\r\n    var i = v.length;\r\n    while (v[--i] === 0);\r\n    v.length = i + 1;\r\n}\r\n\r\nfunction createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n    var x = new Array(length);\r\n    var i = -1;\r\n    while (++i < length) {\r\n        x[i] = 0;\r\n    }\r\n    return x;\r\n}\r\n\r\nfunction truncate(n) {\r\n    if (n > 0) return Math.floor(n);\r\n    return Math.ceil(n);\r\n}\r\n\r\nfunction add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n    var l_a = a.length,\r\n        l_b = b.length,\r\n        r = new Array(l_a),\r\n        carry = 0,\r\n        base = BASE,\r\n        sum, i;\r\n    for (i = 0; i < l_b; i++) {\r\n        sum = a[i] + b[i] + carry;\r\n        carry = sum >= base ? 1 : 0;\r\n        r[i] = sum - carry * base;\r\n    }\r\n    while (i < l_a) {\r\n        sum = a[i] + carry;\r\n        carry = sum === base ? 1 : 0;\r\n        r[i++] = sum - carry * base;\r\n    }\r\n    if (carry > 0) r.push(carry);\r\n    return r;\r\n}\r\n\r\nfunction addAny(a, b) {\r\n    if (a.length >= b.length) return add(a, b);\r\n    return add(b, a);\r\n}\r\n\r\nfunction addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n    var l = a.length,\r\n        r = new Array(l),\r\n        base = BASE,\r\n        sum, i;\r\n    for (i = 0; i < l; i++) {\r\n        sum = a[i] - base + carry;\r\n        carry = Math.floor(sum / base);\r\n        r[i] = sum - carry * base;\r\n        carry += 1;\r\n    }\r\n    while (carry > 0) {\r\n        r[i++] = carry % base;\r\n        carry = Math.floor(carry / base);\r\n    }\r\n    return r;\r\n}\r\n\r\nBigInteger.prototype.add = function (v) {\r\n    var n = parseValue(v);\r\n    if (this.sign !== n.sign) {\r\n        return this.subtract(n.negate());\r\n    }\r\n    var a = this.value, b = n.value;\r\n    if (n.isSmall) {\r\n        return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n    }\r\n    return new BigInteger(addAny(a, b), this.sign);\r\n};\r\nBigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\nSmallInteger.prototype.add = function (v) {\r\n    var n = parseValue(v);\r\n    var a = this.value;\r\n    if (a < 0 !== n.sign) {\r\n        return this.subtract(n.negate());\r\n    }\r\n    var b = n.value;\r\n    if (n.isSmall) {\r\n        if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n        b = smallToArray(Math.abs(b));\r\n    }\r\n    return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n};\r\nSmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\nfunction subtract(a, b) { // assumes a and b are arrays with a >= b\r\n    var a_l = a.length,\r\n        b_l = b.length,\r\n        r = new Array(a_l),\r\n        borrow = 0,\r\n        base = BASE,\r\n        i, difference;\r\n    for (i = 0; i < b_l; i++) {\r\n        difference = a[i] - borrow - b[i];\r\n        if (difference < 0) {\r\n            difference += base;\r\n            borrow = 1;\r\n        } else borrow = 0;\r\n        r[i] = difference;\r\n    }\r\n    for (i = b_l; i < a_l; i++) {\r\n        difference = a[i] - borrow;\r\n        if (difference < 0) difference += base;\r\n        else {\r\n            r[i++] = difference;\r\n            break;\r\n        }\r\n        r[i] = difference;\r\n    }\r\n    for (; i < a_l; i++) {\r\n        r[i] = a[i];\r\n    }\r\n    trim(r);\r\n    return r;\r\n}\r\n\r\nfunction subtractAny(a, b, sign) {\r\n    var value;\r\n    if (compareAbs(a, b) >= 0) {\r\n        value = subtract(a,b);\r\n    } else {\r\n        value = subtract(b, a);\r\n        sign = !sign;\r\n    }\r\n    value = arrayToSmall(value);\r\n    if (typeof value === \"number\") {\r\n        if (sign) value = -value;\r\n        return new SmallInteger(value);\r\n    }\r\n    return new BigInteger(value, sign);\r\n}\r\n\r\nfunction subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n    var l = a.length,\r\n        r = new Array(l),\r\n        carry = -b,\r\n        base = BASE,\r\n        i, difference;\r\n    for (i = 0; i < l; i++) {\r\n        difference = a[i] + carry;\r\n        carry = Math.floor(difference / base);\r\n        difference %= base;\r\n        r[i] = difference < 0 ? difference + base : difference;\r\n    }\r\n    r = arrayToSmall(r);\r\n    if (typeof r === \"number\") {\r\n        if (sign) r = -r;\r\n        return new SmallInteger(r);\r\n    } return new BigInteger(r, sign);\r\n}\r\n\r\nBigInteger.prototype.subtract = function (v) {\r\n    var n = parseValue(v);\r\n    if (this.sign !== n.sign) {\r\n        return this.add(n.negate());\r\n    }\r\n    var a = this.value, b = n.value;\r\n    if (n.isSmall)\r\n        return subtractSmall(a, Math.abs(b), this.sign);\r\n    return subtractAny(a, b, this.sign);\r\n};\r\nBigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\nSmallInteger.prototype.subtract = function (v) {\r\n    var n = parseValue(v);\r\n    var a = this.value;\r\n    if (a < 0 !== n.sign) {\r\n        return this.add(n.negate());\r\n    }\r\n    var b = n.value;\r\n    if (n.isSmall) {\r\n        return new SmallInteger(a - b);\r\n    }\r\n    return subtractSmall(b, Math.abs(a), a >= 0);\r\n};\r\nSmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\nBigInteger.prototype.negate = function () {\r\n    return new BigInteger(this.value, !this.sign);\r\n};\r\nSmallInteger.prototype.negate = function () {\r\n    var sign = this.sign;\r\n    var small = new SmallInteger(-this.value);\r\n    small.sign = !sign;\r\n    return small;\r\n};\r\n\r\nBigInteger.prototype.abs = function () {\r\n    return new BigInteger(this.value, false);\r\n};\r\nSmallInteger.prototype.abs = function () {\r\n    return new SmallInteger(Math.abs(this.value));\r\n};\r\n\r\nfunction multiplyLong(a, b) {\r\n    var a_l = a.length,\r\n        b_l = b.length,\r\n        l = a_l + b_l,\r\n        r = createArray(l),\r\n        base = BASE,\r\n        product, carry, i, a_i, b_j;\r\n    for (i = 0; i < a_l; ++i) {\r\n        a_i = a[i];\r\n        for (var j = 0; j < b_l; ++j) {\r\n            b_j = b[j];\r\n            product = a_i * b_j + r[i + j];\r\n            carry = Math.floor(product / base);\r\n            r[i + j] = product - carry * base;\r\n            r[i + j + 1] += carry;\r\n        }\r\n    }\r\n    trim(r);\r\n    return r;\r\n}\r\n\r\nfunction multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n    var l = a.length,\r\n        r = new Array(l),\r\n        base = BASE,\r\n        carry = 0,\r\n        product, i;\r\n    for (i = 0; i < l; i++) {\r\n        product = a[i] * b + carry;\r\n        carry = Math.floor(product / base);\r\n        r[i] = product - carry * base;\r\n    }\r\n    while (carry > 0) {\r\n        r[i++] = carry % base;\r\n        carry = Math.floor(carry / base);\r\n    }\r\n    return r;\r\n}\r\n\r\nfunction shiftLeft(x, n) {\r\n    var r = [];\r\n    while (n-- > 0) r.push(0);\r\n    return r.concat(x);\r\n}\r\n\r\nfunction multiplyKaratsuba(x, y) {\r\n    var n = Math.max(x.length, y.length);\r\n\r\n    if (n <= 30) return multiplyLong(x, y);\r\n    n = Math.ceil(n / 2);\r\n\r\n    var b = x.slice(n),\r\n        a = x.slice(0, n),\r\n        d = y.slice(n),\r\n        c = y.slice(0, n);\r\n\r\n    var ac = multiplyKaratsuba(a, c),\r\n        bd = multiplyKaratsuba(b, d),\r\n        abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n    var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n    trim(product);\r\n    return product;\r\n}\r\n\r\n// The following function is derived from a surface fit of a graph plotting the performance difference\r\n// between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\nfunction useKaratsuba(l1, l2) {\r\n    return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n}\r\n\r\nBigInteger.prototype.multiply = function (v) {\r\n    var n = parseValue(v),\r\n        a = this.value, b = n.value,\r\n        sign = this.sign !== n.sign,\r\n        abs;\r\n    if (n.isSmall) {\r\n        if (b === 0) return Integer[0];\r\n        if (b === 1) return this;\r\n        if (b === -1) return this.negate();\r\n        abs = Math.abs(b);\r\n        if (abs < BASE) {\r\n            return new BigInteger(multiplySmall(a, abs), sign);\r\n        }\r\n        b = smallToArray(abs);\r\n    }\r\n    if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n        return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n    return new BigInteger(multiplyLong(a, b), sign);\r\n};\r\n\r\nBigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\nfunction multiplySmallAndArray(a, b, sign) { // a >= 0\r\n    if (a < BASE) {\r\n        return new BigInteger(multiplySmall(b, a), sign);\r\n    }\r\n    return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n}\r\nSmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n};\r\nBigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n};\r\nSmallInteger.prototype.multiply = function (v) {\r\n    return parseValue(v)._multiplyBySmall(this);\r\n};\r\nSmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\nfunction square(a) {\r\n    var l = a.length,\r\n        r = createArray(l + l),\r\n        base = BASE,\r\n        product, carry, i, a_i, a_j;\r\n    for (i = 0; i < l; i++) {\r\n        a_i = a[i];\r\n        for (var j = 0; j < l; j++) {\r\n            a_j = a[j];\r\n            product = a_i * a_j + r[i + j];\r\n            carry = Math.floor(product / base);\r\n            r[i + j] = product - carry * base;\r\n            r[i + j + 1] += carry;\r\n        }\r\n    }\r\n    trim(r);\r\n    return r;\r\n}\r\n\r\nBigInteger.prototype.square = function () {\r\n    return new BigInteger(square(this.value), false);\r\n};\r\n\r\nSmallInteger.prototype.square = function () {\r\n    var value = this.value * this.value;\r\n    if (isPrecise(value)) return new SmallInteger(value);\r\n    return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n};\r\n\r\nfunction divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n    var a_l = a.length,\r\n        b_l = b.length,\r\n        base = BASE,\r\n        result = createArray(b.length),\r\n        divisorMostSignificantDigit = b[b_l - 1],\r\n        // normalization\r\n        lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n        remainder = multiplySmall(a, lambda),\r\n        divisor = multiplySmall(b, lambda),\r\n        quotientDigit, shift, carry, borrow, i, l, q;\r\n    if (remainder.length <= a_l) remainder.push(0);\r\n    divisor.push(0);\r\n    divisorMostSignificantDigit = divisor[b_l - 1];\r\n    for (shift = a_l - b_l; shift >= 0; shift--) {\r\n        quotientDigit = base - 1;\r\n        if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n          quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n        }\r\n        // quotientDigit <= base - 1\r\n        carry = 0;\r\n        borrow = 0;\r\n        l = divisor.length;\r\n        for (i = 0; i < l; i++) {\r\n            carry += quotientDigit * divisor[i];\r\n            q = Math.floor(carry / base);\r\n            borrow += remainder[shift + i] - (carry - q * base);\r\n            carry = q;\r\n            if (borrow < 0) {\r\n                remainder[shift + i] = borrow + base;\r\n                borrow = -1;\r\n            } else {\r\n                remainder[shift + i] = borrow;\r\n                borrow = 0;\r\n            }\r\n        }\r\n        while (borrow !== 0) {\r\n            quotientDigit -= 1;\r\n            carry = 0;\r\n            for (i = 0; i < l; i++) {\r\n                carry += remainder[shift + i] - base + divisor[i];\r\n                if (carry < 0) {\r\n                    remainder[shift + i] = carry + base;\r\n                    carry = 0;\r\n                } else {\r\n                    remainder[shift + i] = carry;\r\n                    carry = 1;\r\n                }\r\n            }\r\n            borrow += carry;\r\n        }\r\n        result[shift] = quotientDigit;\r\n    }\r\n    // denormalization\r\n    remainder = divModSmall(remainder, lambda)[0];\r\n    return [arrayToSmall(result), arrayToSmall(remainder)];\r\n}\r\n\r\nfunction divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n    // Performs faster than divMod1 on larger input sizes.\r\n    var a_l = a.length,\r\n        b_l = b.length,\r\n        result = [],\r\n        part = [],\r\n        base = BASE,\r\n        guess, xlen, highx, highy, check;\r\n    while (a_l) {\r\n        part.unshift(a[--a_l]);\r\n        trim(part);\r\n        if (compareAbs(part, b) < 0) {\r\n            result.push(0);\r\n            continue;\r\n        }\r\n        xlen = part.length;\r\n        highx = part[xlen - 1] * base + part[xlen - 2];\r\n        highy = b[b_l - 1] * base + b[b_l - 2];\r\n        if (xlen > b_l) {\r\n            highx = (highx + 1) * base;\r\n        }\r\n        guess = Math.ceil(highx / highy);\r\n        do {\r\n            check = multiplySmall(b, guess);\r\n            if (compareAbs(check, part) <= 0) break;\r\n            guess--;\r\n        } while (guess);\r\n        result.push(guess);\r\n        part = subtract(part, check);\r\n    }\r\n    result.reverse();\r\n    return [arrayToSmall(result), arrayToSmall(part)];\r\n}\r\n\r\nfunction divModSmall(value, lambda) {\r\n    var length = value.length,\r\n        quotient = createArray(length),\r\n        base = BASE,\r\n        i, q, remainder, divisor;\r\n    remainder = 0;\r\n    for (i = length - 1; i >= 0; --i) {\r\n        divisor = remainder * base + value[i];\r\n        q = truncate(divisor / lambda);\r\n        remainder = divisor - q * lambda;\r\n        quotient[i] = q | 0;\r\n    }\r\n    return [quotient, remainder | 0];\r\n}\r\n\r\nfunction divModAny(self, v) {\r\n    var value, n = parseValue(v);\r\n    var a = self.value, b = n.value;\r\n    var quotient;\r\n    if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n    if (self.isSmall) {\r\n        if (n.isSmall) {\r\n            return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n        }\r\n        return [Integer[0], self];\r\n    }\r\n    if (n.isSmall) {\r\n        if (b === 1) return [self, Integer[0]];\r\n        if (b == -1) return [self.negate(), Integer[0]];\r\n        var abs = Math.abs(b);\r\n        if (abs < BASE) {\r\n            value = divModSmall(a, abs);\r\n            quotient = arrayToSmall(value[0]);\r\n            var remainder = value[1];\r\n            if (self.sign) remainder = -remainder;\r\n            if (typeof quotient === \"number\") {\r\n                if (self.sign !== n.sign) quotient = -quotient;\r\n                return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n            }\r\n            return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n        }\r\n        b = smallToArray(abs);\r\n    }\r\n    var comparison = compareAbs(a, b);\r\n    if (comparison === -1) return [Integer[0], self];\r\n    if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n    // divMod1 is faster on smaller input sizes\r\n    if (a.length + b.length <= 200)\r\n        value = divMod1(a, b);\r\n    else value = divMod2(a, b);\r\n\r\n    quotient = value[0];\r\n    var qSign = self.sign !== n.sign,\r\n        mod = value[1],\r\n        mSign = self.sign;\r\n    if (typeof quotient === \"number\") {\r\n        if (qSign) quotient = -quotient;\r\n        quotient = new SmallInteger(quotient);\r\n    } else quotient = new BigInteger(quotient, qSign);\r\n    if (typeof mod === \"number\") {\r\n        if (mSign) mod = -mod;\r\n        mod = new SmallInteger(mod);\r\n    } else mod = new BigInteger(mod, mSign);\r\n    return [quotient, mod];\r\n}\r\n\r\nBigInteger.prototype.divmod = function (v) {\r\n    var result = divModAny(this, v);\r\n    return {\r\n        quotient: result[0],\r\n        remainder: result[1]\r\n    };\r\n};\r\nSmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\nBigInteger.prototype.divide = function (v) {\r\n    return divModAny(this, v)[0];\r\n};\r\nSmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\nBigInteger.prototype.mod = function (v) {\r\n    return divModAny(this, v)[1];\r\n};\r\nSmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\nBigInteger.prototype.pow = function (v) {\r\n    var n = parseValue(v),\r\n        a = this.value,\r\n        b = n.value,\r\n        value, x, y;\r\n    if (b === 0) return Integer[1];\r\n    if (a === 0) return Integer[0];\r\n    if (a === 1) return Integer[1];\r\n    if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n    if (n.sign) {\r\n        return Integer[0];\r\n    }\r\n    if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n    if (this.isSmall) {\r\n        if (isPrecise(value = Math.pow(a, b)))\r\n            return new SmallInteger(truncate(value));\r\n    }\r\n    x = this;\r\n    y = Integer[1];\r\n    while (true) {\r\n        if (b & 1 === 1) {\r\n            y = y.times(x);\r\n            --b;\r\n        }\r\n        if (b === 0) break;\r\n        b /= 2;\r\n        x = x.square();\r\n    }\r\n    return y;\r\n};\r\nSmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\nBigInteger.prototype.modPow = function (exp, mod) {\r\n    exp = parseValue(exp);\r\n    mod = parseValue(mod);\r\n    if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n    var r = Integer[1],\r\n        base = this.mod(mod);\r\n    while (exp.isPositive()) {\r\n        if (base.isZero()) return Integer[0];\r\n        if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n        exp = exp.divide(2);\r\n        base = base.square().mod(mod);\r\n    }\r\n    return r;\r\n};\r\nSmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\nfunction compareAbs(a, b) {\r\n    if (a.length !== b.length) {\r\n        return a.length > b.length ? 1 : -1;\r\n    }\r\n    for (var i = a.length - 1; i >= 0; i--) {\r\n        if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nBigInteger.prototype.compareAbs = function (v) {\r\n    var n = parseValue(v),\r\n        a = this.value,\r\n        b = n.value;\r\n    if (n.isSmall) return 1;\r\n    return compareAbs(a, b);\r\n};\r\nSmallInteger.prototype.compareAbs = function (v) {\r\n    var n = parseValue(v),\r\n        a = Math.abs(this.value),\r\n        b = n.value;\r\n    if (n.isSmall) {\r\n        b = Math.abs(b);\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    return -1;\r\n};\r\n\r\nBigInteger.prototype.compare = function (v) {\r\n    // See discussion about comparison with Infinity:\r\n    // https://github.com/peterolson/BigInteger.js/issues/61\r\n    if (v === Infinity) {\r\n        return -1;\r\n    }\r\n    if (v === -Infinity) {\r\n        return 1;\r\n    }\r\n\r\n    var n = parseValue(v),\r\n        a = this.value,\r\n        b = n.value;\r\n    if (this.sign !== n.sign) {\r\n        return n.sign ? 1 : -1;\r\n    }\r\n    if (n.isSmall) {\r\n        return this.sign ? -1 : 1;\r\n    }\r\n    return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n};\r\nBigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\nSmallInteger.prototype.compare = function (v) {\r\n    if (v === Infinity) {\r\n        return -1;\r\n    }\r\n    if (v === -Infinity) {\r\n        return 1;\r\n    }\r\n\r\n    var n = parseValue(v),\r\n        a = this.value,\r\n        b = n.value;\r\n    if (n.isSmall) {\r\n        return a == b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    if (a < 0 !== n.sign) {\r\n        return a < 0 ? -1 : 1;\r\n    }\r\n    return a < 0 ? 1 : -1;\r\n};\r\nSmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\nBigInteger.prototype.equals = function (v) {\r\n    return this.compare(v) === 0;\r\n};\r\nSmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\nBigInteger.prototype.notEquals = function (v) {\r\n    return this.compare(v) !== 0;\r\n};\r\nSmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\nBigInteger.prototype.greater = function (v) {\r\n    return this.compare(v) > 0;\r\n};\r\nSmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\nBigInteger.prototype.lesser = function (v) {\r\n    return this.compare(v) < 0;\r\n};\r\nSmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\nBigInteger.prototype.greaterOrEquals = function (v) {\r\n    return this.compare(v) >= 0;\r\n};\r\nSmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\nBigInteger.prototype.lesserOrEquals = function (v) {\r\n    return this.compare(v) <= 0;\r\n};\r\nSmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\nBigInteger.prototype.isEven = function () {\r\n    return (this.value[0] & 1) === 0;\r\n};\r\nSmallInteger.prototype.isEven = function () {\r\n    return (this.value & 1) === 0;\r\n};\r\n\r\nBigInteger.prototype.isOdd = function () {\r\n    return (this.value[0] & 1) === 1;\r\n};\r\nSmallInteger.prototype.isOdd = function () {\r\n    return (this.value & 1) === 1;\r\n};\r\n\r\nBigInteger.prototype.isPositive = function () {\r\n    return !this.sign;\r\n};\r\nSmallInteger.prototype.isPositive = function () {\r\n    return this.value > 0;\r\n};\r\n\r\nBigInteger.prototype.isNegative = function () {\r\n    return this.sign;\r\n};\r\nSmallInteger.prototype.isNegative = function () {\r\n    return this.value < 0;\r\n};\r\n\r\nBigInteger.prototype.isUnit = function () {\r\n    return false;\r\n};\r\nSmallInteger.prototype.isUnit = function () {\r\n    return Math.abs(this.value) === 1;\r\n};\r\n\r\nBigInteger.prototype.isZero = function () {\r\n    return false;\r\n};\r\nSmallInteger.prototype.isZero = function () {\r\n    return this.value === 0;\r\n};\r\nBigInteger.prototype.isDivisibleBy = function (v) {\r\n    var n = parseValue(v);\r\n    var value = n.value;\r\n    if (value === 0) return false;\r\n    if (value === 1) return true;\r\n    if (value === 2) return this.isEven();\r\n    return this.mod(n).equals(Integer[0]);\r\n};\r\nSmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\nfunction isBasicPrime(v) {\r\n    var n = v.abs();\r\n    if (n.isUnit()) return false;\r\n    if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n    if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n    if (n.lesser(25)) return true;\r\n    // we don't know if it's prime: let the other functions figure it out\r\n}\r\n\r\nBigInteger.prototype.isPrime = function () {\r\n    var isPrime = isBasicPrime(this);\r\n    if (isPrime !== undefined) return isPrime;\r\n    var n = this.abs(),\r\n        nPrev = n.prev();\r\n    var a = [2, 3, 5, 7, 11, 13, 17, 19],\r\n        b = nPrev,\r\n        d, t, i, x;\r\n    while (b.isEven()) b = b.divide(2);\r\n    for (i = 0; i < a.length; i++) {\r\n        x = bigInt(a[i]).modPow(b, n);\r\n        if (x.equals(Integer[1]) || x.equals(nPrev)) continue;\r\n        for (t = true, d = b; t && d.lesser(nPrev) ; d = d.multiply(2)) {\r\n            x = x.square().mod(n);\r\n            if (x.equals(nPrev)) t = false;\r\n        }\r\n        if (t) return false;\r\n    }\r\n    return true;\r\n};\r\nSmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\nBigInteger.prototype.isProbablePrime = function (iterations) {\r\n    var isPrime = isBasicPrime(this);\r\n    if (isPrime !== undefined) return isPrime;\r\n    var n = this.abs();\r\n    var t = iterations === undefined ? 5 : iterations;\r\n    // use the Fermat primality test\r\n    for (var i = 0; i < t; i++) {\r\n        var a = bigInt.randBetween(2, n.minus(2));\r\n        if (!a.modPow(n.prev(), n).isUnit()) return false; // definitely composite\r\n    }\r\n    return true; // large chance of being prime\r\n};\r\nSmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\nBigInteger.prototype.modInv = function (n) {\r\n    var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n    while (!newR.equals(bigInt.zero)) {\r\n        q = r.divide(newR);\r\n        lastT = t;\r\n        lastR = r;\r\n        t = newT;\r\n        r = newR;\r\n        newT = lastT.subtract(q.multiply(newT));\r\n        newR = lastR.subtract(q.multiply(newR));\r\n    }\r\n    if (!r.equals(1)) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n    if (t.compare(0) === -1) {\r\n        t = t.add(n);\r\n    }\r\n    if (this.isNegative()) {\r\n        return t.negate();\r\n    }\r\n    return t;\r\n};\r\n\r\nSmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\nBigInteger.prototype.next = function () {\r\n    var value = this.value;\r\n    if (this.sign) {\r\n        return subtractSmall(value, 1, this.sign);\r\n    }\r\n    return new BigInteger(addSmall(value, 1), this.sign);\r\n};\r\nSmallInteger.prototype.next = function () {\r\n    var value = this.value;\r\n    if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n    return new BigInteger(MAX_INT_ARR, false);\r\n};\r\n\r\nBigInteger.prototype.prev = function () {\r\n    var value = this.value;\r\n    if (this.sign) {\r\n        return new BigInteger(addSmall(value, 1), true);\r\n    }\r\n    return subtractSmall(value, 1, this.sign);\r\n};\r\nSmallInteger.prototype.prev = function () {\r\n    var value = this.value;\r\n    if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n    return new BigInteger(MAX_INT_ARR, true);\r\n};\r\n\r\nvar powersOfTwo = [1];\r\nwhile (powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\nvar powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\nfunction shift_isSmall(n) {\r\n    return ((typeof n === \"number\" || typeof n === \"string\") && +Math.abs(n) <= BASE) ||\r\n        (n instanceof BigInteger && n.value.length <= 1);\r\n}\r\n\r\nBigInteger.prototype.shiftLeft = function (n) {\r\n    if (!shift_isSmall(n)) {\r\n        throw new Error(String(n) + \" is too large for shifting.\");\r\n    }\r\n    n = +n;\r\n    if (n < 0) return this.shiftRight(-n);\r\n    var result = this;\r\n    while (n >= powers2Length) {\r\n        result = result.multiply(highestPower2);\r\n        n -= powers2Length - 1;\r\n    }\r\n    return result.multiply(powersOfTwo[n]);\r\n};\r\nSmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\nBigInteger.prototype.shiftRight = function (n) {\r\n    var remQuo;\r\n    if (!shift_isSmall(n)) {\r\n        throw new Error(String(n) + \" is too large for shifting.\");\r\n    }\r\n    n = +n;\r\n    if (n < 0) return this.shiftLeft(-n);\r\n    var result = this;\r\n    while (n >= powers2Length) {\r\n        if (result.isZero()) return result;\r\n        remQuo = divModAny(result, highestPower2);\r\n        result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n        n -= powers2Length - 1;\r\n    }\r\n    remQuo = divModAny(result, powersOfTwo[n]);\r\n    return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n};\r\nSmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\nfunction bitwise(x, y, fn) {\r\n    y = parseValue(y);\r\n    var xSign = x.isNegative(), ySign = y.isNegative();\r\n    var xRem = xSign ? x.not() : x,\r\n        yRem = ySign ? y.not() : y;\r\n    var xBits = [], yBits = [];\r\n    var xStop = false, yStop = false;\r\n    while (!xStop || !yStop) {\r\n        if (xRem.isZero()) { // virtual sign extension for simulating two's complement\r\n            xStop = true;\r\n            xBits.push(xSign ? 1 : 0);\r\n        }\r\n        else if (xSign) xBits.push(xRem.isEven() ? 1 : 0); // two's complement for negative numbers\r\n        else xBits.push(xRem.isEven() ? 0 : 1);\r\n\r\n        if (yRem.isZero()) {\r\n            yStop = true;\r\n            yBits.push(ySign ? 1 : 0);\r\n        }\r\n        else if (ySign) yBits.push(yRem.isEven() ? 1 : 0);\r\n        else yBits.push(yRem.isEven() ? 0 : 1);\r\n\r\n        xRem = xRem.over(2);\r\n        yRem = yRem.over(2);\r\n    }\r\n    var result = [];\r\n    for (var i = 0; i < xBits.length; i++) result.push(fn(xBits[i], yBits[i]));\r\n    var sum = bigInt(result.pop()).negate().times(bigInt(2).pow(result.length));\r\n    while (result.length) {\r\n        sum = sum.add(bigInt(result.pop()).times(bigInt(2).pow(result.length)));\r\n    }\r\n    return sum;\r\n}\r\n\r\nBigInteger.prototype.not = function () {\r\n    return this.negate().prev();\r\n};\r\nSmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\nBigInteger.prototype.and = function (n) {\r\n    return bitwise(this, n, function (a, b) { return a & b; });\r\n};\r\nSmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\nBigInteger.prototype.or = function (n) {\r\n    return bitwise(this, n, function (a, b) { return a | b; });\r\n};\r\nSmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\nBigInteger.prototype.xor = function (n) {\r\n    return bitwise(this, n, function (a, b) { return a ^ b; });\r\n};\r\nSmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\nvar LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\nfunction roughLOB(n) { // get lowestOneBit (rough)\r\n    // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n    // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n    var v = n.value, x = typeof v === \"number\" ? v | LOBMASK_I : v[0] + v[1] * BASE | LOBMASK_BI;\r\n    return x & -x;\r\n}\r\n\r\nfunction max(a, b) {\r\n    a = parseValue(a);\r\n    b = parseValue(b);\r\n    return a.greater(b) ? a : b;\r\n}\r\nfunction min(a, b) {\r\n    a = parseValue(a);\r\n    b = parseValue(b);\r\n    return a.lesser(b) ? a : b;\r\n}\r\nfunction gcd(a, b) {\r\n    a = parseValue(a).abs();\r\n    b = parseValue(b).abs();\r\n    if (a.equals(b)) return a;\r\n    if (a.isZero()) return b;\r\n    if (b.isZero()) return a;\r\n    var c = Integer[1], d, t;\r\n    while (a.isEven() && b.isEven()) {\r\n        d = Math.min(roughLOB(a), roughLOB(b));\r\n        a = a.divide(d);\r\n        b = b.divide(d);\r\n        c = c.multiply(d);\r\n    }\r\n    while (a.isEven()) {\r\n        a = a.divide(roughLOB(a));\r\n    }\r\n    do {\r\n        while (b.isEven()) {\r\n            b = b.divide(roughLOB(b));\r\n        }\r\n        if (a.greater(b)) {\r\n            t = b; b = a; a = t;\r\n        }\r\n        b = b.subtract(a);\r\n    } while (!b.isZero());\r\n    return c.isUnit() ? a : a.multiply(c);\r\n}\r\nfunction lcm(a, b) {\r\n    a = parseValue(a).abs();\r\n    b = parseValue(b).abs();\r\n    return a.divide(gcd(a, b)).multiply(b);\r\n}\r\nfunction randBetween(a, b) {\r\n    a = parseValue(a);\r\n    b = parseValue(b);\r\n    var low = min(a, b), high = max(a, b);\r\n    var range = high.subtract(low);\r\n    if (range.isSmall) return low.add(Math.round(Math.random() * range));\r\n    var length = range.value.length - 1;\r\n    var result = [], restricted = true;\r\n    for (var i = length; i >= 0; i--) {\r\n        var top = restricted ? range.value[i] : BASE;\r\n        var digit = truncate(Math.random() * top);\r\n        result.unshift(digit);\r\n        if (digit < top) restricted = false;\r\n    }\r\n    result = arrayToSmall(result);\r\n    return low.add(typeof result === \"number\" ? new SmallInteger(result) : new BigInteger(result, false));\r\n}\r\nvar parseBase = function (text, base) {\r\n    var length = text.length;\r\nvar i;\r\nvar absBase = Math.abs(base);\r\nfor(var i = 0; i < length; i++) {\r\n\tvar c = text[i].toLowerCase();\r\n\tif(c === \"-\") continue;\r\n\tif(/[a-z0-9]/.test(c)) {\r\n\t    if(/[0-9]/.test(c) && +c >= absBase) {\r\n\t\t\tif(c === \"1\" && absBase === 1) continue;\r\n                throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n\t\t} else if(c.charCodeAt(0) - 87 >= absBase) {\r\n\t\t\tthrow new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n\t\t}\r\n\t}\r\n}\r\n    if (2 <= base && base <= 36) {\r\n        if (length <= LOG_MAX_INT / Math.log(base)) {\r\n\t\tvar result = parseInt(text, base);\r\n\t\tif(isNaN(result)) {\r\n\t\t\tthrow new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n\t\t}\r\n            return new SmallInteger(parseInt(text, base));\r\n        }\r\n    }\r\n    base = parseValue(base);\r\n    var digits = [];\r\n    var isNegative = text[0] === \"-\";\r\n    for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n        var c = text[i].toLowerCase(),\r\n            charCode = c.charCodeAt(0);\r\n        if (48 <= charCode && charCode <= 57) digits.push(parseValue(c));\r\n        else if (97 <= charCode && charCode <= 122) digits.push(parseValue(c.charCodeAt(0) - 87));\r\n        else if (c === \"<\") {\r\n            var start = i;\r\n            do { i++; } while (text[i] !== \">\");\r\n            digits.push(parseValue(text.slice(start + 1, i)));\r\n        }\r\n        else throw new Error(c + \" is not a valid character\");\r\n    }\r\n    return parseBaseFromArray(digits, base, isNegative);\r\n};\r\n\r\nfunction parseBaseFromArray(digits, base, isNegative) {\r\n    var val = Integer[0], pow = Integer[1], i;\r\n    for (i = digits.length - 1; i >= 0; i--) {\r\n        val = val.add(digits[i].times(pow));\r\n        pow = pow.times(base);\r\n    }\r\n    return isNegative ? val.negate() : val;\r\n}\r\n\r\nfunction stringify(digit) {\r\n    var v = digit.value;\r\n    if (typeof v === \"number\") v = [v];\r\n    if (v.length === 1 && v[0] <= 35) {\r\n        return \"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(v[0]);\r\n    }\r\n    return \"<\" + v + \">\";\r\n}\r\nfunction toBase(n, base) {\r\n    base = bigInt(base);\r\n    if (base.isZero()) {\r\n        if (n.isZero()) return \"0\";\r\n        throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n    }\r\n    if (base.equals(-1)) {\r\n        if (n.isZero()) return \"0\";\r\n        if (n.isNegative()) return new Array(1 - n).join(\"10\");\r\n        return \"1\" + new Array(+n).join(\"01\");\r\n    }\r\n    var minusSign = \"\";\r\n    if (n.isNegative() && base.isPositive()) {\r\n        minusSign = \"-\";\r\n        n = n.abs();\r\n    }\r\n    if (base.equals(1)) {\r\n        if (n.isZero()) return \"0\";\r\n        return minusSign + new Array(+n + 1).join(1);\r\n    }\r\n    var out = [];\r\n    var left = n, divmod;\r\n    while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n        divmod = left.divmod(base);\r\n        left = divmod.quotient;\r\n        var digit = divmod.remainder;\r\n        if (digit.isNegative()) {\r\n            digit = base.minus(digit).abs();\r\n            left = left.next();\r\n        }\r\n        out.push(stringify(digit));\r\n    }\r\n    out.push(stringify(left));\r\n    return minusSign + out.reverse().join(\"\");\r\n}\r\n\r\nBigInteger.prototype.toString = function (radix) {\r\n    if (radix === undefined) radix = 10;\r\n    if (radix !== 10) return toBase(this, radix);\r\n    var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n    while (--l >= 0) {\r\n        digit = String(v[l]);\r\n        str += zeros.slice(digit.length) + digit;\r\n    }\r\n    var sign = this.sign ? \"-\" : \"\";\r\n    return sign + str;\r\n};\r\nSmallInteger.prototype.toString = function (radix) {\r\n    if (radix === undefined) radix = 10;\r\n    if (radix != 10) return toBase(this, radix);\r\n    return String(this.value);\r\n};\r\n\r\nBigInteger.prototype.valueOf = function () {\r\n    return +this.toString();\r\n};\r\nBigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\nSmallInteger.prototype.valueOf = function () {\r\n    return this.value;\r\n};\r\nSmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n\r\nfunction parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return new SmallInteger(x);\r\n            throw \"Invalid integer: \" + v;\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n}\r\n\r\nfunction parseNumberValue(v) {\r\n    if (isPrecise(v)) {\r\n        if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n        return new SmallInteger(v);\r\n    }\r\n    return parseStringValue(v.toString());\r\n}\r\n\r\nfunction parseValue(v) {\r\n    if (typeof v === \"number\") {\r\n        return parseNumberValue(v);\r\n    }\r\n    if (typeof v === \"string\") {\r\n        return parseStringValue(v);\r\n    }\r\n    return v;\r\n}\r\n// Pre-define numbers in range [-999,999]\r\nfor (var i = 0; i < 1000; i++) {\r\n    Integer[i] = new SmallInteger(i);\r\n    if (i > 0) Integer[-i] = new SmallInteger(-i);\r\n}\r\n// Backwards compatibility\r\nInteger.one = Integer[1];\r\nInteger.zero = Integer[0];\r\nInteger.minusOne = Integer[-1];\r\nInteger.max = max;\r\nInteger.min = min;\r\nInteger.gcd = gcd;\r\nInteger.lcm = lcm;\r\nInteger.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger; };\r\nInteger.randBetween = randBetween;\r\n\r\nInteger.fromArray = function (digits, base, isNegative) {\r\n    return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/bigint.js","\nimport { Parser } from './parser';\nimport { Linter } from './linter';\nimport { SymbolTable } from './symtable';\nimport { Compiler } from './compiler';\nimport { RuntimePrimitives, RuntimeState } from './runtime';\nimport { VirtualMachine } from './vm';\n\nimport { UnknownPosition } from './reader';\nimport {\n  T_UPPERID,\n  T_LOWERID,\n  Token,\n} from './token';\nimport {\n  ASTDefProcedure,\n  ASTDefFunction,\n  ASTDefType,\n  ASTStmtBlock,\n  ASTConstructorDeclaration,\n} from './ast';\n\n/* This module is a façade for all the combined functionality of the\n * parser/compiler/vm\n */\n\nfunction tok(tag, value) {\n  return new Token(tag, value, UnknownPosition, UnknownPosition);\n}\n\nexport class Runner {\n\n  constructor() {\n    this.initialize();\n  }\n\n  initialize() {\n    this._ast = null;\n    this._primitives = new RuntimePrimitives();\n    this._symtable = this._newSymtableWithPrimitives();\n    this._linter = new Linter(this._symtable);\n    this._code = null;\n    this._vm = null;\n    this._result = null;\n  }\n\n  /* Parse, compile, and run a program in the default global state\n   * (typically an empty 9x9 board in Gobstones).\n   * Return the return value of the program, ignoring the final state.\n   * A GbsInterpreterException may be thrown.\n   */\n  run(input) {\n    return this.runState(input, new RuntimeState()).result;\n  }\n\n  /* Parse, compile, and run a program in the given initial state.\n   * Return an object of the form\n   *   {'result': r, 'state': s]\n   * where r is the result of the program and s is the final state.\n   * A GbsInterpreterException may be thrown.\n   */\n  runState(input, initialState) {\n    this.parse(input);\n    this.lint();\n    this.compile();\n    this.execute(initialState);\n    return {'result': this._result, 'state': this._vm.globalState()};\n  }\n\n  parse(input) {\n    let parser = new Parser(input);\n    this._ast = parser.parse();\n\n    for (let option of parser.getLanguageOptions()) {\n      this._setLanguageOption(option);\n    }\n  }\n\n  enableLintCheck(linterCheckId, enabled) {\n    this._linter.enableCheck(linterCheckId, enabled);\n  }\n\n  lint() {\n    this._symtable = this._linter.lint(this._ast);\n  }\n\n  compile() {\n    this._code = new Compiler(this._symtable).compile(this._ast);\n  }\n\n  initializeVirtualMachine(initialState) {\n    this._vm = new VirtualMachine(this._code, initialState);\n  }\n\n  execute(initialState) {\n    this.executeWithTimeout(initialState, 0);\n  }\n\n  executeWithTimeout(initialState, millisecs) {\n    this.executeWithTimeoutTakingSnapshots(initialState, millisecs, null);\n  }\n\n  executeWithTimeoutTakingSnapshots(initialState, millisecs, snapshotCallback) {\n    this.initializeVirtualMachine(initialState);\n    this._result = this._vm.runWithTimeoutTakingSnapshots(\n      millisecs, snapshotCallback\n    );\n  }\n\n  executeEventWithTimeout(eventValue, millisecs) {\n    this._result = this._vm.runEventWithTimeout(eventValue, millisecs);\n  }\n\n  get abstractSyntaxTree() {\n    return this._ast;\n  }\n\n  get primitives() {\n    return this._primitives;\n  }\n\n  get symbolTable() {\n    return this._symtable;\n  }\n\n  get virtualMachineCode() {\n    return this._code;\n  }\n\n  get result() {\n    return this._result;\n  }\n\n  get globalState() {\n    return this._vm.globalState();\n  }\n\n  /* Evaluate language options set by the LANGUAGE pragma */\n  _setLanguageOption(option) {\n    if (option === 'DestructuringForeach') {\n      this.enableLintCheck('forbidden-extension-destructuring-foreach', false);\n    } else {\n      throw Error('Unknown language option: ' + option);\n    }\n  }\n\n  /* Dynamic stack of regions */\n  regionStack() {\n    return this._vm.regionStack();\n  }\n\n  /* Create a new symbol table, including definitions for all the primitive\n   * types and operations (which come from RuntimePrimitives) */\n  _newSymtableWithPrimitives() {\n    let symtable = new SymbolTable();\n\n    /* Populate symbol table with primitive types */\n    for (let type of this._primitives.types()) {\n      symtable.defType(this._astDefType(type));\n    }\n\n    /* Populate symbol table with primitive procedures */\n    for (let procedureName of this._primitives.procedures()) {\n      symtable.defProcedure(this._astDefProcedure(procedureName));\n    }\n\n    /* Populate symbol table with primitive functions */\n    for (let functionName of this._primitives.functions()) {\n      symtable.defFunction(this._astDefFunction(functionName));\n    }\n\n    return symtable;\n  }\n\n  _astDefType(type) {\n    let constructorDeclarations = [];\n    for (let constructor of this._primitives.typeConstructors(type)) {\n      constructorDeclarations.push(\n        this._astConstructorDeclaration(type, constructor)\n      );\n    }\n    return new ASTDefType(tok(T_UPPERID, type), constructorDeclarations);\n  }\n\n  _astDefProcedure(procedureName) {\n    let nargs = this._primitives.getOperation(procedureName).nargs();\n    let parameters = [];\n    for (let i = 1; i <= nargs; i++) {\n      parameters.push(tok(T_LOWERID, 'x' + i.toString()));\n    }\n    return new ASTDefProcedure(\n        tok(T_LOWERID, procedureName),\n        parameters,\n        new ASTStmtBlock([])\n    );\n  }\n\n  _astDefFunction(functionName) {\n    let nargs = this._primitives.getOperation(functionName).nargs();\n    let parameters = [];\n    for (let i = 1; i <= nargs; i++) {\n      parameters.push(tok(T_LOWERID, 'x' + i.toString()));\n    }\n    return new ASTDefFunction(\n        tok(T_LOWERID, functionName),\n        parameters,\n        new ASTStmtBlock([])\n    );\n  }\n\n  _astConstructorDeclaration(type, constructor) {\n    let fields = [];\n    for (let field of this._primitives.constructorFields(type, constructor)) {\n      fields.push(tok(T_LOWERID, field));\n    }\n    return new ASTConstructorDeclaration(tok(T_UPPERID, constructor), fields);\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/runner.js","import { GbsSyntaxError } from './exceptions';\nimport { Lexer } from './lexer';\nimport { i18n } from './i18n';\nimport {\n  Token, T_EOF, T_NUM, T_STRING, T_LOWERID, T_UPPERID,\n  /* Keywords */\n  T_PROGRAM, T_INTERACTIVE, T_PROCEDURE, T_FUNCTION, T_RETURN,\n  T_IF, T_THEN, T_ELSEIF, T_ELSE,\n  T_CHOOSE, T_WHEN, T_OTHERWISE,\n  T_REPEAT, T_FOREACH, T_IN, T_WHILE,\n  T_SWITCH, T_TO, T_LET, T_NOT, T_DIV, T_MOD, T_TYPE,\n  T_IS, T_RECORD, T_VARIANT, T_CASE, T_FIELD, T_UNDERSCORE,\n  T_TIMEOUT,\n  /* Symbols */\n  T_LPAREN, T_RPAREN, T_LBRACE, T_RBRACE, T_LBRACK, T_RBRACK, T_COMMA,\n  T_SEMICOLON, T_ELLIPSIS, T_RANGE, T_GETS, T_PIPE, T_ARROW, T_ASSIGN,\n  T_EQ, T_NE, T_LE, T_GE, T_LT, T_GT, T_AND, T_OR, T_CONCAT, T_PLUS,\n  T_MINUS, T_TIMES, T_POW\n} from './token';\nimport {\n  /* Main */\n  ASTMain,\n  /* Definitions */\n  ASTDefProgram,\n  ASTDefInteractiveProgram,\n  ASTDefProcedure,\n  ASTDefFunction,\n  ASTDefType,\n  /* Statements */\n  ASTStmtBlock,\n  ASTStmtReturn,\n  ASTStmtIf,\n  ASTStmtRepeat,\n  ASTStmtForeach,\n  ASTStmtWhile,\n  ASTStmtSwitch,\n  ASTStmtAssignVariable,\n  ASTStmtAssignTuple,\n  ASTStmtProcedureCall,\n  /* Patterns */\n  ASTPatternWildcard,\n  ASTPatternVariable,\n  ASTPatternNumber,\n  ASTPatternStructure,\n  ASTPatternTuple,\n  ASTPatternTimeout,\n  /* Expressions */\n  ASTExprVariable,\n  ASTExprConstantNumber,\n  ASTExprConstantString,\n  ASTExprChoose,\n  ASTExprList,\n  ASTExprRange,\n  ASTExprTuple,\n  ASTExprStructure,\n  ASTExprStructureUpdate,\n  ASTExprFunctionCall,\n  /* SwitchBranch */\n  ASTSwitchBranch,\n  /* FieldBinding */\n  ASTFieldBinding,\n  /* ConstructorDeclaration */\n  ASTConstructorDeclaration,\n  //\n  N_ExprVariable,\n} from './ast';\n\nconst Infix = Symbol.for('Infix');\nconst InfixL = Symbol.for('InfixL');\nconst InfixR = Symbol.for('InfixR');\nconst Prefix = Symbol.for('Prefix');\n\nclass PrecedenceLevel {\n  /* Operators should be a dictionary mapping operator tags to\n   * their function names */\n  constructor(fixity, operators) {\n    this._fixity = fixity;\n    this._operators = operators;\n  }\n\n  get fixity() {\n    return this._fixity;\n  }\n\n  isOperator(token) {\n    return Symbol.keyFor(token.tag) in this._operators;\n  }\n\n  functionName(token) {\n    return new Token(\n      T_LOWERID,\n      this._operators[Symbol.keyFor(token.tag)],\n      token.startPos,\n      token.endPos\n    );\n  }\n}\n\n/* OPERATORS is a list of precedence levels.\n * Precedence levels are ordered from lesser to greater precedence.\n */\nconst OPERATORS = [\n  /* Logical operators */\n  new PrecedenceLevel(InfixR, {\n    'T_OR': '||',\n  }),\n  new PrecedenceLevel(InfixR, {\n    'T_AND': '&&',\n  }),\n  new PrecedenceLevel(Prefix, {\n    'T_NOT': 'not',\n  }),\n  /* Relational operators */\n  new PrecedenceLevel(Infix, {\n    'T_EQ': '==',\n    'T_NE': '/=',\n    'T_LE': '<=',\n    'T_GE': '>=',\n    'T_LT': '<',\n    'T_GT': '>',\n  }),\n  /* List concatenation */\n  new PrecedenceLevel(InfixL, {\n    'T_CONCAT': '++',\n  }),\n  /* Additive operators */\n  new PrecedenceLevel(InfixL, {\n    'T_PLUS': '+',\n    'T_MINUS': '-',\n  }),\n  /* Multiplicative operators */\n  new PrecedenceLevel(InfixL, {\n    'T_TIMES': '*',\n  }),\n  /* Division operators */\n  new PrecedenceLevel(InfixL, {\n    'T_DIV': 'div',\n    'T_MOD': 'mod',\n  }),\n  /* Exponential operators */\n  new PrecedenceLevel(InfixR, {\n    'T_POW': '^'\n  }),\n  /* Unary minus */\n  new PrecedenceLevel(Prefix, {\n    'T_MINUS': '-(unary)',\n  })\n];\n\nfunction fail(startPos, endPos, reason, args) {\n  throw new GbsSyntaxError(startPos, endPos, reason, args);\n}\n\n/* Represents a parser for a Gobstones/XGobstones program.\n * It is structured as a straightforward recursive-descent parser.\n *\n * The parameter 'input' may be either a string or a dictionary\n * mapping filenames to strings.\n *\n * All the \"parseFoo\" methods agree to the following convention:\n * - parseFoo returns an AST for a Foo construction,\n * - parseFoo consumes a fragment of the input by successively requesting\n *   the next token from the lexer,\n * - when calling parseFoo, the current token should already be located\n *   on the first token of the corresponding construction,\n * - when parseFoo returns, the current token is already located on\n *   the following token, after the corresponding construction.\n */\nexport class Parser {\n\n  constructor(input) {\n    this._lexer = new Lexer(input);\n    this._nextToken();\n  }\n\n  /* Return the AST that results from parsing a full program */\n  parse() {\n    let definitions = [];\n    while (this._currentToken.tag !== T_EOF) {\n      definitions.push(this._parseDefinition());\n    }\n    return new ASTMain(definitions);\n  }\n\n  /* Return the list of all language options collected by the tokenizer.\n   * Language options are set by the LANGUAGE pragma. */\n  getLanguageOptions() {\n    return this._lexer.getLanguageOptions();\n  }\n\n  /** Definitions **/\n\n  _parseDefinition() {\n    switch (this._currentToken.tag) {\n      case T_PROGRAM:\n        return this._parseDefProgram();\n      case T_INTERACTIVE:\n        return this._parseDefInteractiveProgram();\n      case T_PROCEDURE:\n        return this._parseDefProcedure();\n      case T_FUNCTION:\n        return this._parseDefFunction();\n      case T_TYPE:\n        return this._parseDefType();\n      default:\n        return fail(\n          this._currentToken.startPos, this._currentToken.endPos,\n          'expected-but-found', [\n            i18n('definition'),\n            i18n(Symbol.keyFor(this._currentToken.tag))\n          ]\n        );\n    }\n  }\n\n  _parseDefProgram() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_PROGRAM);\n    let attributes = this._lexer.getPendingAttributes();\n    let block = this._parseStmtBlock();\n    let result = new ASTDefProgram(block);\n    result.startPos = startPos;\n    result.endPos = block.endPos;\n    result.attributes = attributes;\n    return result;\n  }\n\n  _parseDefInteractiveProgram() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_INTERACTIVE);\n    this._match(T_PROGRAM);\n    let attributes = this._lexer.getPendingAttributes();\n    this._match(T_LBRACE);\n    let branches = this._parseSwitchBranches();\n    let endPos = this._currentToken.startPos;\n    this._match(T_RBRACE);\n    let result = new ASTDefInteractiveProgram(branches);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    result.attributes = attributes;\n    return result;\n  }\n\n  _parseDefProcedure() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_PROCEDURE);\n    let name = this._parseUpperid();\n    this._match(T_LPAREN);\n    let parameters = this._parseLoweridSeq();\n    this._match(T_RPAREN);\n    let attributes = this._lexer.getPendingAttributes();\n    let block = this._parseStmtBlock();\n    let result = new ASTDefProcedure(name, parameters, block);\n    result.startPos = startPos;\n    result.endPos = block.endPos;\n    result.attributes = attributes;\n    return result;\n  }\n\n  _parseDefFunction() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_FUNCTION);\n    let name = this._currentToken;\n    this._match(T_LOWERID);\n    this._match(T_LPAREN);\n    let parameters = this._parseLoweridSeq();\n    this._match(T_RPAREN);\n    let attributes = this._lexer.getPendingAttributes();\n    let block = this._parseStmtBlock();\n    let result = new ASTDefFunction(name, parameters, block);\n    result.startPos = startPos;\n    result.endPos = block.endPos;\n    result.attributes = attributes;\n    return result;\n  }\n\n  _parseDefType() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_TYPE);\n    let typeName = this._parseUpperid();\n    this._match(T_IS);\n    switch (this._currentToken.tag) {\n      case T_RECORD:\n        return this._parseDefTypeRecord(startPos, typeName);\n      case T_VARIANT:\n        return this._parseDefTypeVariant(startPos, typeName);\n      default:\n        return fail(\n          this._currentToken.startPos, this._currentToken.endPos,\n          'expected-but-found', [\n            i18n('<alternative>')([\n              i18n('T_RECORD'),\n              i18n('T_VARIANT')\n            ]),\n            i18n(Symbol.keyFor(this._currentToken.tag))\n          ]\n        );\n    }\n  }\n\n  _parseDefTypeRecord(startPos, typeName) {\n    this._match(T_RECORD);\n    let attributes = this._lexer.getPendingAttributes();\n    this._match(T_LBRACE);\n    let fieldNames = this._parseFieldNames();\n    let endPos = this._currentToken.startPos;\n    this._matchExpected(T_RBRACE, [T_FIELD, T_RBRACE]);\n    let result = new ASTDefType(typeName, [\n                   new ASTConstructorDeclaration(typeName, fieldNames)\n                 ]);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    result.attributes = attributes;\n    return result;\n  }\n\n  _parseDefTypeVariant(startPos, typeName) {\n    let constructorDeclarations = [];\n    this._match(T_VARIANT);\n    let attributes = this._lexer.getPendingAttributes();\n    this._match(T_LBRACE);\n    while (this._currentToken.tag === T_CASE) {\n      constructorDeclarations.push(this._parseConstructorDeclaration());\n    }\n    let endPos = this._currentToken.startPos;\n    this._matchExpected(T_RBRACE, [T_CASE, T_RBRACE]);\n    let result = new ASTDefType(typeName, constructorDeclarations);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    result.attributes = attributes;\n    return result;\n  }\n\n  _parseConstructorDeclaration() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_CASE);\n    let constructorName = this._parseUpperid();\n    this._match(T_LBRACE);\n    let fieldNames = this._parseFieldNames();\n    let endPos = this._currentToken.startPos;\n    this._matchExpected(T_RBRACE, [T_FIELD, T_RBRACE]);\n    let result = new ASTConstructorDeclaration(constructorName, fieldNames);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  _parseFieldNames() {\n    let fieldNames = [];\n    while (this._currentToken.tag === T_FIELD) {\n      this._match(T_FIELD);\n      fieldNames.push(this._parseLowerid());\n    }\n    return fieldNames;\n  }\n\n  /** Statements **/\n\n  /* Statement, optionally followed by semicolon */\n  _parseStatement() {\n    let statement = this._parsePureStatement();\n    if (this._currentToken.tag === T_SEMICOLON) {\n      this._match(T_SEMICOLON);\n    }\n    return statement;\n  }\n\n  /* Statement (not followed by semicolon) */\n  _parsePureStatement() {\n    switch (this._currentToken.tag) {\n      case T_ELLIPSIS:\n        return this._parseStmtEllipsis();\n      case T_RETURN:\n        return this._parseStmtReturn();\n      case T_IF:\n        return this._parseStmtIf(true /* expectInitialIf */);\n      case T_REPEAT:\n        return this._parseStmtRepeat();\n      case T_FOREACH:\n        return this._parseStmtForeach();\n      case T_WHILE:\n        return this._parseStmtWhile();\n      case T_SWITCH:\n        return this._parseStmtSwitch();\n      case T_LET:\n        return this._parseStmtLet();\n      case T_LBRACE:\n        return this._parseStmtBlock();\n      case T_LOWERID:\n        return this._parseStmtAssignVariable();\n      case T_UPPERID:\n        return this._parseStmtProcedureCall();\n      case T_LPAREN:\n        /* Special error for rejecting tuple assignments\n         *   (x1, ..., xN) := expression\n         * in favour of\n         *   let (x1, ..., xN) := expression\n         */\n        return fail(\n          this._currentToken.startPos, this._currentToken.endPos,\n          'obsolete-tuple-assignment', []\n        );\n      default:\n        return fail(\n          this._currentToken.startPos, this._currentToken.endPos,\n          'expected-but-found', [\n            i18n('statement'),\n            i18n(Symbol.keyFor(this._currentToken.tag))\n          ]\n        );\n    }\n  }\n\n  _parseStmtBlock() {\n    let startPos = this._currentToken.startPos;\n    let statements = [];\n    this._match(T_LBRACE);\n    while (this._currentToken.tag !== T_RBRACE) {\n      statements.push(this._parseStatement());\n      if (this._currentToken === T_SEMICOLON) {\n        this._match(T_SEMICOLON);\n      }\n    }\n    let endPos = this._currentToken.startPos;\n    this._match(T_RBRACE);\n    let result = new ASTStmtBlock(statements);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  _parseStmtEllipsis() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_ELLIPSIS);\n    let result = new ASTStmtProcedureCall(\n      new Token(T_UPPERID, i18n('PRIM:BOOM'), startPos, startPos), [\n        new ASTExprConstantString(\n          new Token(T_STRING, i18n('errmsg:ellipsis'))\n        )\n      ]\n    );\n    result.startPos = startPos;\n    result.endPos = this._currentToken.startPos;\n    return result;\n  }\n\n  _parseStmtReturn() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_RETURN);\n    let tuple = this._parseExprTuple();\n    let result = new ASTStmtReturn(tuple);\n    result.startPos = startPos;\n    result.endPos = tuple.endPos;\n    return result;\n  }\n\n  _parseStmtIf(expectInitialIf) {\n    let startPos = this._currentToken.startPos;\n    if (expectInitialIf) {\n      this._match(T_IF);\n    }\n\n    this._match(T_LPAREN);\n    let condition = this._parseExpression();\n    this._match(T_RPAREN);\n    /* Optional 'then' */\n    if (this._currentToken.tag === T_THEN) {\n      this._match(T_THEN);\n    }\n    let thenBlock = this._parseStmtBlock();\n\n    let endPos;\n    let elseBlock;\n    if (this._currentToken.tag === T_ELSEIF) {\n      this._match(T_ELSEIF);\n      elseBlock = this._parseStmtIf(false /* expectInitialIf */);\n      endPos = elseBlock.endPos;\n    } else if (this._currentToken.tag === T_ELSE) {\n      this._match(T_ELSE);\n      elseBlock = this._parseStmtBlock();\n      endPos = elseBlock.endPos;\n    } else {\n      elseBlock = null;\n      endPos = thenBlock.endPos;\n    }\n    let result = new ASTStmtIf(condition, thenBlock, elseBlock);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  _parseStmtRepeat() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_REPEAT);\n    this._match(T_LPAREN);\n    let times = this._parseExpression();\n    this._match(T_RPAREN);\n    let body = this._parseStmtBlock();\n    let result = new ASTStmtRepeat(times, body);\n    result.startPos = startPos;\n    result.endPos = body.endPos;\n    return result;\n  }\n\n  _parseStmtForeach() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_FOREACH);\n    let pattern = this._parsePattern();\n    this._match(T_IN);\n    let range = this._parseExpression();\n    let body = this._parseStmtBlock();\n    let result = new ASTStmtForeach(pattern, range, body);\n    result.startPos = startPos;\n    result.endPos = body.endPos;\n    return result;\n  }\n\n  _parseStmtWhile() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_WHILE);\n    this._match(T_LPAREN);\n    let condition = this._parseExpression();\n    this._match(T_RPAREN);\n    let body = this._parseStmtBlock();\n    let result = new ASTStmtWhile(condition, body);\n    result.startPos = startPos;\n    result.endPos = body.endPos;\n    return result;\n  }\n\n  _parseStmtSwitch() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_SWITCH);\n    this._match(T_LPAREN);\n    let subject = this._parseExpression();\n    this._match(T_RPAREN);\n    if (this._currentToken.tag === T_TO) {\n      this._match(T_TO);\n    }\n    this._match(T_LBRACE);\n    let branches = this._parseSwitchBranches();\n    let endPos = this._currentToken.startPos;\n    this._match(T_RBRACE);\n    let result = new ASTStmtSwitch(subject, branches);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  _parseStmtLet() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_LET);\n    let result;\n    if (this._currentToken.tag === T_LOWERID) {\n      result = this._parseStmtAssignVariable();\n    } else if (this._currentToken.tag === T_LPAREN) {\n      result = this._parseStmtAssignTuple();\n    } else {\n      fail(\n        this._currentToken.startPos, this._currentToken.endPos,\n        'expected-but-found', [\n          i18n('<alternative>')(\n            i18n('T_LOWERID'),\n            i18n('T_LPAREN')\n          ),\n          i18n(Symbol.keyfor(this._currentToken.tag))\n        ]\n      );\n    }\n    result.startPos = startPos;\n    return result;\n  }\n\n  _parseStmtAssignVariable() {\n    let variable = this._parseLowerid();\n    this._match(T_ASSIGN);\n    let value = this._parseExpression();\n    let result = new ASTStmtAssignVariable(variable, value);\n    result.startPos = variable.startPos;\n    result.endPos = value.endPos;\n    return result;\n  }\n\n  _parseStmtAssignTuple() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_LPAREN);\n    let variables = this._parseLoweridSeq();\n    if (variables.length === 1) {\n      fail(\n        startPos, this._currentToken.endPos,\n        'assignment-tuple-cannot-be-singleton', []\n      );\n    }\n    this._match(T_RPAREN);\n    this._match(T_ASSIGN);\n    let value = this._parseExpression();\n    let result = new ASTStmtAssignTuple(variables, value);\n    result.startPos = startPos;\n    result.endPos = value.endPos;\n    return result;\n  }\n\n  _parseStmtProcedureCall() {\n    let procedureName = this._parseUpperid();\n    this._match(T_LPAREN);\n    let args = this._parseDelimitedSeq(\n                 T_RPAREN, T_COMMA,\n                 () => this._parseExpression()\n               );\n    let endPos = this._currentToken.startPos;\n    this._match(T_RPAREN);\n    let result = new ASTStmtProcedureCall(procedureName, args);\n    result.startPos = procedureName.startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  /** Patterns **/\n\n  _parsePattern() {\n    switch (this._currentToken.tag) {\n      case T_UNDERSCORE:\n        return this._parsePatternWildcard();\n      case T_LOWERID:\n        return this._parsePatternVariable();\n      case T_NUM: case T_MINUS:\n        return this._parsePatternNumber();\n      case T_UPPERID:\n        return this._parsePatternStructure();\n      case T_LPAREN:\n        return this._parsePatternTuple();\n      case T_TIMEOUT:\n        return this._parsePatternTimeout();\n      default:\n        return fail(\n          this._currentToken.startPos, this._currentToken.endPos,\n          'expected-but-found', [\n            i18n('pattern'),\n            i18n(Symbol.keyFor(this._currentToken.tag))\n          ]\n        );\n    }\n  }\n\n  _parsePatternWildcard() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_UNDERSCORE);\n    let result = new ASTPatternWildcard();\n    let endPos = startPos;\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  _parsePatternVariable() {\n    let startPos = this._currentToken.startPos;\n    let id = this._parseLowerid();\n    let result = new ASTPatternVariable(id);\n    result.startPos = startPos;\n    result.endPos = id.endPos;\n    return result;\n  }\n\n  _parsePatternNumber() {\n    let startPos = this._currentToken.startPos;\n    let sign = '';\n    if (this._currentToken.tag === T_MINUS) {\n      this._match(T_MINUS);\n      sign = '-';\n    }\n    let number = this._currentToken;\n    this._match(T_NUM);\n    let value = sign + number.value;\n    if (value === '-0') {\n      fail(\n        startPos, number.endPos,\n        'pattern-number-cannot-be-negative-zero', []\n      );\n    }\n    number = new Token(T_NUM, value, number.startPos, number.endPos);\n    let result = new ASTPatternNumber(number);\n    result.startPos = startPos;\n    result.endPos = number.endPos;\n    return result;\n  }\n\n  _parsePatternStructure() {\n    let startPos = this._currentToken.startPos;\n    let endPos = this._currentToken.startPos;\n    let constructor = this._parseUpperid();\n    let parameters;\n    if (this._currentToken.tag === T_LPAREN) {\n      this._match(T_LPAREN);\n      parameters = this._parseLoweridSeq();\n      endPos = this._currentToken.startPos;\n      this._match(T_RPAREN);\n    } else {\n      parameters = [];\n    }\n    let result = new ASTPatternStructure(constructor, parameters);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  _parsePatternTuple() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_LPAREN);\n    let parameters = this._parseLoweridSeq();\n    if (parameters.length === 1) {\n      fail(\n        startPos, this._currentToken.endPos,\n        'pattern-tuple-cannot-be-singleton', []\n      );\n    }\n    let endPos = this._currentToken.startPos;\n    this._match(T_RPAREN);\n    let result = new ASTPatternTuple(parameters);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  _parsePatternTimeout() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_TIMEOUT);\n    this._match(T_LPAREN);\n    let timeout = this._currentToken;\n    this._match(T_NUM);\n    let endPos = this._currentToken.startPos;\n    this._match(T_RPAREN);\n    let result = new ASTPatternTimeout(timeout);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  /** Expressions **/\n\n  _parseExpression() {\n    return this._parseExprOperator(0);\n  }\n\n  /* Read an expression of the given level.\n   *\n   * If the list OPERATORS of precedence levels has N elements, then:\n   * - Expressions of level 0 are arbitrary expressions.\n   * - Expressions of level N are atomic expressions.\n   * - In general, expressions of level I involve operators\n   *   of levels I, I+1, ..., N-1,\n   *   and they can only include operators of the lower levels\n   *   by surrounding them in parentheses.\n   */\n  _parseExprOperator(level) {\n    if (level === OPERATORS.length) {\n      return this._parseExprAtom();\n    }\n    switch (OPERATORS[level].fixity) {\n      case Infix:\n        return this._parseExprOperatorInfix(level);\n      case InfixL:\n        return this._parseExprOperatorInfixL(level);\n      case InfixR:\n        return this._parseExprOperatorInfixR(level);\n      case Prefix:\n        return this._parseExprOperatorPrefix(level);\n      default:\n        throw Error('Invalid operator.');\n    }\n  }\n\n  _parseExprOperatorInfix(level) {\n    let left = this._parseExprOperator(level + 1);\n    if (OPERATORS[level].isOperator(this._currentToken)) {\n      let op = this._currentToken;\n      this._nextToken();\n      let right = this._parseExprOperator(level + 1);\n\n      /* Check that it is not used associatively */\n      if (OPERATORS[level].isOperator(this._currentToken)) {\n        fail(\n          this._currentToken.startPos, this._currentToken.endPos,\n          'operators-are-not-associative', [\n            i18n(Symbol.keyFor(op.tag)),\n            i18n(Symbol.keyFor(this._currentToken.tag))\n          ]\n        );\n      }\n\n      let result = new ASTExprFunctionCall(\n                     OPERATORS[level].functionName(op), [left, right]\n                   );\n      result.startPos = left.startPos;\n      result.endPos = right.endPos;\n      return result;\n    } else {\n      return left;\n    }\n  }\n\n  _parseExprOperatorInfixL(level) {\n    let result = this._parseExprOperator(level + 1);\n    while (OPERATORS[level].isOperator(this._currentToken)) {\n      let op = this._currentToken;\n      this._nextToken();\n      let right = this._parseExprOperator(level + 1);\n      let result2 = new ASTExprFunctionCall(\n                      OPERATORS[level].functionName(op), [result, right]\n                    );\n      result2.startPos = result.startPos;\n      result2.endPos = right.endPos;\n      result = result2;\n    }\n    return result;\n  }\n\n  _parseExprOperatorInfixR(level) {\n    let left = this._parseExprOperator(level + 1);\n    if (OPERATORS[level].isOperator(this._currentToken)) {\n      let op = this._currentToken;\n      this._nextToken();\n      let right = this._parseExprOperator(level); /* same level */\n      let result = new ASTExprFunctionCall(\n                      OPERATORS[level].functionName(op), [left, right]\n                    );\n      result.startPos = left.startPos;\n      result.endPos = right.endPos;\n      return result;\n    } else {\n      return left;\n    }\n  }\n\n  _parseExprOperatorPrefix(level) {\n    if (OPERATORS[level].isOperator(this._currentToken)) {\n      let op = this._currentToken;\n      this._nextToken();\n      let inner = this._parseExprOperator(level); /* same level */\n      let result = new ASTExprFunctionCall(\n                      OPERATORS[level].functionName(op), [inner]\n                    );\n      result.startPos = op.startPos;\n      result.endPos = inner.endPos;\n      return result;\n    } else {\n      return this._parseExprOperator(level + 1);\n    }\n  }\n\n  /* Parse an atomic expression.\n   * I.e. all the operators must be surrounded by parentheses */\n  _parseExprAtom() {\n    switch (this._currentToken.tag) {\n      case T_ELLIPSIS:\n        return this._parseExprEllipsis();\n      case T_LOWERID:\n        return this._parseExprVariableOrFunctionCall();\n      case T_NUM:\n        return this._parseExprConstantNumber();\n      case T_STRING:\n        return this._parseExprConstantString();\n      case T_CHOOSE:\n        return this._parseExprChoose(true /* expectInitialChoose */);\n      case T_UPPERID:\n        return this._parseExprStructureOrStructureUpdate();\n      case T_LPAREN:\n        return this._parseExprTuple();\n      case T_LBRACK:\n        return this._parseExprListOrRange();\n      default:\n        return fail(\n          this._currentToken.startPos, this._currentToken.endPos,\n          'expected-but-found', [\n            i18n('expression'),\n            i18n(Symbol.keyFor(this._currentToken.tag))\n          ]\n        );\n    }\n  }\n\n  _parseExprEllipsis() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_ELLIPSIS);\n    let result = new ASTExprFunctionCall(\n      new Token(T_LOWERID, i18n('PRIM:boom'), startPos, startPos), [\n        new ASTExprConstantString(\n          new Token(T_STRING, i18n('errmsg:ellipsis'))\n        )\n      ]\n    );\n    result.startPos = startPos;\n    result.endPos = this._currentToken.startPos;\n    return result;\n  }\n\n  _parseExprVariableOrFunctionCall() {\n    let id = this._parseLowerid();\n    let result;\n    let endPos;\n    if (this._currentToken.tag === T_LPAREN) {\n      this._match(T_LPAREN);\n      let args = this._parseExpressionSeq(T_RPAREN);\n      result = new ASTExprFunctionCall(id, args);\n      endPos = this._currentToken.startPos;\n      this._match(T_RPAREN);\n    } else {\n      result = new ASTExprVariable(id);\n      endPos = id.endPos;\n    }\n    result.startPos = id.startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  _parseExprConstantNumber() {\n    let number = this._currentToken;\n    this._match(T_NUM);\n    let result = new ASTExprConstantNumber(number);\n    result.startPos = number.startPos;\n    result.endPos = number.endPos;\n    return result;\n  }\n\n  _parseExprConstantString() {\n    let string = this._currentToken;\n    this._match(T_STRING);\n    let result = new ASTExprConstantString(string);\n    result.startPos = string.startPos;\n    result.endPos = string.endPos;\n    return result;\n  }\n\n  _parseExprChoose(expectInitialChoose) {\n    let startPos = this._currentToken.startPos;\n    if (expectInitialChoose) {\n      this._match(T_CHOOSE);\n    }\n    let expr1 = this._parseExpression();\n    if (this._currentToken.tag === T_WHEN) {\n      this._match(T_WHEN);\n      this._match(T_LPAREN);\n      let condition = this._parseExpression();\n      this._match(T_RPAREN);\n      let expr2 = this._parseExprChoose(false /* expectInitialChoose */);\n      let result = new ASTExprChoose(condition, expr1, expr2);\n      result.startPos = startPos;\n      result.endPos = expr2.endPos;\n      return result;\n    } else {\n      let endPos = this._currentToken.endPos;\n      this._match(T_OTHERWISE);\n      expr1.startPos = startPos;\n      expr1.endPos = endPos;\n      return expr1;\n    }\n  }\n\n  /*\n   * Parse any of the following constructions:\n   * (1) Structure with no arguments: \"Norte\"\n   * (2) Structure with no arguments and explicit parentheses: \"Nil()\"\n   * (3) Structure with arguments: \"Coord(x <- 1, y <- 2)\"\n   * (4) Update structure with arguments: \"Coord(expression | x <- 2)\"\n   *\n   * Deciding between (3) and (4) unfortunately cannot be done with one\n   * token of lookahead, so after reading the constructor and a left\n   * parenthesis we resort to the following workaround:\n   *\n   * - Parse an expression.\n   * - If the next token is GETS (\"<-\") we are in case (3).\n   *   We must then ensure that the expression is just a variable\n   *   and recover its name.\n   * - If the next token is PIPE (\"|\") we are in case (4), and we go on.\n   */\n  _parseExprStructureOrStructureUpdate() {\n    let constructorName = this._parseUpperid();\n    if (this._currentToken.tag !== T_LPAREN) {\n      /* Structure with no arguments, e.g. \"Norte\" */\n      let result = new ASTExprStructure(constructorName, []);\n      result.startPos = constructorName.startPos;\n      result.endPos = constructorName.endPos;\n      return result;\n    }\n    this._match(T_LPAREN);\n    if (this._currentToken.tag === T_RPAREN) {\n      /* Structure with no arguments with explicit parentheses,\n       * e.g. \"Nil()\" */\n      let result = new ASTExprStructure(constructorName, []);\n      let endPos = this._currentToken.startPos;\n      this._match(T_RPAREN);\n      result.startPos = constructorName.startPos;\n      result.endPos = endPos;\n      return result;\n    }\n    let subject = this._parseExpression();\n    switch (this._currentToken.tag) {\n      case T_GETS:\n        if (subject.tag !== N_ExprVariable) {\n          fail(\n            this._currentToken.startPos, this._currentToken.endPos,\n            'expected-but-found', [\n              i18n('T_PIPE'),\n              i18n('T_GETS')\n            ]\n          );\n        }\n        return this._parseStructure(constructorName, subject.variableName);\n      case T_PIPE:\n        return this._parseStructureUpdate(constructorName, subject);\n      case T_COMMA: case T_RPAREN:\n        /* Issue a specific error message to deal with a common\n         * programming error, namely calling a procedure name\n         * where an expression is expected. */\n        return fail(\n          constructorName.startPos, constructorName.endPos,\n          'expected-but-found', [\n            i18n('expression'),\n            i18n('procedure call')\n          ]\n        );\n      default:\n        let expected;\n        if (subject.tag === N_ExprVariable) {\n          expected = i18n('<alternative>')([\n                       i18n('T_GETS'),\n                       i18n('T_PIPE')\n                     ]);\n        } else {\n          expected = i18n('T_PIPE');\n        }\n        return fail(\n          constructorName.startPos, constructorName.endPos,\n          'expected-but-found', [\n            expected,\n            i18n(Symbol.keyFor(this._currentToken.tag))\n          ]\n        );\n    }\n  }\n\n  /* Parse a structure   A(x1 <- expr1, ..., xN <- exprN)\n   * where N >= 1,\n   * assuming that  \"A(x1\" has already been read.\n   *\n   * - constructorName and fieldName1 correspond to \"A\" and \"x1\"\n   *   respectively.\n   */\n  _parseStructure(constructorName, fieldName1) {\n    /* Read \"<- expr1\" */\n    this._match(T_GETS);\n    let value1 = this._parseExpression();\n    let fieldBinding1 = new ASTFieldBinding(fieldName1, value1);\n    fieldBinding1.startPos = fieldName1.startPos;\n    fieldBinding1.endPos = value1.endPos;\n    /* Read \"x2 <- expr2, ..., xN <- exprN\" (this might be empty) */\n    let fieldBindings = this._parseNonEmptyDelimitedSeq(\n                          T_RPAREN, T_COMMA, [fieldBinding1],\n                          () => this._parseFieldBinding()\n                        );\n    /* Read \")\" */\n    let endPos = this._currentToken.startPos;\n    this._match(T_RPAREN);\n    /* Return an ExprStructure node */\n    let result = new ASTExprStructure(constructorName, fieldBindings);\n    result.startPos = constructorName.startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  /* Parse a structure update  A(e | x1 <- expr1, ..., xN <- exprN)\n   * where N >= 1,\n   * assuming that \"A(e\" has already been read.\n   *\n   * constructorName and original correspond to \"A\" and \"e\"\n   * respectively.\n   */\n  _parseStructureUpdate(constructorName, original) {\n    /* Read \"|\" */\n    this._match(T_PIPE);\n    /* Read \"x2 <- expr2, ..., xN <- exprN\" (this might be empty) */\n    let fieldBindings = this._parseDelimitedSeq(\n                          T_RPAREN, T_COMMA,\n                          () => this._parseFieldBinding()\n                        );\n    /* Read \")\" */\n    let endPos = this._currentToken.startPos;\n    this._match(T_RPAREN);\n    /* Return an ExprStructureUpdate node */\n    let result = new ASTExprStructureUpdate(\n                      constructorName, original, fieldBindings\n                 );\n    result.startPos = constructorName.startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  /* Read a list\n   *   [expr1, ..., exprN]\n   * a range expression\n   *   [first .. last]\n   * or a range expression with step\n   *   [first, second .. last]\n   */\n  _parseExprListOrRange() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_LBRACK);\n    if (this._currentToken.tag === T_RBRACK) {\n      return this._parseExprListRemainder(startPos, []);\n    }\n    let first = this._parseExpression();\n    switch (this._currentToken.tag) {\n      case T_RBRACK:\n        return this._parseExprListRemainder(startPos, [first]);\n      case T_RANGE:\n        return this._parseExprRange(startPos, first, null);\n      case T_COMMA:\n        this._match(T_COMMA);\n        let second = this._parseExpression();\n        switch (this._currentToken.tag) {\n          case T_RBRACK:\n          case T_COMMA:\n            return this._parseExprListRemainder(startPos, [first, second]);\n          case T_RANGE:\n            return this._parseExprRange(startPos, first, second);\n          default:\n            return fail(\n              this._currentToken.startPos, this._currentToken.endPos,\n              'expected-but-found', [\n                i18n('<alternative>')([\n                  i18n('T_COMMA'),\n                  i18n('T_RANGE'),\n                  i18n('T_RBRACK')\n                ]),\n                i18n(Symbol.keyFor(this._currentToken.tag))\n              ]\n            );\n        }\n      default:\n        return fail(\n          this._currentToken.startPos, this._currentToken.endPos,\n          'expected-but-found', [\n            i18n('<alternative>')([\n              i18n('T_COMMA'),\n              i18n('T_RANGE'),\n              i18n('T_RBRACK')\n            ]),\n            i18n(Symbol.keyFor(this._currentToken.tag))\n          ]\n        );\n    }\n  }\n\n  /* Read the end of a list \"[expr1, ..., exprN]\" assumming we have\n   * already read \"[expr1, ..., exprK\" up to some point K >= 1.\n   * - startPos is the position of \"[\"\n   * - prefix is the list of elements we have already read\n   */\n  _parseExprListRemainder(startPos, prefix) {\n    let elements = this._parseNonEmptyDelimitedSeq(\n                     T_RBRACK, T_COMMA, prefix,\n                     () => this._parseExpression()\n                   );\n    let endPos = this._currentToken.startPos;\n    this._match(T_RBRACK);\n    let result = new ASTExprList(elements);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  /* Read a range \"[first..last]\" or \"[first,second..last]\"\n   * assumming we are left to read \"..last]\"\n   * - startPos is the position of \"[\".\n   * - second may be null */\n  _parseExprRange(startPos, first, second) {\n    this._match(T_RANGE);\n    let last = this._parseExpression();\n    let endPos = this._currentToken.startPos;\n    this._match(T_RBRACK);\n    let result = new ASTExprRange(first, second, last);\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  /* Read a list of expressions separated by commas and delimited\n   * by parentheses. If there is a single expression, return the\n   * expression itself. If there are 0 or >=2 expressions, return\n   * a tuple.\n   */\n  _parseExprTuple() {\n    let startPos = this._currentToken.startPos;\n    this._match(T_LPAREN);\n    let expressionList = this._parseExpressionSeq(T_RPAREN);\n    let endPos = this._currentToken.startPos;\n    this._match(T_RPAREN);\n\n    let result;\n    if (expressionList.length === 1) {\n      result = expressionList[0];\n    } else {\n      result = new ASTExprTuple(expressionList);\n    }\n    result.startPos = startPos;\n    result.endPos = endPos;\n    return result;\n  }\n\n  /** SwitchBranch **/\n\n  _parseSwitchBranches() {\n    let branches = [];\n    while (this._currentToken.tag !== T_RBRACE) {\n      branches.push(this._parseSwitchBranch());\n    }\n    return branches;\n  }\n\n  _parseSwitchBranch() {\n    let pattern = this._parsePattern();\n    this._match(T_ARROW);\n    let body = this._parseStmtBlock();\n    let result = new ASTSwitchBranch(pattern, body);\n    result.startPos = pattern.startPos;\n    result.endPos = body.endPos;\n    return result;\n  }\n\n  /** FieldBinding **/\n\n  _parseFieldBinding() {\n    let fieldName = this._parseLowerid();\n    this._match(T_GETS);\n    let value = this._parseExpression();\n    let result = new ASTFieldBinding(fieldName, value);\n    result.startPos = fieldName.startPos;\n    result.endPos = value.endPos;\n    return result;\n  }\n\n  /** Helpers **/\n\n  /* Advance to the next token */\n  _nextToken() {\n    this._currentToken = this._lexer.nextToken();\n  }\n\n  /* Check that the current token has the expected tag.\n   * Then advance to the next token. */\n  _match(tokenTag) {\n    if (this._currentToken.tag !== tokenTag) {\n      fail(\n        this._currentToken.startPos, this._currentToken.endPos,\n        'expected-but-found', [\n          i18n(Symbol.keyFor(tokenTag)),\n          i18n(Symbol.keyFor(this._currentToken.tag))\n        ]\n      );\n    }\n    this._nextToken();\n  }\n\n  /* Check that the current token has the expected tag.\n   * Then advance to the next token.\n   * Otherwise report that any of the alternatives in the tagList\n   * was expected.\n   */\n  _matchExpected(tokenTag, tagList) {\n    if (this._currentToken.tag !== tokenTag) {\n      fail(\n        this._currentToken.startPos, this._currentToken.endPos,\n        'expected-but-found', [\n          i18n('<alternative>')(\n            tagList.map(tag => i18n(Symbol.keyFor(tag)))\n          ),\n          i18n(Symbol.keyFor(this._currentToken.tag))\n        ]\n      );\n    }\n    this._nextToken();\n  }\n\n  /* Parse a delimited list:\n   *   rightDelimiter: token tag for the right delimiter\n   *   separator: token tag for the separator\n   *   parseElement: function that parses one element */\n  _parseDelimitedSeq(rightDelimiter, separator, parseElement) {\n    if (this._currentToken.tag === rightDelimiter) {\n      return []; /* Empty case */\n    }\n    let first = parseElement();\n    return this._parseNonEmptyDelimitedSeq(\n             rightDelimiter, separator, [first], parseElement\n           );\n  }\n\n  /* Parse a delimited list, assuming the first elements are already given.\n   *   rightDelimiter: token tag for the right delimiter\n   *   separator: token tag for the separator\n   *   prefix: non-empty list of all the first elements (already given)\n   *   parseElement: function that parses one element */\n  _parseNonEmptyDelimitedSeq(rightDelimiter, separator, prefix, parseElement) {\n    let list = prefix;\n    while (this._currentToken.tag === separator) {\n      this._match(separator);\n      list.push(parseElement());\n    }\n    if (this._currentToken.tag !== rightDelimiter) {\n      fail(\n        this._currentToken.startPos, this._currentToken.endPos,\n        'expected-but-found', [\n          i18n('<alternative>')([\n            i18n(Symbol.keyFor(separator)),\n            i18n(Symbol.keyFor(rightDelimiter))\n          ]),\n          i18n(Symbol.keyFor(this._currentToken.tag))\n        ]\n      );\n    }\n    return list;\n  }\n\n  _parseLowerid() {\n    let lowerid = this._currentToken;\n    this._match(T_LOWERID);\n    return lowerid;\n  }\n\n  _parseUpperid() {\n    let upperid = this._currentToken;\n    this._match(T_UPPERID);\n    return upperid;\n  }\n\n  _parseLoweridSeq() {\n    return this._parseDelimitedSeq(\n             T_RPAREN, T_COMMA, () => this._parseLowerid()\n           );\n  }\n\n  /* Parse a list of expressions delimited by the given right delimiter\n   * e.g. T_RPAREN or T_RBRACK, without consuming the delimiter. */\n  _parseExpressionSeq(rightDelimiter) {\n    return this._parseDelimitedSeq(\n             rightDelimiter, T_COMMA, () => this._parseExpression()\n           );\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/parser.js","import { i18n } from './i18n';\nimport { GbsWarning, GbsSyntaxError } from './exceptions';\nimport { MultifileReader } from './reader';\nimport {\n  Token, T_EOF, T_NUM, T_STRING, T_LOWERID, T_UPPERID,\n  /* Keywords */\n  T_PROGRAM, T_INTERACTIVE, T_PROCEDURE, T_FUNCTION, T_RETURN,\n  T_IF, T_THEN, T_ELSEIF, T_ELSE,\n  T_CHOOSE, T_WHEN, T_OTHERWISE,\n  T_REPEAT, T_FOREACH, T_IN, T_WHILE,\n  T_SWITCH, T_TO, T_LET, T_NOT, T_DIV, T_MOD, T_TYPE,\n  T_IS, T_RECORD, T_VARIANT, T_CASE, T_FIELD, T_UNDERSCORE,\n  T_TIMEOUT,\n  /* Symbols */\n  T_LPAREN, T_RPAREN, T_LBRACE, T_RBRACE, T_LBRACK, T_RBRACK, T_COMMA,\n  T_SEMICOLON, T_ELLIPSIS, T_RANGE, T_GETS, T_PIPE, T_ARROW, T_ASSIGN,\n  T_EQ, T_NE, T_LE, T_GE, T_LT, T_GT, T_AND, T_OR, T_CONCAT, T_PLUS,\n  T_MINUS, T_TIMES, T_POW\n} from './token';\n\nfunction isWhitespace(chr) {\n  return chr === ' '\n      || chr === '\\t'\n      || chr === '\\r'\n      || chr === '\\n';\n}\n\nfunction isDigit(chr) {\n  return '0' <= chr && chr <= '9';\n}\n\n/* We define a character to be alphabetic if it has two distinct forms:\n * an uppercase form and a lowercase form.\n *\n * This accepts alphabetic Unicode characters but rejects numbers and symbols.\n */\nfunction isAlpha(chr) {\n  return chr.toUpperCase(chr) !== chr.toLowerCase();\n}\n\n/* An uppercase character is an alphabetic character that coincides with\n * its uppercase form */\nfunction isUpper(chr) {\n  return isAlpha(chr) && chr.toUpperCase() === chr;\n}\n\n/* A lowercase character is an alphabetic character that coincides with\n * its lowercase form */\nfunction isLower(chr) {\n  return isAlpha(chr) && chr.toLowerCase() === chr;\n}\n\nfunction isIdent(chr) {\n  return isAlpha(chr) || isDigit(chr) || chr === '_' || chr === \"'\";\n}\n\nlet KEYWORDS = {\n  'program': T_PROGRAM,\n  'interactive': T_INTERACTIVE,\n  'procedure': T_PROCEDURE,\n  'function': T_FUNCTION,\n  'return': T_RETURN,\n  /* Control structures */\n  'if': T_IF,\n  'then': T_THEN,\n  'elseif': T_ELSEIF,\n  'else': T_ELSE,\n  'choose': T_CHOOSE,\n  'when': T_WHEN,\n  'otherwise': T_OTHERWISE,\n  'repeat': T_REPEAT,\n  'foreach': T_FOREACH,\n  'in': T_IN,\n  'while': T_WHILE,\n  'switch': T_SWITCH,\n  'to': T_TO,\n  /* Assignment */\n  'let': T_LET,\n  /* Operators */\n  'not': T_NOT,\n  'div': T_DIV,\n  'mod': T_MOD,\n  /* Records/variants */\n  'type': T_TYPE,\n  'is': T_IS,\n  'record': T_RECORD,\n  'variant': T_VARIANT,\n  'case': T_CASE,\n  'field': T_FIELD,\n  /* Default case in a switch/match */\n  '_': T_UNDERSCORE,\n};\n\n/* Pattern for timeouts in an interactive program */\nKEYWORDS[i18n('CONS:TIMEOUT')] = T_TIMEOUT;\n\n/* Note: the order is relevant so that the 'maximal munch' rule applies. */\nconst SYMBOLS = [\n  /* Various delimiters */\n  ['(', T_LPAREN],\n  [')', T_RPAREN],\n  ['{', T_LBRACE],\n  ['}', T_RBRACE],\n  ['[', T_LBRACK],     // For lists and ranges\n  [']', T_RBRACK],\n  [',', T_COMMA],\n  [';', T_SEMICOLON],\n  ['...', T_ELLIPSIS], // For intentionally incomplete programs\n  /* Range operator */\n  ['..', T_RANGE],\n  /* Assignment */\n  [':=', T_ASSIGN],\n  /* Logical operators */\n  ['&&', T_AND],\n  ['||', T_OR],\n  /* Fields */\n  ['<-', T_GETS],      // Field initializer, e.g. Coord(x <- 1, y <- 2)\n  ['|', T_PIPE],       // Field update, e.g. Coord(c | x <- 2)\n  /* Pattern matching */\n  ['->', T_ARROW],     // For the branches of a switch\n  /* Relational operators */\n  ['==', T_EQ],\n  ['/=', T_NE],\n  ['<=', T_LE],\n  ['>=', T_GE],\n  ['<', T_LT],\n  ['>', T_GT],\n  /* Functions */\n  ['++', T_CONCAT],\n  ['+', T_PLUS],\n  ['-', T_MINUS],\n  ['*', T_TIMES],\n  ['^', T_POW]\n];\n\n/* Valid language options accepted by the LANGUAGE pragma */\nconst LANGUAGE_OPTIONS = [\n  'DestructuringForeach',\n];\n\nfunction leadingZeroes(string) {\n  return string.length >= 0 && string[0] === '0';\n}\n\nfunction fail(startPos, endPos, reason, args) {\n  throw new GbsSyntaxError(startPos, endPos, reason, args);\n}\n\nconst CLOSING_DELIMITERS = {\n  '(': ')',\n  '[': ']',\n  '{': '}',\n};\n\n/* An instance of Lexer scans source code for tokens.\n * Example:\n *\n *     let tok = new Lexer('if (a)');\n *     tok.nextToken(); // ~~> new Token(T_IF, null, ...)\n *     tok.nextToken(); // ~~> new Token(T_LPAREN, null, ...)\n *     tok.nextToken(); // ~~> new Token(T_LOWERID, 'a', ...)\n *     tok.nextToken(); // ~~> new Token(T_RPAREN, null, ...)\n *     tok.nextToken(); // ~~> new Token(T_EOF, null, ...)\n *\n * The 'input' parameter is either a string or a mapping\n * from filenames to strings.\n */\nexport class Lexer {\n\n  constructor(input) {\n    this._multifileReader = new MultifileReader(input);\n    this._reader = this._multifileReader.readCurrentFile();\n    this._warnings = [];\n\n    /* A stack of tokens '(', '[' and '{', to provide more helpful\n     * error reporting if delimiters are not balanced. */\n    this._delimiterStack = [];\n\n    /* A dictionary of pending attributes, set by the ATTRIBUTE pragma.\n     * Pending attributes are used by the parser to decorate any procedure\n     * or function definition. */\n    this._pendingAttributes = {};\n\n    /* A list of language options, enabled by the LANGUAGE pragma.\n     * Language options are interpreted by the runner to initialize.\n     * the remaining modules (linter, compiler, runtime, ...)\n     * accordingly. */\n    this._languageOptions = [];\n  }\n\n  /* Return the next token from the input */\n  nextToken() {\n    if (!this._findNextToken()) {\n      let token = new Token(T_EOF, null, this._reader, this._reader);\n      this._checkBalancedDelimiters(token);\n      return token;\n    }\n    if (isDigit(this._reader.peek())) {\n      let startPos = this._reader;\n      let value = this._readStringWhile(isDigit);\n      let endPos = this._reader;\n      if (leadingZeroes(value) && value.length > 1) {\n        return fail(\n          startPos, endPos,\n          'numeric-constant-should-not-have-leading-zeroes', []\n        );\n      }\n      return new Token(T_NUM, value, startPos, endPos);\n    } else if (isIdent(this._reader.peek())) {\n      let startPos = this._reader;\n      let value = this._readStringWhile(isIdent);\n      let endPos = this._reader;\n      if (value in KEYWORDS) {\n        return new Token(KEYWORDS[value], value, startPos, endPos);\n      } else if (isUpper(value[0])) {\n        return new Token(T_UPPERID, value, startPos, endPos);\n      } else if (isLower(value[0])) {\n        return new Token(T_LOWERID, value, startPos, endPos);\n      } else {\n        return fail(\n          startPos, endPos,\n          'identifier-must-start-with-alphabetic-character', []\n        );\n      }\n    } else if (this._reader.peek() === '\"') {\n      return this._readStringConstant();\n    } else {\n      return this._readSymbol();\n    }\n  }\n\n  /* When tokenization is done, this function returns the list of all\n   * the warnings collected during tokenization */\n  warnings() {\n    return this._warnings;\n  }\n\n  /* Skip whitespace and advance through files until the start of the next\n   * token is found. Return false if EOF is found. */\n  _findNextToken() {\n    for (;;) {\n      this._ignoreWhitespaceAndComments();\n      if (!this._reader.eof()) {\n        break;\n      }\n      if (this._multifileReader.moreFiles()) {\n        this._multifileReader.nextFile();\n        this._reader = this._multifileReader.readCurrentFile();\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /* Read a string while the given condition holds for the current\n   * character */\n  _readStringWhile(condition) {\n    let result = [];\n    while (!this._reader.eof()) {\n      if (!condition(this._reader.peek())) {\n        break;\n      }\n      result.push(this._reader.peek());\n      this._reader = this._reader.consumeCharacter();\n    }\n    return result.join('');\n  }\n\n  /* Reads a quote-delimited string constant.\n   * Escapes are recognized. */\n  _readStringConstant() {\n    let startPos = this._reader;\n    let result = [];\n    this._reader = this._reader.consumeCharacter();\n    while (!this._reader.eof()) {\n      let c = this._reader.peek();\n      if (c === '\"') {\n        this._reader = this._reader.consumeCharacter();\n        return new Token(T_STRING, result.join(''), startPos, this._reader);\n      } else if (c === '\\\\') {\n        this._reader = this._reader.consumeCharacter();\n        if (this._reader.eof()) {\n          break;\n        }\n        let c2 = this._reader.peek();\n        this._reader = this._reader.consumeCharacter();\n        switch (c2) {\n          case 'a':\n            result.push('\\u0007');\n            break;\n          case 'b':\n            result.push('\\u0008');\n            break;\n          case 'f':\n            result.push('\\u000c');\n            break;\n          case 'n':\n            result.push('\\u000a');\n            break;\n          case 'r':\n            result.push('\\u000d');\n            break;\n          case 't':\n            result.push('\\u0009');\n            break;\n          case 'v':\n            result.push('\\u000b');\n            break;\n          default:\n            result.push(c2);\n            break;\n        }\n      } else {\n        result.push(c);\n        this._reader = this._reader.consumeCharacter();\n      }\n    }\n    return fail(startPos, this._reader, 'unclosed-string-constant', []);\n  }\n\n  /* Read a symbol */\n  _readSymbol() {\n    for (let [symbol, tag] of SYMBOLS) {\n      if (this._reader.startsWith(symbol)) {\n        let startPos = this._reader;\n        this._reader = this._reader.consumeString(symbol);\n        let endPos = this._reader;\n        let token = new Token(tag, symbol, startPos, endPos);\n        this._checkBalancedDelimiters(token);\n        return token;\n      }\n    }\n    return fail(\n      this._reader, this._reader,\n      'unknown-token', [this._reader.peek()]\n    );\n  }\n\n  _ignoreWhitespaceAndComments() {\n    while (this._ignoreWhitespace() || this._ignoreComments()) {\n      /* continue */\n    }\n  }\n\n  _ignoreWhitespace() {\n    if (!this._reader.eof() && isWhitespace(this._reader.peek())) {\n      this._reader = this._reader.consumeCharacter();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /* Skips comments and pragmas, returns false if there are no comments */\n  _ignoreComments() {\n    if (this._startSingleLineComment()) {\n      this._ignoreSingleLineComment();\n      return true;\n    } else if (this._reader.startsWith('/*@')) {\n      let startPos = this._reader;\n      this._evaluatePragma(startPos,\n                           this._readInvisiblePragma('/*', '*/', '@'));\n      return true;\n    } else if (this._reader.startsWith('{-')) {\n      this._ignoreMultilineComment('{-', '-}');\n      return true;\n    } else if (this._reader.startsWith('/*')) {\n      this._ignoreMultilineComment('/*', '*/');\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /* Returns true if a single-line comment starts here */\n  _startSingleLineComment() {\n    return this._reader.startsWith('--')\n        || this._reader.startsWith('//')\n        || this._reader.startsWith('#');\n  }\n\n  /* Skips a single-line comment */\n  _ignoreSingleLineComment() {\n    while (!this._reader.eof()) {\n      this._reader = this._reader.consumeCharacter();\n      if (this._reader.peek() === '\\n') {\n        break;\n      }\n    }\n  }\n\n  /* Skips a multiline comment with the given left/right delimiters.\n   * Multi-line comments may be nested. */\n  _ignoreMultilineComment(left, right) {\n    let nesting = 0;\n    let startPos = this._reader;\n    while (!this._reader.eof()) {\n      if (this._reader.startsWith(left)) {\n        this._reader = this._reader.consumeString(left);\n        nesting++;\n      } else if (this._reader.startsWith(right)) {\n        this._reader = this._reader.consumeString(right);\n        nesting--;\n        if (nesting === 0) {\n          return;\n        }\n      } else {\n        this._reader = this._reader.consumeCharacter();\n      }\n    }\n    fail(\n      startPos, this._reader,\n      'unclosed-multiline-comment', []\n    );\n  }\n\n  /* Read a pragma. A pragma is a comment delimited by the\n   * given left   / *\n   * and right    * /\n   * comment delimiters.\n   * It has N >= 0 parts delimited by the pragma delimiter   @\n   *   @part1@part2@...@partN@\n   */\n  _readInvisiblePragma(left, right, pragmaDelim) {\n    let pragma = [];\n    let startPos = this._reader;\n    this._reader = this._reader.consumeInvisibleString(left);\n    this._reader = this._reader.consumeInvisibleString(pragmaDelim);\n    while (!this._reader.eof()) {\n      pragma.push(this._readInvisibleStringUntilDelimiter(pragmaDelim));\n      this._reader = this._reader.consumeInvisibleString(pragmaDelim);\n      if (this._reader.startsWith(right)) {\n        this._reader = this._reader.consumeInvisibleString(right);\n        return pragma;\n      }\n    }\n    return fail(\n      startPos, this._reader,\n      'unclosed-multiline-comment', []\n    );\n  }\n\n  /* Read an invisible string until the given delimiter is found */\n  _readInvisibleStringUntilDelimiter(delimiter) {\n    let startPos = this._reader;\n    let result = [];\n    while (!this._reader.eof()) {\n      if (this._reader.peek() === delimiter) {\n        return result.join('');\n      }\n      result.push(this._reader.peek());\n      this._reader = this._reader.consumeInvisibleCharacter();\n    }\n    return fail(\n      startPos, this._reader,\n      'unclosed-multiline-comment', []\n    );\n  }\n\n  _evaluatePragma(startPos, pragma) {\n    if (pragma.length === 0) {\n      this._emitWarning(startPos, this._reader, 'empty-pragma', []);\n    } else if (pragma[0] === 'BEGIN_REGION') {\n      let region = pragma[1];\n      this._reader = this._reader.beginRegion(region);\n    } else if (pragma[0] === 'END_REGION') {\n      this._reader = this._reader.endRegion();\n    } else if (pragma[0] === 'ATTRIBUTE' && pragma.length >= 2) {\n      let key = pragma[1];\n      let value = pragma.slice(2, pragma.length).join('@');\n      this.setAttribute(key, value);\n    } else if (pragma[0] === 'LANGUAGE' && pragma.length === 2) {\n      let languageOption = pragma[1];\n      this.addLanguageOption(languageOption);\n    } else {\n      this._emitWarning(startPos, this._reader, 'unknown-pragma', [pragma[0]]);\n    }\n  }\n\n  _emitWarning(startPos, endPos, reason, args) {\n    this._warnings.push(new GbsWarning(startPos, endPos, reason, args));\n  }\n\n  /* Check that reading a delimiter keeps the delimiter stack balanced. */\n  _checkBalancedDelimiters(token) {\n    if (token.tag === T_EOF && this._delimiterStack.length > 0) {\n      let openingDelimiter = this._delimiterStack.pop();\n      fail(\n        openingDelimiter.startPos, openingDelimiter.endPos,\n        'unmatched-opening-delimiter',\n        [openingDelimiter.value]\n      );\n    } else if (token.tag === T_LPAREN\n            || token.tag === T_LBRACE\n            || token.tag === T_LBRACK) {\n      this._delimiterStack.push(token);\n    } else if (token.tag === T_RPAREN\n            || token.tag === T_RBRACE\n            || token.tag === T_RBRACK) {\n      if (this._delimiterStack.length === 0) {\n        fail(\n          token.startPos, token.endPos,\n          'unmatched-closing-delimiter',\n          [token.value]\n        );\n      }\n      let openingDelimiter = this._delimiterStack.pop();\n      if (CLOSING_DELIMITERS[openingDelimiter.value] !== token.value) {\n        fail(\n          openingDelimiter.startPos, openingDelimiter.endPos,\n          'unmatched-opening-delimiter',\n          [openingDelimiter.value]\n        );\n      }\n    }\n  }\n\n  /*\n   * Interface for handling attributes.\n   *\n   * The pragma ATTRIBUTE@key@value\n   * establishes the attribute given by <key> to <value>.\n   *\n   * Whenever the parser finds a definition of the following kinds:\n   *   procedure\n   *   function\n   *   program\n   *   interactive program\n   *   type\n   * it gets decorated with the pending attributes.\n   */\n  getPendingAttributes() {\n    let a = this._pendingAttributes;\n    this._pendingAttributes = {};\n    return a;\n  }\n\n  setAttribute(key, value) {\n    this._pendingAttributes[key] = value;\n  }\n\n  /*\n   * Interface for handling language options.\n   *\n   * The pragma LANGUAGE@option sets the given option.\n   *\n   * The runner module reads these options to initialize the\n   * linter/compiler/runtime.\n   */\n  getLanguageOptions() {\n    return this._languageOptions;\n  }\n\n  addLanguageOption(option) {\n    if (LANGUAGE_OPTIONS.indexOf(option) !== -1) {\n      this._languageOptions.push(option);\n    } else {\n      fail(this._reader, this._reader, 'unknown-language-option', [option]);\n    }\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/lexer.js","\nimport {\n  N_Main,\n  /* Definitions */\n  N_DefProgram,\n  N_DefInteractiveProgram,\n  N_DefProcedure,\n  N_DefFunction,\n  N_DefType,\n  /* Statements */\n  N_StmtBlock,\n  N_StmtReturn,\n  N_StmtIf,\n  N_StmtRepeat,\n  N_StmtForeach,\n  N_StmtWhile,\n  N_StmtSwitch,\n  N_StmtAssignVariable,\n  N_StmtAssignTuple,\n  N_StmtProcedureCall,\n  /* Patterns */\n  N_PatternWildcard,\n  N_PatternVariable,\n  N_PatternNumber,\n  N_PatternStructure,\n  N_PatternTuple,\n  N_PatternTimeout,\n  /* Expressions */\n  N_ExprVariable,\n  N_ExprConstantNumber,\n  N_ExprConstantString,\n  N_ExprChoose,\n  N_ExprList,\n  N_ExprRange,\n  N_ExprTuple,\n  N_ExprStructure,\n  N_ExprStructureUpdate,\n  N_ExprFunctionCall,\n  /* SwitchBranch: pattern -> body */\n  N_SwitchBranch,\n  /* FieldValue: field <- value */\n  N_FieldValue,\n  /* ConstructorDeclaration */\n  N_ConstructorDeclaration,\n} from './ast';\nimport { LocalParameter, LocalIndex, LocalVariable } from './symtable';\nimport { GbsSyntaxError } from './exceptions';\nimport { i18n } from './i18n';\n\nfunction isBlockWithReturn(stmt) {\n  return stmt.tag === N_StmtBlock\n      && stmt.statements.length > 0\n      && stmt.statements.slice(-1)[0].tag === N_StmtReturn;\n}\n\nfunction fail(startPos, endPos, reason, args) {\n  throw new GbsSyntaxError(startPos, endPos, reason, args);\n}\n\n/* A semantic analyzer receives\n *   a symbol table (instance of SymbolTable)\n *   an abstract syntax tree (the output of a parser)\n *\n * Then:\n *\n * - It performs semantic checks (linting) to ensure that the\n *   program is well-formed.\n *\n * - It builds a symbol table with information on global identifiers\n *   such as procedures, functions, types, constructors, and fields.\n *\n * - The semantic analysis is structured as a recursive visit over the\n *   AST.\n *\n * We assume that the AST is the valid output of a parser.\n */\nexport class Linter {\n\n  constructor(symtable) {\n    this._symtable = symtable;\n\n    /* All checks performed by the linter have an entry in this dictionary.\n     * The value of a check indicates whether it is enabled (true) or\n     * disabled (false).\n     *\n     * If a check is disabled, it does not produce a syntax error.\n     */\n    this._enabledLinterChecks = {\n      // Linter options\n      'source-should-have-a-program-definition': true,\n      'procedure-should-not-have-return': true,\n      'function-should-have-return': true,\n      'return-statement-not-allowed-here': true,\n      'wildcard-pattern-should-be-last': true,\n      'variable-pattern-should-be-last': true,\n      'structure-pattern-repeats-constructor': true,\n      'structure-pattern-repeats-tuple-arity': true,\n      'structure-pattern-repeats-timeout': true,\n      'pattern-does-not-match-type': true,\n      'patterns-in-interactive-program-must-be-events': true,\n      'patterns-in-switch-must-not-be-events': true,\n      'patterns-in-foreach-must-not-be-events': true,\n      'repeated-variable-in-tuple-assignment': true,\n      'constructor-used-as-procedure': true,\n      'undefined-procedure': true,\n      'procedure-arity-mismatch': true,\n      'numeric-pattern-repeats-number': true,\n      'structure-pattern-arity-mismatch': true,\n      'structure-construction-repeated-field': true,\n      'structure-construction-invalid-field': true,\n      'structure-construction-missing-field': true,\n      'structure-construction-cannot-be-an-event': true,\n      'undefined-function': true,\n      'function-arity-mismatch': true,\n      'type-used-as-constructor': true,\n      'procedure-used-as-constructor': true,\n      'undeclared-constructor': true,\n      // Extensions\n      'forbidden-extension-destructuring-foreach': true,\n    };\n  }\n\n  lint(ast) {\n    this._lintMain(ast);\n    return this._symtable;\n  }\n\n  _ensureLintCheckExists(linterCheckId) {\n    if (!(linterCheckId in this._enabledLinterChecks)) {\n      throw Error('Linter check \"' + linterCheckId + '\" does not exist.');\n    }\n  }\n\n  enableCheck(linterCheckId, enabled) {\n    this._ensureLintCheckExists(linterCheckId);\n    this._enabledLinterChecks[linterCheckId] = enabled;\n  }\n\n  _lintCheck(startPos, endPos, reason, args) {\n    this._ensureLintCheckExists(reason);\n    if (this._enabledLinterChecks[reason]) {\n      fail(startPos, endPos, reason, args);\n    }\n  }\n\n  _lintMain(ast) {\n    /* Collect all definitions into the symbol table.\n     * This should be done all together, before linting individual\n     * definitions, so all the names of types, constructors, fields, etc.\n     * are already known when checking statements and expressions. */\n    for (let definition of ast.definitions) {\n      this._addDefinitionToSymbolTable(definition);\n    }\n\n    /* The source should either be empty or have exactly one program */\n    if (ast.definitions.length > 0 && this._symtable.program === null) {\n      this._lintCheck(\n        ast.startPos, ast.endPos,\n        'source-should-have-a-program-definition', []\n      );\n    }\n\n    /* Lint individual definitions */\n    for (let definition of ast.definitions) {\n      this._lintDefinition(definition);\n    }\n  }\n\n  _addDefinitionToSymbolTable(definition) {\n    switch (definition.tag) {\n      case N_DefProgram:\n        return this._symtable.defProgram(definition);\n      case N_DefInteractiveProgram:\n        return this._symtable.defInteractiveProgram(definition);\n      case N_DefProcedure:\n        return this._symtable.defProcedure(definition);\n      case N_DefFunction:\n        return this._symtable.defFunction(definition);\n      case N_DefType:\n        return this._symtable.defType(definition);\n      default:\n        throw Error('Unknown definition: ' + Symbol.keyFor(definition.tag));\n    }\n  }\n\n  /** Definitions **/\n\n  _lintDefinition(definition) {\n    switch (definition.tag) {\n      case N_DefProgram:\n        return this._lintDefProgram(definition);\n      case N_DefInteractiveProgram:\n        return this._lintDefInteractiveProgram(definition);\n      case N_DefProcedure:\n        return this._lintDefProcedure(definition);\n      case N_DefFunction:\n        return this._lintDefFunction(definition);\n      case N_DefType:\n        return this._lintDefType(definition);\n      default:\n        throw Error(\n                'Linter: Definition not implemented: '\n              + Symbol.keyFor(definition.tag)\n              );\n    }\n  }\n\n  _lintDefProgram(definition) {\n    /* Lint body */\n    this._lintStmtBlock(definition.body, true /* allowReturn */);\n\n    /* Remove all local names */\n    this._symtable.exitScope();\n  }\n\n  _lintDefInteractiveProgram(definition) {\n    /* Lint all branches */\n    this._lintSwitchBranches(\n      definition.branches, true /* isInteractiveProgram */\n    );\n  }\n\n  _lintDefProcedure(definition) {\n    /* Check that it does not have a return statement */\n    if (isBlockWithReturn(definition.body)) {\n      this._lintCheck(\n        definition.startPos, definition.endPos,\n        'procedure-should-not-have-return', [definition.name.value]\n      );\n    }\n\n    /* Add parameters as local names */\n    for (let parameter of definition.parameters) {\n      this._symtable.addNewLocalName(parameter, LocalParameter);\n    }\n\n    /* Lint body */\n    this._lintStmtBlock(definition.body, false /* !allowReturn */);\n\n    /* Remove all local names */\n    this._symtable.exitScope();\n  }\n\n  _lintDefFunction(definition) {\n    /* Check that it has a return statement */\n    if (!isBlockWithReturn(definition.body)) {\n      this._lintCheck(\n        definition.startPos, definition.endPos,\n        'function-should-have-return', [definition.name.value]\n      );\n    }\n\n    /* Add parameters as local names */\n    for (let parameter of definition.parameters) {\n      this._symtable.addNewLocalName(parameter, LocalParameter);\n    }\n\n    /* Lint body */\n    this._lintStmtBlock(definition.body, true /* allowReturn */);\n\n    /* Remove all local names */\n    this._symtable.exitScope();\n  }\n\n  _lintDefType(definition) {\n    /* No restrictions */\n  }\n\n  /** Statements **/\n\n  _lintStatement(statement) {\n    switch (statement.tag) {\n      case N_StmtBlock:\n        /* Do not allow return in nested blocks */\n        return this._lintStmtBlock(statement, false /* !allowReturn */);\n      case N_StmtReturn:\n        return this._lintStmtReturn(statement);\n      case N_StmtIf:\n        return this._lintStmtIf(statement);\n      case N_StmtRepeat:\n        return this._lintStmtRepeat(statement);\n      case N_StmtForeach:\n        return this._lintStmtForeach(statement);\n      case N_StmtWhile:\n        return this._lintStmtWhile(statement);\n      case N_StmtSwitch:\n        return this._lintStmtSwitch(statement);\n      case N_StmtAssignVariable:\n        return this._lintStmtAssignVariable(statement);\n      case N_StmtAssignTuple:\n        return this._lintStmtAssignTuple(statement);\n      case N_StmtProcedureCall:\n        return this._lintStmtProcedureCall(statement);\n      default:\n        throw Error(\n                'Linter: Statement not implemented: '\n              + Symbol.keyFor(statement.tag)\n              );\n    }\n  }\n\n  _lintStmtBlock(block, allowReturn) {\n    let i = 0;\n    for (let statement of block.statements) {\n      let returnAllowed = allowReturn && i === block.statements.length - 1;\n      if (!returnAllowed && statement.tag === N_StmtReturn) {\n        this._lintCheck(\n          statement.startPos, statement.endPos,\n          'return-statement-not-allowed-here', []\n        );\n      }\n      this._lintStatement(statement);\n      i++;\n    }\n  }\n\n  _lintStmtReturn(statement) {\n    this._lintExpression(statement.result);\n  }\n\n  _lintStmtIf(statement) {\n    this._lintExpression(statement.condition);\n    this._lintStatement(statement.thenBlock);\n    if (statement.elseBlock !== null) {\n      this._lintStatement(statement.elseBlock);\n    }\n  }\n\n  _lintStmtRepeat(statement) {\n    this._lintExpression(statement.times);\n    this._lintStatement(statement.body);\n  }\n\n  _lintStmtForeach(statement) {\n    this._lintStmtForeachPattern(statement.pattern);\n    this._lintExpression(statement.range);\n    for (let variable of statement.pattern.boundVariables) {\n      this._symtable.addNewLocalName(variable, LocalIndex);\n    }\n    this._lintStatement(statement.body);\n    for (let variable of statement.pattern.boundVariables) {\n      this._symtable.removeLocalName(variable);\n    }\n  }\n\n  _lintStmtForeachPattern(pattern) {\n    /* If \"DestructuringForeach\" is disabled, forbid complex patterns.\n     * Allow only variable patterns (indices). */\n    if (pattern.tag !== N_PatternVariable) {\n      this._lintCheck(\n        pattern.startPos, pattern.endPos,\n        'forbidden-extension-destructuring-foreach', []\n      );\n    }\n\n    /* Check that the pattern itself is well-formed */\n    this._lintPattern(pattern);\n\n    /* The pattern in a foreach cannot be an event */\n    let patternType = this._patternType(pattern);\n    if (patternType === i18n('TYPE:Event')) {\n      this._lintCheck(\n        pattern.startPos, pattern.endPos,\n        'patterns-in-foreach-must-not-be-events', []\n      );\n    }\n  }\n\n  _lintStmtWhile(statement) {\n    this._lintExpression(statement.condition);\n    this._lintStatement(statement.body);\n  }\n\n  _lintStmtSwitch(statement) {\n    this._lintExpression(statement.subject);\n    this._lintSwitchBranches(\n      statement.branches, false /* !isInteractiveProgram */\n    );\n  }\n\n  _lintSwitchBranches(branches, isInteractiveProgram) {\n    /* Check that each pattern is well-formed */\n    for (let branch of branches) {\n      this._lintPattern(branch.pattern);\n    }\n\n    this._switchBranchesCheckWildcardAndVariable(branches);\n    this._switchBranchesCheckNoRepeats(branches);\n    this._switchBranchesCheckCompatible(branches);\n    if (isInteractiveProgram) {\n      this._switchBranchesCheckTypeEvent(branches);\n    } else {\n      this._switchBranchesCheckTypeNotEvent(branches);\n    }\n\n    /* Lint recursively each branch */\n    for (let branch of branches) {\n      this._lintSwitchBranchBody(branch);\n    }\n  }\n\n  /* Check that there is at most one wildcard/variable pattern at the end */\n  _switchBranchesCheckWildcardAndVariable(branches) {\n    let i = 0;\n    const n = branches.length;\n    for (let branch of branches) {\n      if (branch.pattern.tag === N_PatternWildcard && i !== n - 1) {\n        this._lintCheck(\n          branch.pattern.startPos, branch.pattern.endPos,\n          'wildcard-pattern-should-be-last', []\n        );\n      }\n      if (branch.pattern.tag === N_PatternVariable && i !== n - 1) {\n        this._lintCheck(\n          branch.pattern.startPos, branch.pattern.endPos,\n          'variable-pattern-should-be-last', [branch.pattern.variableName.value]\n        );\n      }\n      i++;\n    }\n  }\n\n  /* Check that there are no repeated constructors in a sequence\n   * of branches. */\n  _switchBranchesCheckNoRepeats(branches) {\n    let coveredNumbers = {};\n    let coveredConstructors = {};\n    let coveredTuples = {};\n    let coveredTimeout = false;\n    for (let branch of branches) {\n      switch (branch.pattern.tag) {\n        case N_PatternWildcard: case N_PatternVariable:\n          /* Already checked in _switchBranchesCheckWildcardAndVariable */\n          break;\n        case N_PatternNumber:\n          let number = branch.pattern.number.value;\n          if (number in coveredNumbers) {\n            this._lintCheck(\n              branch.pattern.startPos, branch.pattern.endPos,\n              'numeric-pattern-repeats-number', [number]\n            );\n          }\n          coveredNumbers[number] = true;\n          break;\n        case N_PatternStructure:\n          let constructorName = branch.pattern.constructorName.value;\n          if (constructorName in coveredConstructors) {\n            this._lintCheck(\n              branch.pattern.startPos, branch.pattern.endPos,\n              'structure-pattern-repeats-constructor', [constructorName]\n            );\n          }\n          coveredConstructors[constructorName] = true;\n          break;\n        case N_PatternTuple:\n          let arity = branch.pattern.boundVariables.length;\n          if (arity in coveredTuples) {\n            this._lintCheck(\n              branch.pattern.startPos, branch.pattern.endPos,\n              'structure-pattern-repeats-tuple-arity', [arity]\n            );\n          }\n          coveredTuples[arity] = true;\n          break;\n        case N_PatternTimeout:\n          if (coveredTimeout) {\n            this._lintCheck(\n              branch.pattern.startPos, branch.pattern.endPos,\n              'structure-pattern-repeats-timeout', []\n            );\n          }\n          coveredTimeout = true;\n          break;\n        default:\n          throw Error(\n                  'Linter: pattern \"'\n                + Symbol.keyFor(branch.pattern.tag)\n                + '\" not implemented.'\n                );\n      }\n    }\n  }\n\n  /* Check that constructors are compatible,\n   * i.e. that they belong to the same type */\n  _switchBranchesCheckCompatible(branches) {\n    let expectedType = null;\n    for (let branch of branches) {\n      let patternType = this._patternType(branch.pattern);\n      if (expectedType === null) {\n        expectedType = patternType;\n      } else if (patternType !== null && expectedType !== patternType) {\n        this._lintCheck(\n          branch.pattern.startPos, branch.pattern.endPos,\n          'pattern-does-not-match-type', [\n            i18n('<pattern-type>')(expectedType),\n            i18n('<pattern-type>')(patternType)\n          ]\n        );\n      }\n    }\n  }\n\n  /* Check that there are patterns are of type Event */\n  _switchBranchesCheckTypeEvent(branches) {\n    for (let branch of branches) {\n      let patternType = this._patternType(branch.pattern);\n      if (patternType !== null && patternType !== i18n('TYPE:Event')) {\n        this._lintCheck(\n          branch.pattern.startPos, branch.pattern.endPos,\n          'patterns-in-interactive-program-must-be-events', []\n        );\n      }\n    }\n  }\n\n  /* Check that there are no patterns of type Event */\n  _switchBranchesCheckTypeNotEvent(branches) {\n    for (let branch of branches) {\n      let patternType = this._patternType(branch.pattern);\n      if (patternType === i18n('TYPE:Event')) {\n        this._lintCheck(\n          branch.pattern.startPos, branch.pattern.endPos,\n          'patterns-in-switch-must-not-be-events', []\n        );\n      }\n    }\n  }\n\n  /* Recursively lint the body of each branch. Locally bind variables. */\n  _lintSwitchBranchBody(branch) {\n    for (let variable of branch.pattern.boundVariables) {\n      this._symtable.addNewLocalName(variable, LocalParameter);\n    }\n    this._lintStatement(branch.body);\n    for (let variable of branch.pattern.boundVariables) {\n      this._symtable.removeLocalName(variable);\n    }\n  }\n\n  /* Return a description of the type of a pattern */\n  _patternType(pattern) {\n    switch (pattern.tag) {\n      case N_PatternWildcard: case N_PatternVariable:\n        return null;\n      case N_PatternNumber:\n        return i18n('TYPE:Integer');\n      case N_PatternStructure:\n        return this._symtable.constructorType(pattern.constructorName.value);\n      case N_PatternTuple:\n        return '_TUPLE_' + pattern.boundVariables.length.toString();\n      case N_PatternTimeout:\n        return i18n('TYPE:Event');\n      default:\n        throw Error(\n                'Linter: pattern \"'\n              + Symbol.keyFor(pattern.tag)\n              + '\" not implemented.'\n              );\n    }\n  }\n\n  _lintStmtAssignVariable(statement) {\n    this._symtable.setLocalName(statement.variable, LocalVariable);\n    this._lintExpression(statement.value);\n  }\n\n  _lintStmtAssignTuple(statement) {\n    let variables = {};\n    for (let variable of statement.variables) {\n      this._symtable.setLocalName(variable, LocalVariable);\n      if (variable.value in variables) {\n        this._lintCheck(\n          variable.startPos, variable.endPos,\n          'repeated-variable-in-tuple-assignment', [variable.value]\n        );\n      }\n      variables[variable.value] = true;\n    }\n    this._lintExpression(statement.value);\n  }\n\n  _lintStmtProcedureCall(statement) {\n    let name = statement.procedureName.value;\n\n    /* Check that it is a procedure */\n    if (!this._symtable.isProcedure(name)) {\n      if (this._symtable.isConstructor(name)) {\n        this._lintCheck(\n          statement.startPos, statement.endPos,\n          'constructor-used-as-procedure', [\n            name,\n            this._symtable.constructorType(name)\n          ]\n        );\n      } else {\n        this._lintCheck(\n          statement.startPos, statement.endPos,\n          'undefined-procedure', [name]\n        );\n      }\n    }\n\n    /* Check that the number of argument coincides */\n    let expected = this._symtable.procedureParameters(name).length;\n    let received = statement.args.length;\n    if (expected !== received) {\n      this._lintCheck(\n        statement.startPos, statement.endPos,\n        'procedure-arity-mismatch', [\n          name,\n          expected,\n          received\n        ]\n      );\n    }\n\n    /* Check all the arguments */\n    for (let argument of statement.args) {\n      this._lintExpression(argument);\n    }\n  }\n\n  /** Patterns **/\n\n  _lintPattern(pattern) {\n    switch (pattern.tag) {\n      case N_PatternWildcard:\n        return this._lintPatternWildcard(pattern);\n      case N_PatternVariable:\n        return this._lintPatternVariable(pattern);\n      case N_PatternNumber:\n        return this._lintPatternNumber(pattern);\n      case N_PatternStructure:\n        return this._lintPatternStructure(pattern);\n      case N_PatternTuple:\n        return this._lintPatternTuple(pattern);\n      case N_PatternTimeout:\n        return this._lintPatternTimeout(pattern);\n      default:\n        throw Error(\n                'Linter: pattern \"'\n               + Symbol.keyFor(pattern.tag)\n               + '\" not implemented.'\n              );\n    }\n  }\n\n  _lintPatternWildcard(pattern) {\n    /* No restrictions */\n  }\n\n  _lintPatternVariable(pattern) {\n    /* No restrictions */\n  }\n\n  _lintPatternNumber(pattern) {\n    /* No restrictions */\n  }\n\n  _lintPatternStructure(pattern) {\n    let name = pattern.constructorName.value;\n\n    /* Check that the constructor exists */\n    if (!this._symtable.isConstructor(name)) {\n      this._failExpectedConstructorButGot(    // throws\n          pattern.startPos, pattern.endPos, name\n      );\n      return;\n    }\n\n    /* Check that the number of parameters match.\n     * Note: constructor patterns with 0 arguments are always allowed.\n     */\n    let expected = this._symtable.constructorFields(name).length;\n    let received = pattern.boundVariables.length;\n    if (received > 0 && expected !== received) {\n      this._lintCheck(\n        pattern.startPos, pattern.endPos,\n        'structure-pattern-arity-mismatch', [\n          name,\n          expected,\n          received\n        ]\n      );\n    }\n  }\n\n  _lintPatternTuple(pattern) {\n    /* No restrictions */\n  }\n\n  _lintPatternTimeout(pattern) {\n    /* No restrictions */\n  }\n\n  /** Expressions **/\n\n  _lintExpression(expression) {\n    switch (expression.tag) {\n      case N_ExprVariable:\n        return this._lintExprVariable(expression);\n      case N_ExprConstantNumber:\n        return this._lintExprConstantNumber(expression);\n      case N_ExprConstantString:\n        return this._lintExprConstantString(expression);\n      case N_ExprChoose:\n        return this._lintExprChoose(expression);\n      case N_ExprList:\n        return this._lintExprList(expression);\n      case N_ExprRange:\n        return this._lintExprRange(expression);\n      case N_ExprTuple:\n        return this._lintExprTuple(expression);\n      case N_ExprStructure:\n        return this._lintExprStructure(expression);\n      case N_ExprStructureUpdate:\n        return this._lintExprStructureUpdate(expression);\n      case N_ExprFunctionCall:\n        return this._lintExprFunctionCall(expression);\n      default:\n        throw Error(\n                'Linter: Expression not implemented: '\n              + Symbol.keyFor(expression.tag)\n              );\n    }\n  }\n\n  _lintExprVariable(expression) {\n    /* No restrictions.\n     * Note: the restriction that a variable is defined before it is used\n     * is a dynamic constraint . */\n  }\n\n  _lintExprConstantNumber(expression) {\n    /* No restrictions */\n  }\n\n  _lintExprConstantString(expression) {\n    /* No restrictions */\n  }\n\n  _lintExprChoose(expression) {\n    this._lintExpression(expression.condition);\n    this._lintExpression(expression.trueExpr);\n    this._lintExpression(expression.falseExpr);\n  }\n\n  _lintExprList(expression) {\n    for (let element of expression.elements) {\n      this._lintExpression(element);\n    }\n  }\n\n  _lintExprRange(expression) {\n    this._lintExpression(expression.first);\n    if (expression.second !== null) {\n      this._lintExpression(expression.second);\n    }\n    this._lintExpression(expression.last);\n  }\n\n  _lintExprTuple(expression) {\n    for (let element of expression.elements) {\n      this._lintExpression(element);\n    }\n  }\n\n  _lintExprStructure(expression) {\n    this._lintExprStructureOrUpdate(expression, null);\n  }\n\n  _lintExprStructureUpdate(expression) {\n    this._lintExprStructureOrUpdate(expression, expression.original);\n  }\n\n  /* Check a structure construction: C(x1 <- e1, ..., xN <- eN)\n   * or a structure update: C(original | x1 <- e1, ..., xN <- eN).\n   *\n   * If original is null, it is a structure construction.\n   * If original is not null, it is the updated expression.\n   * */\n  _lintExprStructureOrUpdate(expression, original) {\n    /* Check that constructor exists */\n    let constructorName = expression.constructorName.value;\n    if (!this._symtable.isConstructor(constructorName)) {\n      this._failExpectedConstructorButGot(    // throws\n        expression.startPos, expression.endPos, constructorName\n      );\n      return;\n    }\n\n    this._checkStructureTypeNotEvent(constructorName, expression);\n    this._checkStructureNoRepeatedFields(constructorName, expression);\n    this._checkStructureBindingsCorrect(constructorName, expression);\n\n    /* If it is a structure construction, check that the fields are complete */\n    if (original === null) {\n      this._checkStructureBindingsComplete(constructorName, expression);\n    }\n\n    /* If it is an update, recursively check the original expression */\n    if (original !== null) {\n      this._lintExpression(original);\n    }\n\n    /* Recursively check expressions in field bindings */\n    for (let fieldBinding of expression.fieldBindings) {\n      this._lintExpression(fieldBinding.value);\n    }\n  }\n\n  /* Check that there are no repeated fields in a structure\n   * construction/update */\n  _checkStructureNoRepeatedFields(constructorName, expression) {\n    let declaredFields = expression.fieldNames();\n    let seen = {};\n    for (let fieldName of declaredFields) {\n      if (fieldName in seen) {\n        this._lintCheck(\n          expression.startPos, expression.endPos,\n          'structure-construction-repeated-field', [\n           constructorName,\n           fieldName\n          ]\n        );\n      }\n      seen[fieldName] = true;\n    }\n  }\n\n  /* Check that all bindings in a structure construction/update\n   * correspond to existing fields */\n  _checkStructureBindingsCorrect(constructorName, expression) {\n    let declaredFields = expression.fieldNames();\n    let constructorFields = this._symtable.constructorFields(constructorName);\n    for (let fieldName of declaredFields) {\n      if (constructorFields.indexOf(fieldName) === -1) {\n        this._lintCheck(\n          expression.startPos, expression.endPos,\n          'structure-construction-invalid-field', [\n           constructorName,\n           fieldName\n          ]\n        );\n      }\n    }\n  }\n\n  /* Check that bindings in a structure construction/update\n   * cover all existing fields */\n  _checkStructureBindingsComplete(constructorName, expression) {\n    let declaredFields = expression.fieldNames();\n    let constructorFields = this._symtable.constructorFields(constructorName);\n    for (let fieldName of constructorFields) {\n      if (declaredFields.indexOf(fieldName) === -1) {\n        this._lintCheck(\n          expression.startPos, expression.endPos,\n          'structure-construction-missing-field', [\n           constructorName,\n           fieldName\n          ]\n        );\n      }\n    }\n  }\n\n  /* Check that a structure construction/update does not involve\n   * constructors of the Event type, which should only be\n   * handled implicitly in an interactive program. */\n  _checkStructureTypeNotEvent(constructorName, expression) {\n    let constructorType = this._symtable.constructorType(constructorName);\n    if (constructorType === i18n('TYPE:Event')) {\n      this._lintCheck(\n        expression.startPos, expression.endPos,\n        'structure-construction-cannot-be-an-event', [constructorName]\n      );\n    }\n  }\n\n  _lintExprFunctionCall(expression) {\n    /* Check that it is a function or a field */\n    let name = expression.functionName.value;\n    if (!this._symtable.isFunction(name) && !this._symtable.isField(name)) {\n      this._lintCheck(\n        expression.startPos, expression.endPos,\n        'undefined-function', [name]\n      );\n    }\n\n    /* Check that the number of argument coincides */\n    let expected;\n    if (this._symtable.isFunction(name)) {\n      expected = this._symtable.functionParameters(name).length;\n    } else {\n      /* Fields always have exactly one parameter */\n      expected = 1;\n    }\n    let received = expression.args.length;\n    if (expected !== received) {\n      this._lintCheck(\n        expression.startPos, expression.endPos,\n        'function-arity-mismatch', [\n          name,\n          expected,\n          received\n        ]\n      );\n    }\n\n    /* Recursively check arguments */\n    for (let argument of expression.args) {\n      this._lintExpression(argument);\n    }\n  }\n\n  /* Throw a syntax error indicating that we expected the name of a\n   * constructor, but we got a name which is not a constructor.\n   *\n   * If the name is a type or a procedure, provide a more helpful\n   * error message. (Coinciding constructor and procedure names are\n   * not forbidden, but it is probably a mistake). */\n  _failExpectedConstructorButGot(startPos, endPos, name) {\n    if (this._symtable.isType(name)) {\n      this._lintCheck(\n        startPos, endPos,\n        'type-used-as-constructor', [\n          name,\n          this._symtable.typeConstructors(name)\n        ]\n      );\n    } else if (this._symtable.isProcedure(name)) {\n      this._lintCheck(\n        startPos, endPos,\n        'procedure-used-as-constructor', [name]\n      );\n    } else {\n      this._lintCheck(\n        startPos, endPos,\n        'undeclared-constructor', [name]\n      );\n    }\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/linter.js","import {\n  N_Main,\n  /* Definitions */\n  N_DefProgram,\n  N_DefInteractiveProgram,\n  N_DefProcedure,\n  N_DefFunction,\n  N_DefType,\n  /* Statements */\n  N_StmtBlock,\n  N_StmtReturn,\n  N_StmtIf,\n  N_StmtRepeat,\n  N_StmtForeach,\n  N_StmtWhile,\n  N_StmtSwitch,\n  N_StmtAssignVariable,\n  N_StmtAssignTuple,\n  N_StmtProcedureCall,\n  /* Patterns */\n  N_PatternWildcard,\n  N_PatternVariable,\n  N_PatternNumber,\n  N_PatternStructure,\n  N_PatternTuple,\n  N_PatternTimeout,\n  /* Expressions */\n  N_ExprVariable,\n  N_ExprConstantNumber,\n  N_ExprConstantString,\n  N_ExprChoose,\n  N_ExprList,\n  N_ExprRange,\n  N_ExprTuple,\n  N_ExprStructure,\n  N_ExprStructureUpdate,\n  N_ExprFunctionCall,\n  /* SwitchBranch: pattern -> body */\n  N_SwitchBranch,\n  /* FieldValue: field <- value */\n  N_FieldValue,\n  /* ConstructorDeclaration */\n  N_ConstructorDeclaration,\n} from './ast';\nimport {\n  IPushInteger,\n  IPushString,\n  IPushVariable,\n  ISetVariable,\n  IUnsetVariable,\n  ILabel,\n  IJump,\n  IJumpIfFalse,\n  IJumpIfStructure,\n  IJumpIfTuple,\n  ICall,\n  IReturn,\n  IMakeTuple,\n  IMakeList,\n  IMakeStructure,\n  IUpdateStructure,\n  IReadTupleComponent,\n  IReadStructureField,\n  IReadStructureFieldPop,\n  IDup,\n  IPop,\n  IPrimitiveCall,\n  ISaveState,\n  IRestoreState,\n  ITypeCheck,\n  Code\n} from './instruction';\nimport {\n  TypeAny,\n  TypeInteger,\n  TypeTuple,\n  TypeStructure,\n  TypeList,\n} from './value';\nimport { RuntimePrimitives } from './runtime';\nimport { i18n } from './i18n';\n\n/*\n * A compiler receives a symbol table (instance of SymbolTable).\n *\n * The method this.compile(ast) receives an abstract syntax tree\n * (the output of a parser).\n *\n * The AST is expected to have been linted against the given symbol table.\n *\n * The compiler produces an instance of Code, representing code for the\n * virtual machine.\n *\n * Compiling a program should never throw an exception.\n * Exceptions thrown in this module correspond to assertions,\n * i.e. internal errors that should never occur.\n * - Static conditions should be checked beforehand during the\n *   parsing and linting phases.\n * - Runtime conditions are to be checked later, during execution.\n */\nexport class Compiler {\n\n  constructor(symtable) {\n    this._symtable = symtable;\n    this._code = new Code([]);\n    this._nextLabel = 0;\n    this._nextVariable = 0;\n    this._primitives = new RuntimePrimitives();\n  }\n\n  compile(ast) {\n    this._compileMain(ast);\n    return this._code;\n  }\n\n  _compileMain(ast) {\n    /* Accept the empty source */\n    if (ast.definitions.length === 0) {\n      this._produce(ast.startPos, ast.endPos,\n        new IReturn()\n      );\n      return;\n    }\n\n    /* Compile the program (or interactive program) */\n    for (let definition of ast.definitions) {\n      if (definition.tag === N_DefProgram) {\n        this._compileDefProgram(definition);\n      } else if (definition.tag === N_DefInteractiveProgram) {\n        this._compileDefInteractiveProgram(definition);\n      }\n    }\n\n    /* Compile procedures and functions */\n    for (let definition of ast.definitions) {\n      if (definition.tag === N_DefProcedure) {\n        this._compileDefProcedure(definition);\n      } else if (definition.tag === N_DefFunction) {\n        this._compileDefFunction(definition);\n      }\n    }\n  }\n\n  _compileDefProgram(definition) {\n    this._compileStatement(definition.body);\n    this._produce(definition.startPos, definition.endPos,\n      new IReturn()\n    );\n  }\n\n  /* An interactive program is compiled as a switch statement\n   * followed by a Return instruction. */\n  _compileDefInteractiveProgram(definition) {\n    this._compileMatchSwitchBranches(definition);\n    this._produce(\n      definition.startPos, definition.endPos,\n      new IReturn()\n    );\n  }\n\n  /* A procedure definition:\n   *\n   *   procedure P(x1, ..., xN) {\n   *     <body>\n   *   }\n   *\n   * is compiled as follows:\n   *\n   *   P:\n   *     SetVariable x1\n   *     ...\n   *     SetVariable xN\n   *     <body>\n   *     Return\n   */\n  _compileDefProcedure(definition) {\n    this._produce(\n      definition.startPos, definition.endPos,\n      new ILabel(definition.name.value)\n    );\n    for (let i = 0; i < definition.parameters.length; i++) {\n      let parameterName = definition.parameters[i].value;\n      this._produce(\n        definition.startPos, definition.endPos,\n        new ISetVariable(parameterName)\n      );\n    }\n    this._compileStatement(definition.body);\n    this._produce(\n      definition.startPos, definition.endPos,\n      new IReturn()\n    );\n  }\n\n  /* A function definition:\n   *\n   *   function f(x1, ..., xN) {\n   *     <body>\n   *   }\n   *\n   * is compiled as follows:\n   *\n   *   f:\n   *     SaveState\n   *     SetVariable x1\n   *     ...\n   *     SetVariable xN\n   *     <body>\n   *     RestoreState\n   *     Return\n   */\n  _compileDefFunction(definition) {\n    this._produceList(definition.startPos, definition.endPos, [\n      new ILabel(definition.name.value),\n      new ISaveState(),\n    ]);\n    for (let i = 0; i < definition.parameters.length; i++) {\n      let parameterName = definition.parameters[i].value;\n      this._produce(\n        definition.startPos, definition.endPos,\n        new ISetVariable(parameterName)\n      );\n    }\n    this._compileStatement(definition.body);\n    this._produceList(definition.startPos, definition.endPos, [\n      new IRestoreState(),\n      new IReturn(),\n    ]);\n  }\n\n  /* Statements are compiled to VM instructions that start and end\n   * with an empty local stack. The stack may grow and shrink during the\n   * execution of a statement, but it should be empty by the end.\n   *\n   * The only exception to this rule is the \"return\" statement, which\n   * pushes a single value on the stack.\n   */\n  _compileStatement(statement) {\n    switch (statement.tag) {\n      case N_StmtBlock:\n        return this._compileStmtBlock(statement);\n      case N_StmtReturn:\n        return this._compileStmtReturn(statement);\n      case N_StmtIf:\n        return this._compileStmtIf(statement);\n      case N_StmtRepeat:\n        return this._compileStmtRepeat(statement);\n      case N_StmtForeach:\n        return this._compileStmtForeach(statement);\n      case N_StmtWhile:\n        return this._compileStmtWhile(statement);\n      case N_StmtSwitch:\n        return this._compileStmtSwitch(statement);\n      case N_StmtAssignVariable:\n        return this._compileStmtAssignVariable(statement);\n      case N_StmtAssignTuple:\n        return this._compileStmtAssignTuple(statement);\n      case N_StmtProcedureCall:\n        return this._compileStmtProcedureCall(statement);\n      default:\n        throw Error(\n                'Compiler: Statement not implemented: '\n              + Symbol.keyFor(statement.tag)\n              );\n    }\n  }\n\n  _compileStmtBlock(block) {\n    for (let statement of block.statements) {\n      this._compileStatement(statement);\n    }\n  }\n\n  /* Merely push the return value in the stack.\n   * The \"new IReturn()\" instruction itself is produced by the\n   * methods:\n   *   _compileDefProgram\n   *   _compileDefInteractiveProgram\n   *   _compileDefProcedure\n   *   _compileDefFunction\n   * */\n  _compileStmtReturn(statement) {\n    return this._compileExpression(statement.result);\n  }\n\n  /*\n   * If without else:\n   *\n   *   <condition>\n   *   TypeCheck Bool\n   *   JumpIfFalse labelElse\n   *   <thenBranch>\n   *   labelElse:\n   *\n   * If with else:\n   *\n   *   <condition>\n   *   TypeCheck Bool\n   *   JumpIfFalse labelElse\n   *   <thenBranch>\n   *   Jump labelEnd\n   *   labelElse:\n   *   <elseBranch>\n   *   labelEnd:\n   */\n  _compileStmtIf(statement) {\n    this._compileExpression(statement.condition);\n    this._produce(statement.condition.startPos, statement.condition.endPos,\n      new ITypeCheck(new TypeStructure(i18n('TYPE:Bool'), {}))\n    );\n    let labelElse = this._freshLabel();\n    this._produce(statement.startPos, statement.endPos,\n      new IJumpIfFalse(labelElse)\n    );\n    this._compileStatement(statement.thenBlock);\n    if (statement.elseBlock === null) {\n      this._produce(statement.startPos, statement.endPos,\n        new ILabel(labelElse)\n      );\n    } else {\n      let labelEnd = this._freshLabel();\n      this._produceList(statement.startPos, statement.endPos, [\n        new IJump(labelEnd),\n        new ILabel(labelElse),\n      ]);\n      this._compileStatement(statement.elseBlock);\n      this._produce(statement.startPos, statement.endPos,\n        new ILabel(labelEnd)\n      );\n    }\n  }\n\n  /* <times>\n   * TypeCheck Integer\n   * labelStart:\n   *   Dup                     ;\\\n   *   PushInteger 0           ;| if not positive, end\n   *   PrimitiveCall \">\", 2    ;|\n   *   JumpIfFalse labelEnd    ;/\n   *   <body>\n   *   PushInteger 1           ;\\ subtract 1\n   *   PrimitiveCall \"-\", 2    ;/\n   * Jump labelStart\n   * labelEnd:\n   * Pop                       ; pop the remaining number\n   */\n  _compileStmtRepeat(statement) {\n    this._compileExpression(statement.times);\n    this._produce(statement.times.startPos, statement.times.endPos,\n      new ITypeCheck(new TypeInteger())\n    );\n    let labelStart = this._freshLabel();\n    let labelEnd = this._freshLabel();\n    this._produceList(statement.startPos, statement.endPos, [\n      new ILabel(labelStart),\n      new IDup(),\n      new IPushInteger(0),\n      new IPrimitiveCall('>', 2),\n      new IJumpIfFalse(labelEnd),\n    ]);\n    this._compileStatement(statement.body);\n    this._produceList(statement.startPos, statement.endPos, [\n      new IPushInteger(1),\n      new IPrimitiveCall('-', 2),\n      new IJump(labelStart),\n      new ILabel(labelEnd),\n      new IPop(),\n    ]);\n  }\n\n  /* <range>                   ;\\ _list = temporary variable\n   * TypeCheck List(Any)       ;| holding the list we are ranging over\n   * SetVariable _list         ;/\n   *\n   * PushVariable _list                    ;\\ _n = temporary variable\n   * PrimitiveCall \"_unsafeListLength\", 1  ;| holding the total length\n   * SetVariable _n                        ;/ of the list\n   *\n   * PushInteger 0             ;\\ _pos = temporary variable holding the\n   * SetVariable _pos          ;/ current index inside the list\n   *\n   * labelStart:\n   *   PushVariable _pos       ;\\\n   *   PushVariable _n         ;| if out of the bounds of the list, end\n   *   PrimitiveCall \"<\", 2    ;|\n   *   JumpIfFalse labelEnd    ;/\n   *\n   *   PushVariable _list                    ;\\ get the `pos`-th element of the\n   *   PushVariable _pos                     ;| list and match the value\n   *   PrimitiveCall \"_unsafeListNth\", 2     ;| with the pattern of the foreach\n   *   [match with the pattern or fail]      ;/\n   *\n   *   <body>\n   *\n   *   PushVariable _pos       ;\\\n   *   PushInteger 1           ;| add 1 to the current index\n   *   PrimitiveCall \"+\", 2    ;|\n   *   SetVariable _pos        ;/\n   *\n   * Jump labelStart\n   * labelEnd:\n   * UnsetVariable _list\n   * UnsetVariable _n\n   * UnsetVariable _pos\n   * [unset all the variables bound by the pattern]\n   */\n  _compileStmtForeach(statement) {\n    let labelStart = this._freshLabel();\n    let labelEnd = this._freshLabel();\n    let list = this._freshVariable();\n    let pos = this._freshVariable();\n    let n = this._freshVariable();\n\n    this._compileExpression(statement.range);\n    this._produceList(statement.range.startPos, statement.range.endPos, [\n      new ITypeCheck(new TypeList(new TypeAny())),\n      new ISetVariable(list),\n\n      new IPushVariable(list),\n      new IPrimitiveCall('_unsafeListLength', 1),\n      new ISetVariable(n),\n    ]);\n    this._produceList(statement.startPos, statement.endPos, [\n      new IPushInteger(0),\n      new ISetVariable(pos),\n\n      new ILabel(labelStart),\n      new IPushVariable(pos),\n      new IPushVariable(n),\n      new IPrimitiveCall('<', 2),\n      new IJumpIfFalse(labelEnd),\n\n      new IPushVariable(list),\n      new IPushVariable(pos),\n      new IPrimitiveCall('_unsafeListNth', 2),\n    ]);\n    this._compileMatchForeachPatternOrFail(statement.pattern);\n    this._compileStatement(statement.body);\n    this._produceList(statement.startPos, statement.endPos, [\n      new IPushVariable(pos),\n      new IPushInteger(1),\n      new IPrimitiveCall('+', 2),\n      new ISetVariable(pos),\n\n      new IJump(labelStart),\n\n      new ILabel(labelEnd),\n      new IUnsetVariable(list),\n      new IUnsetVariable(n),\n      new IUnsetVariable(pos),\n    ]);\n    this._compilePatternUnbind(statement.pattern);\n  }\n\n  /* Attempt to match the pattern against the top of the stack.\n   * If the pattern matches, bind its variables.\n   * Otherwise, issue an error message.\n   * Always pops the top of the stack.\n   */\n  _compileMatchForeachPatternOrFail(pattern) {\n    switch (pattern.tag) {\n      case N_PatternWildcard:\n        this._produce(pattern.startPos, pattern.endPos, new IPop());\n        return;\n      case N_PatternVariable:\n        this._produce(pattern.startPos, pattern.endPos,\n          new ISetVariable(pattern.variableName.value)\n        );\n        return;\n      default:\n        /* Attempt to match, issuing an error message if there is no match:\n         *\n         *   [if subject matches pattern, jump to L]\n         *   [error message: no match]\n         * L:\n         *   [bind pattern to subject]\n         *   [pop subject]\n         */\n        let label = this._freshLabel();\n        this._compilePatternCheck(pattern, label);\n        this._produceList(pattern.startPos, pattern.endPos, [\n          new IPushString('foreach-pattern-does-not-match'),\n          new IPrimitiveCall('_FAIL', 1),\n          new ILabel(label),\n        ]);\n        this._compilePatternBind(pattern);\n        this._produce(pattern.startPos, pattern.endPos, new IPop());\n        return;\n    }\n  }\n\n  /* labelStart:\n   * <condition>\n   * TypeCheck Bool\n   * JumpIfFalse labelEnd\n   * <body>\n   * Jump labelStart\n   * labelEnd:\n   */\n  _compileStmtWhile(statement) {\n    let labelStart = this._freshLabel();\n    let labelEnd = this._freshLabel();\n    this._produce(statement.startPos, statement.endPos,\n      new ILabel(labelStart)\n    );\n    this._compileExpression(statement.condition);\n    this._produceList(statement.startPos, statement.endPos, [\n      new ITypeCheck(new TypeStructure(i18n('TYPE:Bool'), {})),\n      new IJumpIfFalse(labelEnd),\n    ]);\n    this._compileStatement(statement.body);\n    this._produceList(statement.startPos, statement.endPos, [\n      new IJump(labelStart),\n      new ILabel(labelEnd),\n    ]);\n  }\n\n  /* If the branches of the switch are:\n   *    pattern1 -> body1\n   *    ...      -> ...\n   *    patternN -> bodyN\n   * the switch construction is compiled as follows:\n   *\n   * <subject>\n   *   [if matches pattern1, jump to label1]\n   *   ...\n   *   [if matches patternN, jump to labelN]\n   *   [error message: no match]\n   *\n   * label1:\n   *   [bind parameters in pattern1]\n   *   [pop subject]\n   *   <body1>\n   *   [unbind parameters in pattern1]\n   *   Jump labelEnd\n   * ...\n   * labelN:\n   *   [bind parameters in patternN]\n   *   [pop subject]\n   *   <bodyN>\n   *   [unbind parameters in patternN]\n   *   Jump labelEnd\n   * labelEnd:\n   */\n  _compileStmtSwitch(statement) {\n    /* Compile the subject */\n    this._compileExpression(statement.subject);\n    this._compileMatchSwitchBranches(statement);\n  }\n\n  _compileMatchSwitchBranches(statement) {\n    let branchLabels = [];\n    /* Attempt to match each pattern */\n    for (let branch of statement.branches) {\n      let label = this._freshLabel();\n      branchLabels.push(label);\n      this._compilePatternCheck(branch.pattern, label);\n    }\n\n    /* Issue an error message if there is no match */\n    this._produceList(statement.startPos, statement.endPos, [\n      new IPushString('switch-does-not-match'),\n      new IPrimitiveCall('_FAIL', 1),\n    ]);\n\n    /* Compile each branch */\n    let labelEnd = this._freshLabel();\n    for (let i = 0; i < branchLabels.length; i++) {\n      let branch = statement.branches[i];\n      let label = branchLabels[i];\n      this._produce(branch.startPos, branch.endPos, new ILabel(label));\n      this._compilePatternBind(branch.pattern);\n      this._produce(branch.startPos, branch.endPos, new IPop());\n      this._compileStatement(branch.body);\n      this._compilePatternUnbind(branch.pattern);\n      this._produce(branch.startPos, branch.endPos, new IJump(labelEnd));\n    }\n    this._produce(\n      statement.startPos, statement.endPos,\n      new ILabel(labelEnd)\n    );\n  }\n\n  _compileStmtAssignVariable(statement) {\n    this._compileExpression(statement.value);\n    this._produce(statement.startPos, statement.endPos,\n      new ISetVariable(statement.variable.value)\n    );\n  }\n\n  _compileStmtAssignTuple(statement) {\n    this._compileExpression(statement.value);\n\n    /* Check that the value is indeed a tuple of the expected length */\n    let anys = [];\n    for (let index = 0; index < statement.variables.length; index++) {\n      anys.push(new TypeAny());\n    }\n    let expectedType = new TypeTuple(anys);\n    this._produce(\n      statement.startPos, statement.endPos,\n      new ITypeCheck(expectedType)\n    );\n\n    /* Assign each variable */\n    for (let index = 0; index < statement.variables.length; index++) {\n      this._produceList(statement.startPos, statement.endPos, [\n        new IReadTupleComponent(index),\n        new ISetVariable(statement.variables[index].value)\n      ]);\n    }\n\n    /* Pop the tuple */\n    this._produce(\n      statement.startPos, statement.endPos,\n      new IPop()\n    );\n\n  }\n\n  /* There are two cases:\n   * (1) The procedure is a built-in primitive.\n   * (2) The procedure is a user-defined procedure.\n   */\n  _compileStmtProcedureCall(statement) {\n    let procedureName = statement.procedureName.value;\n    for (let argument of statement.args) {\n      this._compileExpression(argument);\n    }\n    if (this._primitives.isProcedure(procedureName)) {\n      this._compileStmtProcedureCallPrimitive(statement);\n    } else if (this._symtable.isProcedure(procedureName)) {\n      this._compileStmtProcedureCallUserDefined(statement);\n    } else {\n      throw Error(\n        'Compiler: ' + procedureName + ' is an undefined procedure.'\n      );\n    }\n  }\n\n  _compileStmtProcedureCallPrimitive(statement) {\n    this._produce(statement.startPos, statement.endPos,\n      new IPrimitiveCall(statement.procedureName.value, statement.args.length)\n    );\n  }\n\n  _compileStmtProcedureCallUserDefined(statement) {\n    this._produce(statement.startPos, statement.endPos,\n      new ICall(statement.procedureName.value, statement.args.length)\n    );\n  }\n\n  /* Pattern checks are instructions that check whether the\n   * top of the stack has the expected form (matching a given pattern)\n   * and, in that case, branching to the given label.\n   * The top of the stack is never popped.\n   * The arguments of a pattern are not bound by this instruction.\n   */\n  _compilePatternCheck(pattern, targetLabel) {\n    switch (pattern.tag) {\n      case N_PatternWildcard:\n        return this._compilePatternCheckWildcard(pattern, targetLabel);\n      case N_PatternVariable:\n        return this._compilePatternCheckVariable(pattern, targetLabel);\n      case N_PatternNumber:\n        return this._compilePatternCheckNumber(pattern, targetLabel);\n      case N_PatternStructure:\n        return this._compilePatternCheckStructure(pattern, targetLabel);\n      case N_PatternTuple:\n        return this._compilePatternCheckTuple(pattern, targetLabel);\n      case N_PatternTimeout:\n        return this._compilePatternCheckTimeout(pattern, targetLabel);\n      default:\n        throw Error(\n                'Compiler: Pattern check not implemented: '\n              + Symbol.keyFor(pattern.tag)\n              );\n    }\n  }\n\n  _compilePatternCheckWildcard(pattern, targetLabel) {\n    this._produce(\n      pattern.startPos, pattern.endPos,\n      new IJump(targetLabel)\n    );\n  }\n\n  _compilePatternCheckVariable(pattern, targetLabel) {\n    this._produce(\n      pattern.startPos, pattern.endPos,\n      new IJump(targetLabel)\n    );\n  }\n\n  _compilePatternCheckNumber(pattern, targetLabel) {\n    this._produceList(pattern.startPos, pattern.endPos, [\n      new IDup(),\n      new ITypeCheck(new TypeInteger()),\n      new IPushInteger(pattern.number.value),\n      new IPrimitiveCall('/=', 2),\n      new IJumpIfFalse(targetLabel),\n    ]);\n  }\n\n  _compilePatternCheckStructure(pattern, targetLabel) {\n    /* Check that the type of the value coincides with the type\n     * of the constructor */\n    let constructorName = pattern.constructorName.value;\n    let typeName = this._symtable.constructorType(constructorName);\n    let expectedType = new TypeStructure(typeName, {});\n    this._produce(\n      pattern.startPos, pattern.endPos,\n      new ITypeCheck(expectedType)\n    );\n\n    /* Jump if the value matches */\n    this._produce(\n      pattern.startPos, pattern.endPos,\n      new IJumpIfStructure(constructorName, targetLabel)\n    );\n  }\n\n  _compilePatternCheckTuple(pattern, targetLabel) {\n    /* Check that the type of the value coincides with the type\n     * of the tuple */\n    let anys = [];\n    for (let i = 0; i < pattern.boundVariables.length; i++) {\n      anys.push(new TypeAny());\n    }\n    let expectedType = new TypeTuple(anys);\n    this._produce(\n      pattern.startPos, pattern.endPos,\n      new ITypeCheck(expectedType)\n    );\n\n    /* Jump if the value matches */\n    this._produce(\n      pattern.startPos, pattern.endPos,\n      new IJumpIfTuple(pattern.boundVariables.length, targetLabel)\n    );\n  }\n\n  _compilePatternCheckTimeout(pattern, targetLabel) {\n    this._produce(\n      pattern.startPos, pattern.endPos,\n      new IJumpIfStructure(i18n('CONS:TIMEOUT'), targetLabel)\n    );\n  }\n\n  /* Pattern binding are instructions that bind the parameters\n   * of a pattern to the corresponding parts of the value currently\n   * at the top of the stack. The value at the top of the stack\n   * is never popped (it must be duplicated if necessary).\n   */\n  _compilePatternBind(pattern) {\n    switch (pattern.tag) {\n      case N_PatternWildcard:\n        return; /* No parameters to bind */\n      case N_PatternVariable:\n        this._compilePatternBindVariable(pattern);\n        return;\n      case N_PatternNumber:\n        return; /* No parameters to bind */\n      case N_PatternStructure:\n        this._compilePatternBindStructure(pattern);\n        return;\n      case N_PatternTuple:\n        this._compilePatternBindTuple(pattern);\n        return;\n      case N_PatternTimeout:\n        return; /* No parameters to bind */\n      default:\n        throw Error(\n                'Compiler: Pattern binding not implemented: '\n              + Symbol.keyFor(pattern.tag)\n              );\n    }\n  }\n\n  _compilePatternBindVariable(pattern) {\n    this._produceList(pattern.startPos, pattern.endPos, [\n      new IDup(),\n      new ISetVariable(pattern.variableName.value),\n    ]);\n  }\n\n  _compilePatternBindStructure(pattern) {\n    /* Allow structure pattern with no parameters, even if the constructor\n     * has parameters */\n    if (pattern.boundVariables.length === 0) {\n      return;\n    }\n\n    let constructorName = pattern.constructorName.value;\n    let fieldNames = this._symtable.constructorFields(constructorName);\n    for (let i = 0; i < fieldNames.length; i++) {\n      let variable = pattern.boundVariables[i];\n      let fieldName = fieldNames[i];\n      this._produceList(pattern.startPos, pattern.endPos, [\n        new IReadStructureField(fieldName),\n        new ISetVariable(variable.value),\n      ]);\n    }\n  }\n\n  _compilePatternBindTuple(pattern) {\n    for (let index = 0; index < pattern.boundVariables.length; index++) {\n      let variable = pattern.boundVariables[index];\n      this._produceList(pattern.startPos, pattern.endPos, [\n        new IReadTupleComponent(index),\n        new ISetVariable(variable.value),\n      ]);\n    }\n  }\n\n  /* Pattern unbinding are instructions that unbind the parameters\n   * of a pattern. */\n  _compilePatternUnbind(pattern) {\n    for (let variable of pattern.boundVariables) {\n      this._produceList(pattern.startPos, pattern.endPos, [\n        new IUnsetVariable(variable.value),\n      ]);\n    }\n  }\n\n  /* Expressions are compiled to instructions that make the size\n   * of the local stack grow in exactly one.\n   * The stack may grow and shrink during the evaluation of an\n   * expression, but an expression should not consume values\n   * that were present on the stack before its evaluation started.\n   * In the end the stack should have exactly one more value than\n   * at the start.\n   */\n  _compileExpression(expression) {\n    switch (expression.tag) {\n      case N_ExprVariable:\n        return this._compileExprVariable(expression);\n      case N_ExprConstantNumber:\n        return this._compileExprConstantNumber(expression);\n      case N_ExprConstantString:\n        return this._compileExprConstantString(expression);\n      case N_ExprChoose:\n        return this._compileExprChoose(expression);\n      case N_ExprList:\n        return this._compileExprList(expression);\n      case N_ExprRange:\n        return this._compileExprRange(expression);\n      case N_ExprTuple:\n        return this._compileExprTuple(expression);\n      case N_ExprStructure:\n        return this._compileExprStructure(expression);\n      case N_ExprStructureUpdate:\n        return this._compileExprStructureUpdate(expression);\n      case N_ExprFunctionCall:\n        return this._compileExprFunctionCall(expression);\n      default:\n        throw Error(\n                'Compiler: Expression not implemented: '\n              + Symbol.keyFor(expression.tag)\n              );\n      }\n  }\n\n  _compileExprVariable(expression) {\n    this._produce(expression.startPos, expression.endPos,\n      new IPushVariable(expression.variableName.value)\n    );\n  }\n\n  _compileExprConstantNumber(expression) {\n    this._produce(expression.startPos, expression.endPos,\n      new IPushInteger(expression.number.value)\n    );\n  }\n\n  _compileExprConstantString(expression) {\n    this._produce(expression.startPos, expression.endPos,\n      new IPushString(expression.string.value)\n    );\n  }\n\n  /*\n   * An expression of the form:\n   *\n   *   choose a when (cond) b otherwise\n   *\n   * is compiled similarly as a statement of the form:\n   *\n   *   if (cond) { a } else { b }\n   *\n   * Recall that a 'choose' with many branches:\n   *\n   *   choose a1 when (cond1)\n   *          ...\n   *          aN when (condN)\n   *          b  otherwise\n   *\n   * is actually parsed as a sequence of nested binary choose\n   * constructions:\n   *\n   *   choose a1 when (cond1)\n   *          (\n   *            ...\n   *            choose aN when (condN)\n   *                    b otherwise\n   *            ...\n   *          ) otherwise\n   *\n   */\n  _compileExprChoose(expression) {\n    this._compileExpression(expression.condition);\n    this._produce(expression.condition.startPos, expression.condition.endPos,\n      new ITypeCheck(new TypeStructure(i18n('TYPE:Bool'), {}))\n    );\n    let labelOtherwise = this._freshLabel();\n    this._produce(expression.startPos, expression.endPos,\n      new IJumpIfFalse(labelOtherwise)\n    );\n    this._compileExpression(expression.trueExpr);\n    let labelEnd = this._freshLabel();\n    this._produceList(expression.startPos, expression.endPos, [\n      new IJump(labelEnd),\n      new ILabel(labelOtherwise),\n    ]);\n    this._compileExpression(expression.falseExpr);\n    this._produce(expression.startPos, expression.endPos,\n      new ILabel(labelEnd)\n    );\n  }\n\n  _compileExprList(expression) {\n    for (let element of expression.elements) {\n      this._compileExpression(element);\n    }\n    this._produce(expression.startPos, expression.endPos,\n      new IMakeList(expression.elements.length)\n    );\n  }\n\n  /*\n   * Range expresions [first..last] and [first,second..last]\n   * are compiled by calling the primitive functions\n   *   _makeRange\n   *   _makeRangeWithSecond\n   */\n  _compileExprRange(expression) {\n    this._compileExpression(expression.first);\n    this._compileExpression(expression.last);\n    if (expression.second === null) {\n      this._produce(\n        expression.startPos, expression.endPos,\n        new IPrimitiveCall('_makeRange', 2)\n      );\n    } else {\n      this._compileExpression(expression.second);\n      this._produce(\n        expression.startPos, expression.endPos,\n        new IPrimitiveCall('_makeRangeWithSecond', 3)\n      );\n    }\n  }\n\n  _compileExprTuple(expression) {\n    for (let element of expression.elements) {\n      this._compileExpression(element);\n    }\n    this._produce(expression.startPos, expression.endPos,\n      new IMakeTuple(expression.elements.length)\n    );\n  }\n\n  _compileExprStructure(expression) {\n    let fieldNames = [];\n    for (let fieldBinding of expression.fieldBindings) {\n      this._compileExpression(fieldBinding.value);\n      fieldNames.push(fieldBinding.fieldName.value);\n    }\n    let constructorName = expression.constructorName.value;\n    let typeName = this._symtable.constructorType(constructorName);\n    this._produce(expression.startPos, expression.endPos,\n      new IMakeStructure(typeName, constructorName, fieldNames)\n    );\n  }\n\n  _compileExprStructureUpdate(expression) {\n    this._compileExpression(expression.original);\n    let fieldNames = [];\n    for (let fieldBinding of expression.fieldBindings) {\n      this._compileExpression(fieldBinding.value);\n      fieldNames.push(fieldBinding.fieldName.value);\n    }\n    let constructorName = expression.constructorName.value;\n    let typeName = this._symtable.constructorType(constructorName);\n    this._produce(expression.startPos, expression.endPos,\n      new IUpdateStructure(typeName, constructorName, fieldNames)\n    );\n  }\n\n  /* There are four cases:\n   * (1) The function is '&&' or '||' which must be considered separately\n   *     to account for short-circuting.\n   * (2) The function is a built-in primitive.\n   * (3) The function is a user-defined function.\n   * (4) The function is an observer / field accessor.\n   */\n  _compileExprFunctionCall(expression) {\n    let functionName = expression.functionName.value;\n    if (functionName === '&&') {\n      this._compileExprFunctionCallAnd(expression);\n    } else if (functionName === '||') {\n      this._compileExprFunctionCallOr(expression);\n    } else {\n      for (let argument of expression.args) {\n        this._compileExpression(argument);\n      }\n      if (this._primitives.isFunction(functionName)) {\n        this._compileExprFunctionCallPrimitive(expression);\n      } else if (this._symtable.isFunction(functionName)) {\n        this._compileExprFunctionCallUserDefined(expression);\n      } else if (this._symtable.isField(functionName)) {\n        this._compileExprFunctionCallFieldAccessor(expression);\n      } else {\n        throw Error(\n          'Compiler: ' + functionName + ' is an undefined function.'\n        );\n      }\n    }\n  }\n\n  /* <expr1>\n   * TypeCheck Bool\n   * JumpIfStructure 'False' labelEnd\n   * Pop\n   * <expr2>\n   * TypeCheck Bool\n   * labelEnd:\n   */\n  _compileExprFunctionCallAnd(expression) {\n    let expr1 = expression.args[0];\n    let expr2 = expression.args[1];\n    let labelEnd = this._freshLabel();\n    this._compileExpression(expr1);\n    this._produceList(expression.startPos, expression.endPos, [\n      new ITypeCheck(new TypeStructure(i18n('TYPE:Bool'), {})),\n      new IJumpIfStructure(i18n('CONS:False'), labelEnd),\n      new IPop(),\n    ]);\n    this._compileExpression(expr2);\n    this._produceList(expression.startPos, expression.endPos, [\n      new ITypeCheck(new TypeStructure(i18n('TYPE:Bool'), {})),\n      new ILabel(labelEnd),\n    ]);\n  }\n\n  /* <expr1>\n   * TypeCheck Bool\n   * JumpIfStructure 'True' labelEnd\n   * Pop\n   * <expr2>\n   * TypeCheck Bool\n   * labelEnd:\n   */\n  _compileExprFunctionCallOr(expression) {\n    let expr1 = expression.args[0];\n    let expr2 = expression.args[1];\n    let labelEnd = this._freshLabel();\n    this._compileExpression(expr1);\n    this._produceList(expression.startPos, expression.endPos, [\n      new ITypeCheck(new TypeStructure(i18n('TYPE:Bool'), {})),\n      new IJumpIfStructure(i18n('CONS:True'), labelEnd),\n      new IPop(),\n    ]);\n    this._compileExpression(expr2);\n    this._produceList(expression.startPos, expression.endPos, [\n      new ITypeCheck(new TypeStructure(i18n('TYPE:Bool'), {})),\n      new ILabel(labelEnd),\n    ]);\n  }\n\n  _compileExprFunctionCallPrimitive(expression) {\n    this._produce(expression.startPos, expression.endPos,\n      new IPrimitiveCall(expression.functionName.value, expression.args.length)\n    );\n  }\n\n  _compileExprFunctionCallUserDefined(expression) {\n    this._produce(expression.startPos, expression.endPos,\n      new ICall(expression.functionName.value, expression.args.length)\n    );\n  }\n\n  _compileExprFunctionCallFieldAccessor(expression) {\n    this._produceList(expression.startPos, expression.endPos, [\n      new IReadStructureFieldPop(expression.functionName.value),\n    ]);\n  }\n\n  /* Helpers */\n\n  /* Produce the given instruction, setting its starting and ending\n   * position to startPos and endPos respectively */\n  _produce(startPos, endPos, instruction) {\n    instruction.startPos = startPos;\n    instruction.endPos = endPos;\n    this._code.produce(instruction);\n  }\n\n  _produceList(startPos, endPos, instructions) {\n    for (let instruction of instructions) {\n      this._produce(startPos, endPos, instruction);\n    }\n  }\n\n  /* Create a fresh label name */\n  _freshLabel() {\n    let label = '_l' + this._nextLabel.toString();\n    this._nextLabel++;\n    return label;\n  }\n\n  /* Create a fresh local variable name */\n  _freshVariable() {\n    let v = '_v' + this._nextVariable.toString();\n    this._nextVariable++;\n    return v;\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/compiler.js","\nimport {\n  I_PushInteger,\n  I_PushString,\n  I_PushVariable,\n  I_SetVariable,\n  I_UnsetVariable,\n  I_Label,\n  I_Jump,\n  I_JumpIfFalse,\n  I_JumpIfStructure,\n  I_JumpIfTuple,\n  I_Call,\n  I_Return,\n  I_MakeTuple,\n  I_MakeList,\n  I_MakeStructure,\n  I_UpdateStructure,\n  I_ReadTupleComponent,\n  I_ReadStructureField,\n  I_ReadStructureFieldPop,\n  I_Add,\n  I_Dup,\n  I_Pop,\n  I_PrimitiveCall,\n  I_SaveState,\n  I_RestoreState,\n  I_TypeCheck,\n} from './instruction';\nimport {\n  V_Tuple,\n  V_Structure,\n  ValueInteger,\n  ValueString,\n  ValueTuple,\n  ValueList,\n  ValueStructure,\n  joinTypes,\n  TypeAny,\n} from './value';\nimport { GbsRuntimeError } from './exceptions';\nimport { i18n } from './i18n';\nimport { RuntimePrimitives } from './runtime';\n\n/* Conditions that may occur on runtime */\nconst RT_ExitProgram = Symbol.for('RT_ExitProgram');\n\n/* Instances of RuntimeCondition represent conditions that may occur\n * during runtime (e.g. program termination or timeout). */\nclass RuntimeCondition extends Error {\n  constructor(tag) {\n    super(Symbol.keyFor(tag));\n    this.tag = tag;\n  }\n}\n\n/* Runtime condition to mark the end of an execution */\nclass RuntimeExitProgram extends RuntimeCondition {\n  constructor(returnValue) {\n    super(RT_ExitProgram);\n    this.returnValue = returnValue;\n  }\n}\n\nfunction fail(startPos, endPos, reason, args) {\n  throw new GbsRuntimeError(startPos, endPos, reason, args);\n}\n\n/* An instance of Frame represents the local execution context of a\n * function or procedure (a.k.a. \"activation record\" or \"stack frame\").\n *\n * It includes:\n * - the name of the current routine:\n *   + 'program' for the main program\n *   + the name of the current procedure or function\n * - the current instruction pointer\n * - a stack of local values\n * - a map from local names to values\n */\nclass Frame {\n\n  constructor(frameId, routineName, instructionPointer) {\n    this._routineName = routineName;\n    this._instructionPointer = instructionPointer;\n    this._variables = {};\n    this._stack = [];\n\n    /* The unique frame identifier is used to uniquely identify\n     * a function call during a stack trace. This is used in the\n     * API to generate snapshots. */\n    this._uniqueFrameId = frameId;\n  }\n\n  get routineName() {\n    return this._routineName;\n  }\n\n  get uniqueFrameId() {\n    return this._uniqueFrameId;\n  }\n\n  get instructionPointer() {\n    return this._instructionPointer;\n  }\n\n  set instructionPointer(value) {\n    this._instructionPointer = value;\n  }\n\n  setVariable(name, value) {\n    this._variables[name] = value;\n  }\n\n  unsetVariable(name, value) {\n    delete this._variables[name];\n  }\n\n  getVariable(name) {\n    if (name in this._variables) {\n      return this._variables[name];\n    } else {\n      return null;\n    }\n  }\n\n  stackEmpty() {\n    return this._stack.length === 0;\n  }\n\n  pushValue(value) {\n    this._stack.push(value);\n  }\n\n  stackTop() {\n    if (this._stack.length === 0) {\n      throw Error('VM: no value at the top of the stack; the stack is empty.');\n    }\n    return this._stack[this._stack.length - 1];\n  }\n\n  popValue() {\n    if (this._stack.length === 0) {\n      throw Error('VM: no value to pop; the stack is empty.');\n    }\n    return this._stack.pop();\n  }\n\n}\n\n/*\n * Receives an instance of Code, representing a program for the virtual\n * machine, and sets it up for running.\n *\n * Then it implements the following interface:\n *\n *   vm.run();    Run the program until termination.\n *                If the program returns a value, this method\n *                returns it. Otherwise it returns null.\n */\nexport class VirtualMachine {\n\n  constructor(code, initialState) {\n    this._code = code;\n\n    /* \"this._labelTargets\" is a dictionary mapping label names to\n     * the corresponding instruction pointers.\n     *\n     * It is calculated automatically from code.\n     */\n    this._labelTargets = this._code.labelTargets();\n\n    this._nextFrameId = 0;\n\n    /* A \"call stack\" is a stack of frames.\n     *\n     * The topmost element of the stack (i.e. the last element of the list)\n     * is the execution context of the current function.\n     *\n     * The previous element is the execution context of the caller, and so on.\n     *\n     * During the execution of a program the call stack should never\n     * become empty.\n     */\n    this._callStack = [];\n    this._callStack.push(\n      this._newFrame('program', 0 /* instructionPointer */)\n    );\n\n    /* The global state is the data that is available globally.\n     *\n     * In Gobstones, the global state is the board. The VM module\n     * should not be aware of the actual implementation or nature of\n     * the global state.\n     *\n     * We have a stack of global states.\n     *\n     * The instruction 'SaveState' saves the current global state.\n     * It should be called whenever entering a user-defined function\n     * in Gobstones.\n     *\n     * The instruction 'RestoreState' restores the previous global state.\n     * It should be called whenever leaving a user-defined function\n     * in Gobstones.\n     */\n    this._globalStateStack = [initialState];\n\n    /* The following dictionary maps names of primitives to their\n     * implementation.\n     *\n     * A primitive always receives 1 + n parameters, the first one being\n     * the board.\n     */\n    this._primitives = new RuntimePrimitives();\n\n    /*\n     * A \"snapshot callback\" is a function that takes snapshots.\n     *\n     *   snapshotCallback(routineName, position, callStack, globalState)\n     *\n     *   routineName:\n     *     It is the name of the routine that triggers the\n     *     snapshot, it might be:\n     *     - 'program' for the main program,\n     *     - the name of a primitive procedure or function,\n     *     - the name of a user-defined procedure or function.\n     *\n     *   position:\n     *     The position in the source code for this snapshot.\n     *\n     *   callStack:\n     *     The current call stack.\n     *\n     *   globalState:\n     *     The current global state.\n     *\n     * Snapshots\n     * If _snapshotCallback is null, the VM does not take snapshots.\n     */\n    this._snapshotCallback = null;\n\n  }\n\n  run() {\n    return this.runWithTimeout(0);\n  }\n\n  /* Run the program, throwing an exception if the given timeout is met.\n   * If millisecs is 0, the program is run indefinitely. */\n  runWithTimeout(millisecs) {\n    return this.runWithTimeoutTakingSnapshots(millisecs, null);\n  }\n\n  /* Restart the program from the beginning, with the given eventValue\n   * at the top of the stack.\n   *\n   * This is used for interactive programs, which work by iteratively\n   * making calls to this function.\n   */\n  runEventWithTimeout(eventValue, millisecs) {\n    this._callStack = [\n      this._newFrame('program', 0 /* instructionPointer */)\n    ];\n    this._currentFrame().pushValue(eventValue);\n    return this.runWithTimeout(millisecs);\n  }\n\n  /* Run the program, throwing an exception if the given timeout is met.\n   * If millisecs is 0, the program is run indefinitely.\n   *\n   * Snapshots are taken:\n   * - At the very start of the program.\n   * - At the end of the program.\n   * - After calling any primitive procedure or function.\n   * - Whenever reaching an I_Return instruction from any routine.\n   *\n   * The snapshotCallback function receives:\n   * - The current call stack (list of frames).\n   * - The current global state.\n   */\n  runWithTimeoutTakingSnapshots(millisecs, snapshotCallback) {\n    let startTime = new Date().getTime();\n    this._snapshotCallback = snapshotCallback;\n    this._takeSnapshot('program');\n    try {\n      while (true) {\n        this._step();\n        this._timeoutIfNeeded(startTime, millisecs);\n      }\n    } catch (condition) {\n      if (condition.tag === RT_ExitProgram) {\n        return condition.returnValue;\n      } else {\n        throw condition;\n      }\n    }\n  }\n\n  _newFrame(routineName, instructionPointer) {\n    let frameId = this._nextFrameId;\n    this._nextFrameId++;\n    return new Frame(frameId, routineName, instructionPointer);\n  }\n\n  _timeoutIfNeeded(startTime, millisecs) {\n    if (millisecs > 0 && (new Date().getTime() - startTime) > millisecs) {\n      let instruction = this._currentInstruction();\n      fail(instruction.startPos, instruction.endPos, 'timeout', [millisecs]);\n    }\n  }\n\n  _takeSnapshot(routineName) {\n    if (this._snapshotCallback !== null) {\n      let instruction = this._currentInstruction();\n      this._snapshotCallback(\n        routineName, instruction.startPos, this._callStack, this.globalState()\n      );\n    }\n  }\n\n  globalState() {\n    return this._globalStateStack[this._globalStateStack.length - 1];\n  }\n\n  setGlobalState(globalState) {\n    this._globalStateStack[this._globalStateStack.length - 1] = globalState;\n  }\n\n  /* Return the current frame, which is the top of the call stack */\n  _currentFrame() {\n    return this._callStack[this._callStack.length - 1];\n  }\n\n  /* Return the current instruction, given by the instruction pointer\n   * of the current activation record */\n  _currentInstruction() {\n    return this._code.at(this._currentFrame().instructionPointer);\n  }\n\n  /* Execute a single instruction.\n   *\n   * If the program finishes, it throws an exception\n   *   RuntimeExitProgram(returnValue)\n   */\n  _step() {\n    switch (this._currentInstruction().opcode) {\n      case I_PushInteger:\n        return this._stepPushInteger();\n      case I_PushString:\n        return this._stepPushString();\n      case I_PushVariable:\n        return this._stepPushVariable();\n      case I_SetVariable:\n        return this._stepSetVariable();\n      case I_UnsetVariable:\n        return this._stepUnsetVariable();\n      case I_Label:\n        return this._stepLabel();\n      case I_Jump:\n        return this._stepJump();\n      case I_JumpIfFalse:\n        return this._stepJumpIfFalse();\n      case I_JumpIfStructure:\n        return this._stepJumpIfStructure();\n      case I_JumpIfTuple:\n        return this._stepJumpIfTuple();\n      case I_Call:\n        return this._stepCall();\n      case I_Return:\n        return this._stepReturn();\n      case I_MakeTuple:\n        return this._stepMakeTuple();\n      case I_MakeList:\n        return this._stepMakeList();\n      case I_MakeStructure:\n        return this._stepMakeStructure();\n      case I_UpdateStructure:\n        return this._stepUpdateStructure();\n      case I_ReadTupleComponent:\n        return this._stepReadTupleComponent();\n      case I_ReadStructureField:\n        return this._stepReadStructureField();\n      case I_ReadStructureFieldPop:\n        return this._stepReadStructureFieldPop();\n      case I_Add:\n        return this._stepAdd();\n      case I_Dup:\n        return this._stepDup();\n      case I_Pop:\n        return this._stepPop();\n      case I_PrimitiveCall:\n        return this._stepPrimitiveCall();\n      case I_SaveState:\n        return this._stepSaveState();\n      case I_RestoreState:\n        return this._stepRestoreState();\n      case I_TypeCheck:\n        return this._stepTypeCheck();\n      default:\n        throw Error(\n                'VM: opcode '\n              + Symbol.keyFor(this._currentInstruction().opcode)\n              + ' not implemented'\n              );\n    }\n  }\n\n  _stepPushInteger() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    frame.pushValue(new ValueInteger(instruction.number));\n    frame.instructionPointer++;\n  }\n\n  _stepPushString() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    frame.pushValue(new ValueString(instruction.string));\n    frame.instructionPointer++;\n  }\n\n  _stepPushVariable() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    let value = frame.getVariable(instruction.variableName);\n    if (value === null) {\n      fail(\n        instruction.startPos, instruction.endPos,\n        'undefined-variable', [instruction.variableName]\n      );\n    }\n    frame.pushValue(value);\n    frame.instructionPointer++;\n  }\n\n  _stepSetVariable() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    let newValue = frame.popValue();\n\n    /* Check that types are compatible */\n    let oldValue = frame.getVariable(instruction.variableName);\n    if (oldValue !== null) {\n      let oldType = oldValue.type();\n      let newType = newValue.type();\n      if (joinTypes(oldType, newType) === null) {\n        fail(\n          instruction.startPos, instruction.endPos,\n          'incompatible-types-on-assignment', [\n            instruction.variableName,\n            oldType,\n            newType,\n          ]\n        );\n      }\n    }\n\n    /* Proceed with assignment */\n    frame.setVariable(instruction.variableName, newValue);\n    frame.instructionPointer++;\n  }\n\n  _stepUnsetVariable() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    frame.unsetVariable(instruction.variableName);\n    frame.instructionPointer++;\n  }\n\n  _stepLabel() {\n    /* Ignore pseudo-instruction */\n    let frame = this._currentFrame();\n    frame.instructionPointer++;\n  }\n\n  _stepJump() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    frame.instructionPointer = this._labelTargets[instruction.targetLabel];\n  }\n\n  _stepJumpIfFalse() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    let value = frame.popValue(); /* Pop the value */\n    if (value.tag === V_Structure && value.constructorName === 'False') {\n      frame.instructionPointer = this._labelTargets[instruction.targetLabel];\n    } else {\n      frame.instructionPointer++;\n    }\n  }\n\n  _stepJumpIfStructure() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    let value = frame.stackTop(); /* Do not pop the value */\n    if (value.tag === V_Structure\n        && value.constructorName === instruction.constructorName) {\n      frame.instructionPointer = this._labelTargets[instruction.targetLabel];\n    } else {\n      frame.instructionPointer++;\n    }\n  }\n\n  _stepJumpIfTuple() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    let value = frame.stackTop(); /* Do not pop the value */\n    if (value.tag === V_Tuple && value.size() === instruction.size) {\n      frame.instructionPointer = this._labelTargets[instruction.targetLabel];\n    } else {\n      frame.instructionPointer++;\n    }\n  }\n\n  _stepCall() {\n    let callerFrame = this._currentFrame();\n    let instruction = this._currentInstruction();\n\n    /* Create a new stack frame for the callee */\n    let newFrame = this._newFrame(\n                     instruction.targetLabel,\n                     this._labelTargets[instruction.targetLabel]\n                   );\n    this._callStack.push(newFrame);\n\n    /* Pop arguments from caller's frame and push them into callee's frame */\n    for (let i = 0; i < instruction.nargs; i++) {\n      if (callerFrame.stackEmpty()) {\n        fail(\n          instruction.startPos, instruction.endPos,\n          'too-few-arguments', [instruction.targetLabel]\n        );\n      }\n      newFrame.pushValue(callerFrame.popValue());\n    }\n  }\n\n  _stepReturn() {\n    let innerFrame = this._currentFrame();\n\n    let returnValue;\n    if (innerFrame.stackEmpty()) {\n      returnValue = null;\n    } else {\n      /* Take a snapshot when leaving a routine other than the program */\n      this._takeSnapshot(innerFrame.routineName);\n\n      returnValue = innerFrame.popValue();\n      if (!innerFrame.stackEmpty()) {\n        throw Error('VM: stack should be empty');\n      }\n    }\n\n    this._callStack.pop();\n    if (this._callStack.length === 0) {\n      /* There are no more frames in the call stack, which means\n       * that we are returning from the main program. */\n      throw new RuntimeExitProgram(returnValue);\n    } else {\n      /* There are further frames in the call stack, which means\n       * that we are returning from a function. */\n      let outerFrame = this._currentFrame();\n      if (returnValue !== null) {\n        outerFrame.pushValue(returnValue);\n      }\n      outerFrame.instructionPointer++;\n    }\n  }\n\n  _stepMakeTuple() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n\n    let elements = [];\n    for (let i = 0; i < instruction.size; i++) {\n      elements.unshift(frame.popValue());\n    }\n    frame.pushValue(new ValueTuple(elements));\n    frame.instructionPointer++;\n  }\n\n  _stepMakeList() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n\n    let elements = [];\n    for (let i = 0; i < instruction.size; i++) {\n      elements.unshift(frame.popValue());\n    }\n\n    /* Check that the types of the elements are compatible */\n    let contentType = new TypeAny();\n    let index = 0;\n    for (let element of elements) {\n      let oldType = contentType;\n      let newType = element.type();\n      contentType = joinTypes(oldType, newType);\n      if (contentType === null) {\n        fail(\n          instruction.startPos, instruction.endPos,\n          'incompatible-types-on-list-creation', [\n            index,\n            oldType,\n            newType,\n          ]\n        );\n      }\n      index++;\n    }\n    frame.pushValue(new ValueList(elements));\n    frame.instructionPointer++;\n  }\n\n  _stepMakeStructure() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n\n    let fields = {};\n    let n = instruction.fieldNames.length;\n    for (let i = 0; i < n; i++) {\n      let fieldName = instruction.fieldNames[n - i - 1];\n      fields[fieldName] = frame.popValue();\n    }\n    frame.pushValue(\n      new ValueStructure(\n        instruction.typeName, instruction.constructorName, fields\n      )\n    );\n    frame.instructionPointer++;\n  }\n\n  _stepUpdateStructure() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n\n    let newFields = {};\n    let newFieldNames = [];\n    let n = instruction.fieldNames.length;\n    for (let i = 0; i < n; i++) {\n      let fieldName = instruction.fieldNames[n - i - 1];\n      newFields[fieldName] = frame.popValue();\n      newFieldNames.unshift(fieldName);\n    }\n\n    /* Check that it is a structure and built with the same constructor */\n    let structure = frame.popValue();\n    if (structure.tag !== V_Structure) {\n      fail(\n        instruction.startPos, instruction.endPos,\n        'expected-structure-but-got', [\n          instruction.constructorName,\n          i18n(Symbol.keyFor(structure.tag)),\n        ]\n      );\n    }\n    if (structure.constructorName !== instruction.constructorName) {\n      fail(\n        instruction.startPos, instruction.endPos,\n        'expected-constructor-but-got', [\n          instruction.constructorName,\n          structure.constructorName,\n        ]\n      );\n    }\n    if (structure.typeName !== instruction.typeName) {\n      throw Error('VM: UpdateStructure instruction does not match type.');\n    }\n\n    /* Check that the types of the fields are compatible */\n    for (let fieldName of newFieldNames) {\n      let oldType = structure.fields[fieldName].type();\n      let newType = newFields[fieldName].type();\n      if (joinTypes(oldType, newType) === null) {\n        fail(\n          instruction.startPos, instruction.endPos,\n          'incompatible-types-on-structure-update', [\n            fieldName,\n            oldType,\n            newType,\n          ]\n        );\n      }\n    }\n\n    /* Proceed with structure update */\n    frame.pushValue(structure.updateFields(newFields));\n    frame.instructionPointer++;\n  }\n\n  _stepReadTupleComponent() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    let tuple = frame.stackTop();\n    if (tuple.tag !== V_Tuple) {\n      fail(\n        instruction.startPos, instruction.endPos,\n        'expected-tuple-value-but-got', [tuple.type()]\n      );\n    }\n    if (instruction.index >= tuple.size()) {\n      fail(\n        instruction.startPos, instruction.endPos,\n        'tuple-component-out-of-bounds', [\n          tuple.size(), instruction.index,\n        ]\n      );\n    }\n    frame.pushValue(tuple.components[instruction.index]);\n    frame.instructionPointer++;\n  }\n\n  _stepReadStructureFieldGeneric(shouldPopStructure) {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    let structure;\n    if (shouldPopStructure) {\n      structure = frame.popValue();\n    } else {\n      structure = frame.stackTop();\n    }\n    if (structure.tag !== V_Structure) {\n      fail(\n        instruction.startPos, instruction.endPos,\n        'expected-structure-value-but-got', [structure.type()]\n      );\n    }\n    if (!(instruction.fieldName in structure.fields)) {\n      fail(\n        instruction.startPos, instruction.endPos,\n        'structure-field-not-present', [\n          structure.fieldNames(),\n          instruction.fieldName,\n        ]\n      );\n    }\n    frame.pushValue(structure.fields[instruction.fieldName]);\n    frame.instructionPointer++;\n  }\n\n  _stepReadStructureField() {\n    this._stepReadStructureFieldGeneric(false); /* Do not pop the structure */\n  }\n\n  _stepReadStructureFieldPop() {\n    this._stepReadStructureFieldGeneric(true);  /* Pop the structure */\n  }\n\n  /* Instruction used for testing/debugging */\n  _stepAdd() {\n    let frame = this._currentFrame();\n    let v1 = frame.popValue();\n    let v2 = frame.popValue();\n    frame.pushValue(v1.add(v2));\n    frame.instructionPointer++;\n  }\n\n  _stepDup() {\n    let frame = this._currentFrame();\n    let value = frame.popValue();\n    frame.pushValue(value);\n    frame.pushValue(value);\n    frame.instructionPointer++;\n  }\n\n  _stepPop() {\n    let frame = this._currentFrame();\n    frame.popValue();\n    frame.instructionPointer++;\n  }\n\n  _stepPrimitiveCall() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n\n    /* Pop arguments from stack */\n    let args = [];\n    for (let i = 0; i < instruction.nargs; i++) {\n      args.unshift(frame.popValue());\n    }\n\n    /* Check that the primitive exists */\n    if (!this._primitives.isOperation(instruction.primitiveName)) {\n      fail(\n        instruction.startPos, instruction.endPos,\n        'primitive-does-not-exist', [instruction.primitiveName]\n      );\n    }\n\n    let primitive = this._primitives.getOperation(instruction.primitiveName);\n\n    /* Check that the number of expected parameters coincides with\n     * the actual arguments provided */\n    if (primitive.argumentTypes.length !== instruction.nargs) {\n      fail(instruction.startPos, instruction.endPos,\n        'primitive-arity-mismatch', [\n          instruction.primitiveName,\n          primitive.argumentTypes.length,\n          instruction.nargs,\n        ]\n      );\n    }\n\n    /* Check that the types of all parameters coincide with the types of the\n     * actual arguments */\n    for (let i = 0; i < instruction.nargs; i++) {\n      let expectedType = primitive.argumentTypes[i];\n      let receivedType = args[i].type();\n      if (joinTypes(expectedType, receivedType) === null) {\n        fail(\n          instruction.startPos, instruction.endPos,\n          'primitive-argument-type-mismatch', [\n            instruction.primitiveName,\n            i + 1,\n            instruction.nargs,\n            expectedType,\n            receivedType,\n          ]\n        );\n      }\n    }\n\n    /* Validate the arguments using the primitive-specific validator */\n    primitive.validateArguments(\n      instruction.startPos, instruction.endPos, this.globalState(), args\n    );\n\n    /* Proceed to call the primitive operation */\n    let result = primitive.call(this.globalState(), args); /* mutates 'args' */\n    if (result !== null) {\n      frame.pushValue(result);\n    }\n\n    /* Take a snapshot after calling the primitive operation */\n    this._takeSnapshot(instruction.primitiveName);\n\n    frame.instructionPointer++;\n  }\n\n  _stepSaveState() {\n    let frame = this._currentFrame();\n    this._globalStateStack.push(this.globalState().clone());\n    frame.instructionPointer++;\n  }\n\n  _stepRestoreState() {\n    let frame = this._currentFrame();\n    this._globalStateStack.pop();\n    if (this._globalStateStack.length === 0) {\n      throw Error('RestoreState: the stack of global states is empty.');\n    }\n    frame.instructionPointer++;\n  }\n\n  _stepTypeCheck() {\n    let frame = this._currentFrame();\n    let instruction = this._currentInstruction();\n    let expectedType = instruction.type;\n    let receivedType = frame.stackTop().type();\n    if (joinTypes(expectedType, receivedType) === null) {\n      fail(\n        instruction.startPos, instruction.endPos,\n        'expected-value-of-type-but-got', [\n          expectedType,\n          receivedType,\n        ]\n      );\n    }\n    frame.instructionPointer++;\n  }\n\n  /* Return the current dynamic stack of regions */\n  regionStack() {\n    let regionStack = [];\n    for (let stackFrame of this._callStack) {\n      let instruction = this._code.at(stackFrame.instructionPointer);\n      regionStack.push(instruction.startPos.region);\n    }\n    return regionStack;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/vm.js","\n/*\n * A board format FMT is a pair of two functions:\n *\n *   fromJboard : jboard -> string\n *   toJboard   : string -> jboard\n *\n * where \"string\" is a string in the given format, and\n * \"jboard\" is the internal format produced/consumed by\n * the RuntimeState class in src/runtime.js.\n *\n * Internal format:\n *   jboard.width  = width of the board\n *   jboard.height = height of the board\n *   jboard.head   = array [x, y] with the position of the head\n *   jboard.board  = array of <width> elements,\n *                   each of which is an array of <height> elements,\n *                   each of which is a cell, of the form\n *                     {\"a\": na, \"n\": nn, \"r\": nr, \"v\": nv}\n *                   in such a way that:\n *                     jboard.board[x][y].a = number of blue  stones at (x, y)\n *                     jboard.board[x][y].n = number of black stones at (x, y)\n *                     jboard.board[x][y].r = number of red   stones at (x, y)\n *                     jboard.board[x][y].v = number of green stones at (x, y)\n */\n\nclass BoardFormat {\n  constructor(formatName, description, extension, fromJboard, toJboard) {\n    this._formatName = formatName;\n    this._description = description;\n    this._extension = extension;\n    this._fromJboard = fromJboard;\n    this._toJboard = toJboard;\n  }\n\n  get formatName() {\n    return this._formatName;\n  }\n\n  get description() {\n    return this._description;\n  }\n\n  get extension() {\n    return this._extension;\n  }\n\n  get fromJboard() {\n    return this._fromJboard;\n  }\n\n  get toJboard() {\n    return this._toJboard;\n  }\n}\n\nexport function apiboardFromJboard(jboard) {\n  let apiboard = {};\n  apiboard.head = {x: jboard.head[0], y: jboard.head[1]};\n  apiboard.width = jboard.width;\n  apiboard.height = jboard.height;\n  apiboard.table = [];\n  for (let y = 0; y < jboard.height; y++) {\n    let row = [];\n    for (let x = 0; x < jboard.width; x++) {\n      let cellO = jboard.board[x][y];\n      let cell = {};\n      if (cellO.a > 0) {\n        cell.blue = cellO.a;\n      }\n      if (cellO.n > 0) {\n        cell.black = cellO.n;\n      }\n      if (cellO.r > 0) {\n        cell.red = cellO.r;\n      }\n      if (cellO.v > 0) {\n        cell.green = cellO.v;\n      }\n      row.push(cell);\n    }\n    apiboard.table.unshift(row);\n  }\n  return apiboard;\n}\n\nexport function apiboardToJboard(apiboard) {\n  let jboard = {};\n  jboard.head = [apiboard.head.x, apiboard.head.y];\n  jboard.width = apiboard.width;\n  jboard.height = apiboard.height;\n  jboard.board = [];\n  for (let x = 0; x < jboard.width; x++) {\n    let column = [];\n    for (let y = 0; y < jboard.height; y++) {\n      let cell = apiboard.table[jboard.height - y - 1][x];\n      let ca = ('blue' in cell) ? cell.blue : 0;\n      let cn = ('black' in cell) ? cell.black : 0;\n      let cr = ('red' in cell) ? cell.red : 0;\n      let cv = ('green' in cell) ? cell.green : 0;\n      column.push({\n        'a': ca,\n        'n': cn,\n        'r': cr,\n        'v': cv,\n      });\n    }\n    jboard.board.push(column);\n  }\n  return jboard;\n}\n\nfunction gsboardFromJboard(jboard) {\n  let gsboard = {};\n  gsboard.x = jboard.head[0];\n  gsboard.y = jboard.head[1];\n  gsboard.sizeX = jboard.width;\n  gsboard.sizeY = jboard.height;\n  gsboard.table = [];\n  for (let y = 0; y < jboard.height; y++) {\n    let row = [];\n    for (let x = 0; x < jboard.width; x++) {\n      let cell = jboard.board[x][y];\n      row.push({\n        'blue': cell.a,\n        'black': cell.n,\n        'red': cell.r,\n        'green': cell.v,\n      });\n    }\n    gsboard.table.unshift(row);\n  }\n  return JSON.stringify(gsboard);\n}\n\nfunction gsboardToJboard(gsBoardString) {\n  let gsboard = JSON.parse(gsBoardString);\n  let jboard = {};\n  jboard.head = [gsboard.x, gsboard.y];\n  jboard.width = gsboard.sizeX;\n  jboard.height = gsboard.sizeY;\n  jboard.board = [];\n  for (let x = 0; x < jboard.width; x++) {\n    let column = [];\n    for (let y = 0; y < jboard.height; y++) {\n      let cell = gsboard.table[jboard.height - y - 1][x];\n      column.push({\n        'a': cell.blue,\n        'n': cell.black,\n        'r': cell.red,\n        'v': cell.green,\n      });\n    }\n    jboard.board.push(column);\n  }\n  return jboard;\n}\n\nexport function gbbFromJboard(jboard) {\n  let gbb = [];\n  gbb.push('GBB/1.0');\n  gbb.push(\n    'size'\n    + ' ' + jboard.width.toString()\n    + ' ' + jboard.height.toString()\n  );\n  for (let y = 0; y < jboard.height; y++) {\n    for (let x = 0; x < jboard.width; x++) {\n      let cell = jboard.board[x][y];\n      if (cell.a + cell.n + cell.r + cell.v === 0) {\n        continue;\n      }\n      let c = 'cell ' + x.toString() + ' ' + y.toString();\n      if (cell.a > 0) {\n        c += ' Azul ' + cell.a.toString();\n      }\n      if (cell.n > 0) {\n        c += ' Negro ' + cell.n.toString();\n      }\n      if (cell.r > 0) {\n        c += ' Rojo ' + cell.r.toString();\n      }\n      if (cell.v > 0) {\n        c += ' Verde ' + cell.v.toString();\n      }\n      gbb.push(c);\n    }\n  }\n  gbb.push(\n    'head'\n    + ' ' + jboard.head[0].toString()\n    + ' ' + jboard.head[1].toString()\n  );\n  return gbb.join('\\n') + '\\n';\n}\n\nexport function gbbToJboard(gbb) {\n  let i = 0;\n  let jboard = {};\n\n  function isWhitespace(x) {\n    return x === ' ' || x === '\\t' || x === '\\r' || x === '\\n';\n  }\n\n  function isNumeric(str) {\n    for (let i = 0; i < str.length; i++) {\n      if ('0123456789'.indexOf(str[i]) === -1) {\n        return false;\n      }\n    }\n    return str.length > 0;\n  }\n\n  function skipWhitespace() {\n    /* Skip whitespace */\n    while (i < gbb.length && isWhitespace(gbb[i])) {\n      i++;\n    }\n  }\n\n  function readToken() {\n    let t = [];\n    skipWhitespace();\n    while (i < gbb.length && !isWhitespace(gbb[i])) {\n      t.push(gbb[i]);\n      i++;\n    }\n    return t.join('');\n  }\n\n  function readN(errmsg) {\n    let t = readToken();\n    if (!isNumeric(t)) {\n      throw Error(errmsg);\n    }\n    t = parseInt(t, 10);\n    if (t < 0) {\n      throw Error(errmsg);\n    }\n    return t;\n  }\n\n  function readRange(a, b, errmsg) {\n    let t = readN(errmsg);\n    if (t < a || t >= b) {\n      throw Error(errmsg);\n    }\n    return t;\n  }\n\n  if (readToken() !== 'GBB/1.0') {\n    throw Error('GBB/1.0: Board not in GBB/1.0 format.');\n  }\n  if (readToken() !== 'size') {\n    throw Error('GBB/1.0: Board lacks a size declaration.');\n  }\n  jboard.width = readN('GBB/1.0: Board width is not a number.');\n  jboard.height = readN('GBB/1.0: Board height is not a number.');\n  if (jboard.width <= 0 || jboard.height <= 0) {\n    throw Error('GBB/1.0: Board size should be positive.');\n  }\n  jboard.head = [0, 0];\n  jboard.board = [];\n  for (let i = 0; i < jboard.width; i++) {\n    let row = [];\n    for (let j = 0; j < jboard.height; j++) {\n      row.push({'a': 0, 'n': 0, 'r': 0, 'v': 0});\n    }\n    jboard.board.push(row);\n  }\n\n  let headDeclared = false;\n  let cellDeclared = {};\n  let colores = {\n    'Azul': 'a',\n    'A': 'a',\n    'Negro': 'n',\n    'N': 'n',\n    'Rojo': 'r',\n    'R': 'r',\n    'Verde': 'v',\n    'V': 'v',\n  };\n\n  while (i < gbb.length) {\n    let op = readToken();\n    if (op === '') {\n      break;\n    } else if (op === 'head') {\n      if (headDeclared) {\n        throw Error('GBB/1.0: Head position cannot be declared twice.');\n      }\n      headDeclared = true;\n      let hx = readRange(0, jboard.width, 'GBB/1.0: Invalid head position.');\n      let hy = readRange(0, jboard.height, 'GBB/1.0: Invalid head position.');\n      jboard.head = [hx, hy];\n    } else if (op === 'cell') {\n      let cx = readRange(0, jboard.width, 'GBB/1.0: Invalid cell position.');\n      let cy = readRange(0, jboard.height, 'GBB/1.0: Invalid cell position.');\n      if ([cx, cy] in cellDeclared) {\n        throw Error('GBB/1.0: Cell cannot be declared twice.');\n      }\n      cellDeclared[[cx, cy]] = true;\n\n      let colorDeclared = {};\n      while (i < gbb.length) {\n        let color = readToken();\n        if (!(color in colores)) {\n          i -= color.length;\n          break;\n        }\n        let colorId = colores[color];\n        if (colorId in colorDeclared) {\n          throw Error('GBB/1.0: Color cannot be declared twice.');\n        }\n        let n = readN('GBB/1.0: Invalid amount of stones.');\n        jboard.board[cx][cy][colorId] = n;\n      }\n    } else {\n      throw Error('GBB/1.0: Malformed board: unknown command \"' + op + '\".');\n    }\n  }\n  return jboard;\n}\n\nlet BOARD_FORMAT_LIST = [\n\n  new BoardFormat(\n    'jboard',\n    'Representation of a board as a JavaScript object for internal usage.',\n    'jboard',\n    JSON.stringify,\n    JSON.parse\n  ),\n\n  new BoardFormat(\n    'gs-weblang-cli-json-board',\n    'Representation of a board as a Javascript object' +\n    ' used by the gs-weblang-cli tool.',\n    'json',\n    gsboardFromJboard,\n    gsboardToJboard\n  ),\n\n  new BoardFormat(\n    'gbb',\n    'GBB/1.0',\n    'gbb',\n    gbbFromJboard,\n    gbbToJboard,\n  ),\n\n];\n\nexport let DEFAULT_FORMAT = 'gs-weblang-cli-json-board';\nexport let BOARD_FORMATS = {};\nfor (let boardFormat of BOARD_FORMAT_LIST) {\n  BOARD_FORMATS[boardFormat.formatName] = boardFormat;\n}\n\nfunction fileExtension(filename) {\n  let parts = filename.split('.');\n  return parts[parts.length - 1];\n}\n\nfunction fileBoardFormat(filename) {\n  let extension = fileExtension(filename);\n  for (let fmt of BOARD_FORMAT_LIST) {\n    if (extension === fmt.extension) {\n      return fmt;\n    }\n  }\n  return BOARD_FORMATS[DEFAULT_FORMAT];\n}\n\nconst fs = require('fs');\n\nexport function readJboardFromFile(filename) {\n  let format = fileBoardFormat(filename);\n  let contents = fs.readFileSync(filename, 'utf8');\n  return format.toJboard(contents);\n}\n\nexport function writeJboardToFile(filename, jboard) {\n  let format = fileBoardFormat(filename);\n  let contents = format.fromJboard(jboard);\n  fs.writeFileSync(filename, contents, 'utf8');\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/board_formats.js"],"sourceRoot":""}